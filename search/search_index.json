{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Learn to Homelab","text":""},{"location":"#how-to-use-our-site","title":"How to use our site:","text":"<p>At the top of your browser, you will see a navigation bar; the tabs are separated by courses that you can follow along with on our YouTube Channel. On the left side of your screen, we have pages for each video in the series; on the right side, we have the table of contents for the current video/topic you are reading about.</p>"},{"location":"#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"BasicNetworking/EP1_switchconfiguration/","title":"How To Configure Cisco Switches (The Basics)","text":""},{"location":"BasicNetworking/EP1_switchconfiguration/#resources","title":"Resources","text":"<p>Here is where you will go to download Packet Tracer: download</p> <p>Here is the GitHub repo with all the Packet Tracer files we will use for the course Pkt files</p> <p>You will download them by selecting the episode:</p> <p> </p> <p>Then by clicking raw download, after that double click it in your downloads folder and it will open it automatically in Packet tracer:</p> <p> </p>"},{"location":"BasicNetworking/EP1_switchconfiguration/#getting-started-with-packet-tracer","title":"Getting Started With Packet Tracer","text":"<ol> <li>To add multiple Items you hold down ctrl </li> <li>Click Options / Preferences / (Always show port Labels in Logical Workspace) AND (Align logical workspace objects) to keep things aligned.</li> </ol>"},{"location":"BasicNetworking/EP1_switchconfiguration/#network-overview","title":"Network Overview","text":"<p>Here is a our Topology </p> <p> </p> <p>First things first we need to connect all our devices like shown below. </p> <ol> <li>Select the lightning bolt tab</li> <li>Find the black straight cable called (copper straight through) and connect your devices like the image below</li> </ol> Informative Section ! <p>When in the Configuration area you cannot save your changes with wr BUT to force ANY command you can use 'do' before the command and it will work</p> <p> </p> Warning Box Example <p>Note that the green lights on your devices only signifies that the device is turned on. They do not confirm that the device is functioning properly.</p>"},{"location":"BasicNetworking/EP1_switchconfiguration/#set-computer-ips","title":"Set Computer IPs","text":"<ol> <li>Double click on each pc (one at a time)</li> <li>Select the Desktop Tab</li> <li>Select IP configuration and assign the following IP addresses:<ol> <li>PC_1 (192.168.50.101)</li> <li>PC_2 (192.168.50.102)</li> <li>Set the subnet mask as if it doesn't do it automatically (255.255.255.0)</li> </ol> </li> </ol> Informative Section ! <p> You can configure multiple ports at one time with the following command: [Switch(config)]# interface range GigabitEthernet 0/1 - 10</p>"},{"location":"BasicNetworking/EP1_switchconfiguration/#command-line-interface-cli-overview","title":"COMMAND LINE INTERFACE (CLI) OVERVIEW:","text":"<p>COMMAND LINE INTERFACE (CLI) OVERVIEW:</p> Mode Name Capabilities User EXEC Mode - Basic monitoring commands (<code>show</code>,\u00a0<code>ping</code>,\u00a0<code>traceroute</code>).  - Cannot modify configurations or restart devices. Privileged EXEC Mode - Full system access (<code>show running-config</code>,\u00a0<code>debug</code>,\u00a0<code>reload</code>).  - Enter global configuration mode (<code>configure terminal</code>). Global Configuration Mode - Modify system-wide settings (hostname, passwords).  - Enter submodes (interface, line, routing protocols). Setup Mode - Initial setup wizard for devices with no startup configuration.  - Configures basic IP, hostname, and passwords. ROM Monitor (ROMMON) - Low-level troubleshooting (password recovery, IOS image restoration).  - Accessed during boot failures."},{"location":"BasicNetworking/EP1_switchconfiguration/#configure-the-switches","title":"Configure the Switches","text":"Informative Section ! <p>Double click on either switch (you will need to do the following commands on both switches) and then click the CLI tab. </p> <p>Hostname:</p> <p>The purpose of the hostname is to identify your device. Below are the commands to set the hostname. Typically, a hostname will include information about the device such as building number, room number, device model, etc.</p> <pre><code>Switch&gt;enable\n</code></pre> <p>Note: This will give you access to the Privileged EXEC mode. Notice that the \u2018&gt;\u2019 prompt is replaced with a \u2018#\u2019.</p> <pre><code>Switch#config t\n</code></pre> <p>Note: This will give you access to the Configuration mode, allowing you to make changes to the device settings. </p> <pre><code>Switch(config)#hostname Switch_A\n</code></pre> <p>Note: This changes the hostname of the device you are configuring. Notice on the next line that the default name \u2018Switch\u2019 is replaced with the new hostname. </p> <pre><code>Switch_A(config)#exit\n\nSwitch_A#\n</code></pre>"},{"location":"BasicNetworking/EP1_switchconfiguration/#setting-passwords","title":"Setting Passwords","text":"<p>Passwords: </p> <p>Passwords keep the device secure and ensures that only people who have the need to know can access the device. Typically, passwords will be unique and created by the infrastructure team (you and your peers) and will be changed periodically, or whenever someone loses the need to know. The following passwords will be the only passwords used on Cisco devices in this block, and will be consistently used for the remainder of this course. It is critical that you type in the passwords correctly, or you may end up locking yourself out of the device. This may result with you having to restart and losing hours of work. Note: when you are prompted to enter a password (for console, vty, enable secret, etc.) you will NOT see text appear when you type! For the remainder of this course, all your Cisco passwords should be as follows:</p> <ol> <li>Enable Secret\u2026\u2026\u2026\u2026\u2026..enspass </li> <li>Console\u2026\u2026..\u2026\u2026\u2026\u2026.\u2026..conpass </li> <li>VTY (Telnet)\u2026\u2026\u2026\u2026.\u2026\u2026.vtypass </li> </ol> <p>Enable Secret: </p> <pre><code>Switch_A#config t \nSwitch_A(config)#enable secret enspass\n</code></pre> <p>Console: </p> <pre><code>Switch_A(config)#line console 0 \nSwitch_A(config-line)#logging synchronous\n</code></pre> <p>Note: IOS displays syslog messages to the console users at any time, even during the typing of a command. To avoid interruptions, add the \u2018logging synchronous command\u2019. </p> <pre><code>Switch_A(config-line)#password conpass \nSwitch_A(config-line)#login\n</code></pre> Informative Section ! <p>Note: It is important to include \u2018login\u2019 to the password configuration, if overlooked the password will not be prompted.</p> <pre><code>Switch_A(config-line)#exit\n</code></pre> <p>VTY (Telnet/SSH):</p> <pre><code>Switch_A(config)#line vty 0 ?\n</code></pre> <p>Note: When configuring line vty always type line vty 0 ? to determine how many vty lines are on the device you are configuring. It will vary on each device model. </p> <pre><code>Switch_A (config)#line vty 0 15\nSwitch_A(config-line)#logging synchronous \nSwitch_A(config-line)#password vtypass \nSwitch_A(config-line)#login \nSwitch_A(config-line)#exit\n</code></pre> Warning Box Example <p>REMEMBER THAT YOU NEED TO DO ALL THE ABOVE COMMANDS TO THE B SWITCH TOO</p>"},{"location":"BasicNetworking/EP1_switchconfiguration/#securing-passwords","title":"SECURING PASSWORDS","text":"<p>Securing the passwords: </p> <p>Passwords are good for security but not if they are compromised. Encrypting them will help prevent this. If left unencrypted, they will be visible to anyone accessing the device. The passwords are encrypted on a Cisco device by starting the password-encryption service as follows. </p> <pre><code>Switch_A#config t\n\nSwitch_A(config)#service password-encryption\n</code></pre> <p>Note: This encrypts all your passwords, making them unreadable to anyone accessing the device. Once the service is enabled, any passwords entered previously or afterwards will be encrypted. </p> <pre><code>Switch_A(config)#exit\n</code></pre> Informative Section ! <p>Once the passwords are encrypted, they will be unintelligible to anyone accessing the device.</p>"},{"location":"BasicNetworking/EP1_switchconfiguration/#setting-a-banner","title":"SETTING A BANNER","text":"<p>Banners on networks are used to let someone logging in know that they are logging into a companies network. It serves the purpose of informing the user that if they do not have the need to know to access the device, there will be potential legal consequences if they proceed. Having this warning here makes it possible to hold people accountable for logging into devices they are not supposed to access. The banner must start and end with the same character called a delimiting character to let the device know the beginning and ending and cannot be used in the message. \u2018#\u2019 is used below as the character. </p> <pre><code>Switch_A#config t \nSwitch_A(config)#banner motd\n</code></pre> <pre><code>#You are accessing a LTH Company Network Switch, WARNING unauthorized access will be prosecuted!!!#\n</code></pre> <p>Note: The above syntax is a single command and is intended to be typed out in one line. </p> <pre><code>Switch_A(config)#exit\n</code></pre>"},{"location":"BasicNetworking/EP1_switchconfiguration/#configuring-switch-interfaces","title":"CONFIGURING SWITCH INTERFACES","text":"<p>Interfaces: Depending on the device, you will have either FastEthernet or GigabitEthernet Interfaces. Both will be configured with the same information but how you type it in for the initial configuration will vary slightly. To start with, let\u2019s look at the interfaces in the switch. </p> <pre><code>Switch_A#show run\n</code></pre> <p>Tapping the space bar will show everything loaded up as part of the IOS including the amount of interfaces.</p> <p>Trunk ports:</p> <pre><code>Switch_A#config t \nSwitch_A(config)#interface g0/1 \nSwitch_A(config-if)#description Trunk to Switch_B\n</code></pre> <p>Note: This will describe what the port is connected to. The description is purely for organizational purposes and does not affect functionality. </p> <pre><code>Switch_A(config-if)#switchport trunk encapsulation dot1q\n</code></pre> <p>Note: This command will tag traffic that passes through this interface using 802.1q. It is critical for future Labs to function. Trunk interfaces on Cisco switches also require that encapsulation is implemented before you enter the mode. </p> <pre><code>Switch_A(config-if)#switchport mode trunk\n</code></pre> <p>Note: This assigns the interface as a Trunk port (for connections to other networking devices such as another Switch or a Router).</p> <pre><code>Switch_A(config-if)#exit\n</code></pre> <p>Access ports (Used):</p> <pre><code>Switch_A(config)#interface fa0/1\nSwitch_A(config-if)#description Access to PC1 host \nSwitch_A(config-if)#switchport mode access\n</code></pre> Informative Section ! <p>This assigns the interface as an Access port (for connections to end-user equipment such as a PC, VoIP phone, or Printer)</p> <pre><code>Switch_A(config-if)#spanning-tree portfast\n</code></pre> <p>Note: This command streamlines the normal Spanning-Tree Protocol process of preventing loops in the network by identifying this interface as only connecting to an end device, where a loop could not occur. </p> <pre><code>Switch_A(config-if)#exit\n</code></pre> <p>Access ports (Unused):</p> <pre><code>Switch_A(config)#interface fa0/1-(however many ports on your particular switch are not in use)\nSwitch_A(config-if)#switchport mode access \nSwitch_A(config-if)#spanning-tree portfast \nSwitch_A(config-if)#shutdown\n</code></pre> <p>Note: This will \u2018turn off\u2019 the interface, preventing anyone who plugs into it from accessing the network. </p> <p>IMPORTANT: Make sure you repeat these steps for all other unused ports on the device! </p> <pre><code>Switch_A(config-if)#exit \nSwitch_A(config)#exit\n</code></pre>"},{"location":"BasicNetworking/EP1_switchconfiguration/#verifying-configurations","title":"VERIFYING CONFIGURATIONS","text":"<p>Verify that everything is configured properly by following the steps below. </p> <pre><code>Switch_A#show run\n</code></pre> <p>Note: This will show you the current running-configuration. Every change you make on a Cisco switch is live and \u2018running\u2019 on the device. You can look here to check the current settings on interfaces, banners, passwords, etc.</p>"},{"location":"BasicNetworking/EP1_switchconfiguration/#changing-configurations","title":"CHANGING CONFIGURATIONS","text":"<p>To change things such as hostname, banner, passwords, and descriptions you will simply retype the original commands with the correct information. To remove switchport trunk encapsulation dot1q, switchport mode trunk, switchport mode access, and spanning-tree portfast you will type no in front of the original command. </p> Warning Box Example <p>Below is an example. Please do not actually perform this step as it is intended only to show how it would be done if necessary. </p> <pre><code>Switch_A#config t \nSwitch_A(config)#interface g3/3 \nSwitch_A(config-if)#no description\n</code></pre> <p>Note: This removes the description on interface g3/3. </p> <pre><code>Switch_A(config-if)#exit \nSwitch_A(config)#exit\n</code></pre>"},{"location":"BasicNetworking/EP1_switchconfiguration/#backing-up-configurations","title":"BACKING UP CONFIGURATIONS","text":"<p>Saving Configurations: Saving your configurations is crucial when working on equipment. If your device loses power with settings that are not properly saved, all of your configurations will be lost. First, we will see what the device looks like when it has not been saved.</p> <pre><code>Switch_A#show start\n</code></pre> Warning Box Example <p>This will show you the current startup-configuration. The settings you see here are what is currently saved to the device. This will also be the settings the device will boot up with if it is powered off and powered back on again. You have not saved anything yet, so you will see that is blank. If the device were to be shut off right now, you would lose all the work you have done up until this point.</p> <p>To save your configurations follow the steps below. Make sure you are consistently backing up your configurations! DO NOT wait until you have a device fully configured to save your configurations!!!!!!</p> <pre><code>Switch_A#copy run start\n</code></pre> <p>or</p> <pre><code>Cisco_Switch_A#wr\n</code></pre> <pre><code>Destination filename [startup-config]? (press enter)\n</code></pre> <p>Note: This command copies the 'running-configuration' to the 'startup-configuration'. By doing this you will ensure that the device will boot up with the configurations it is currently running. This is a command you should be doing often throughout the rest of labs. Without it, you could lose hours of work if you close a project or turn off your devices. (This command is the same as 'write memory').</p> <p>To verify that the configurations saved we will type in the following.</p> <pre><code>Cisco_Switch_A#show start\n</code></pre> <p>Note: Now that you have properly backed-up your configurations, you will see the same configurations as you would on your running-configuration (show run).</p>"},{"location":"BasicNetworking/EP1_switchconfiguration/#testing-connectivity","title":"TESTING CONNECTIVITY","text":"<p>Trouble shoot Switch 2 to allow the proper ping request to occur!</p> <p>Double click onto PC1, follow the steps below to test the connection between PC1 and PC2.</p> <ol> <li>Select the Desktop Tab</li> <li>Select the Command Promt tile</li> <li>ping PC 2 PC1&gt; ping 192.168.50.102</li> </ol>"},{"location":"LinuxMasterGuide/EP1_CreateLinuxEnvironment/","title":"EP1 - Create Linux Environment","text":""},{"location":"LinuxMasterGuide/EP1_CreateLinuxEnvironment/#welcome-to-a-complete-linux-guide-in-2025","title":"Welcome to a Complete Linux Guide in 2025","text":"<p>The team here at LTH is so excited to see you here, in this series we will cover a tremendous amount of useful information in regards to Linux commands that will bring you up to a serious professional level.</p>"},{"location":"LinuxMasterGuide/EP1_CreateLinuxEnvironment/#create-a-linux-environment","title":"Create a Linux Environment","text":"<p>In this episode we will cover: </p> <ol> <li>Installing Ubuntu Desktop</li> <li>Installing VirtualBox</li> <li>Installing VboxTools</li> </ol>"},{"location":"LinuxMasterGuide/EP1_CreateLinuxEnvironment/#checkout-this-series-here","title":"Checkout this series here","text":"<p>Check out videos in this playlist here</p>"},{"location":"LinuxMasterGuide/EP1_CreateLinuxEnvironment/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/","title":"Command Line Basics","text":"<p>In this Episode, we will cover the most common Linux command-line commands.</p> <p>Linux has two main ways of identifying a user\u2019s access level. A $ is for the normal user and a # sign is usually for the root or privileged user</p> Command What it Does Why would you use it Echo Displays the text you type out PWD (print working directory) Prints the directory you are in LS (list directories) List the sub-directories attached to the directory you are in Touch Create new empty files File Tells you the file type Cat Displays file Content Good for small files Nano Text editor Less Navigate through a file by pages To navigate through big files History History of the commands that you previously entered To recall a command you may need again Cp (copy) Copies a file to a new location Keeps the original file and gives a copy of the file Mv (move) Used for moving files and also renaming them Moves the original file to the specific location Mkdir (Make Directory) It will create a directory if it doesn\u2019t already exist. Directories are good for organizing files and applications Rm (remove) Used to delete files and directories. Find Helps us search for files You may forgotten where you stored a config file but know the name Help (other tool name) Used to see the instructions on how to use a command line tool Man (other tool name) Displays a manual for that tool Whatis (other tool name) Provides a brief description of command line program Alias/Unalias (name) Assigns a name to commands Sometimes typing commands can get really repetitive, or if you need to type a long command many times, it\u2019s best to have an alias you can use for that. To create an alias for a command you simply specify an alias name and set it to the command. Exit Logout command"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#checkout-this-series-here","title":"Checkout this series here","text":"<p>Check out videos in this playlist here</p>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#updating-linux","title":"Updating Linux","text":"<p>Before you do anything, it is always best to ensure your Linux Environment is up to date and pulling the latest repos:</p> <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#echo","title":"Echo","text":"<p>Description: Prints text or variables to the terminal. Useful for displaying messages or variable values.</p> <pre><code>echo \"Hello, world!\"\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#pwd-print-working-directory","title":"PWD (print working directory)","text":"<p>Description: Shows the full absolute path of your current directory.</p> <pre><code>pwd\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#ls-list-directories","title":"LS (list directories)","text":"<p>Description: Lists files and directories in the current location. Add options for details or hidden files.</p> <pre><code>ls -l\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#touch","title":"Touch","text":"<p>Description: Creates a new, empty file or updates the timestamp of an existing file.</p> <pre><code>touch example.txt\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#file","title":"File","text":"<p>Description: Shows the type of a file (text, directory, binary, etc.).</p> <pre><code>file example.txt\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#cat","title":"Cat","text":"<p>Description: Concatenates and displays the content of files in the terminal.</p> <pre><code>cat example.txt\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#nano","title":"Nano","text":"<p>Nano can be used as a text editor, which is usually found in most Linux distributions.</p> <pre><code>nano example.txt\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#less","title":"Less","text":"<p>Description: Opens a file interactively so you can scroll through it, useful for long files.</p> <pre><code>less example.txt\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#history","title":"History","text":"<p>Description: Displays a list of previously entered commands.</p> <pre><code>history\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#cp-copy","title":"Cp (copy)","text":"<p>Description: Copies files or directories to a new location.</p> <pre><code>cp example.txt backup.txt\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#mv-move","title":"Mv (move)","text":"<p>Description: Moves or renames files and directories.</p> <pre><code>mv backup.txt archive.txt\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#mkdir-make-directory","title":"Mkdir (Make Directory)","text":"<p>Description: Creates a new directory (folder).</p> <pre><code>mkdir myfolder\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#rm-remove-file","title":"Rm (remove file)","text":"<p>Description: Deletes files or directories. Use with caution!</p> <pre><code>rm example.txt\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#rmdir-remove-directory","title":"Rmdir (remove directory)","text":"<pre><code>rmdir testdir\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#find","title":"Find","text":"<p>Description: Searches for files and directories matching criteria (name, type, etc.).</p> <pre><code>find . -name \"example.txt\"\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#help-other-tool-name","title":"Help (other tool name)","text":"<p>Description: Shows brief help for a command, listing options and usage.</p> <pre><code>ls --help\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#man-other-tool-name","title":"Man (other tool name)","text":"<p>Description: Displays the full manual (documentation) for a command.</p> <pre><code>man ls\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#whatis-other-tool-name","title":"Whatis (other tool name)","text":"<p>Description: Gives a one-line description of a command.</p> <pre><code>whatis ls\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#aliasunalias-name","title":"Alias/Unalias (name)","text":"<p>Description: Creates or removes shortcuts for commands (aliases).</p> <pre><code>alias ll='ls -l'\n</code></pre> <p>To get rid of an alias type:</p> <pre><code>unalias ll\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#exit","title":"Exit","text":"<p>Description: Closes the current terminal session or shell.</p> <pre><code>exit\n</code></pre>"},{"location":"LinuxMasterGuide/EP2_CLI_Basics/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"LinuxMasterGuide/EP3_UserMangament/","title":"Linux User Management Tutorial 2025","text":""},{"location":"LinuxMasterGuide/EP3_UserMangament/#checkout-this-series-here","title":"Checkout this series here","text":"<p>Check out videos in this playlist here</p>"},{"location":"LinuxMasterGuide/EP3_UserMangament/#1-users-and-groups","title":"1. Users and Groups","text":"<p>Linux manages system access through users and groups. Each user has a unique user ID (UID) and belongs to one or more groups identified by group IDs (GID). Permissions to files and processes are controlled by this system, ensuring security and access control on multi-user systems.</p> <p>Example:</p> <ul> <li>Users have home directories typically in <code>/home/username</code>.</li> <li>Groups organize multiple users for easier permission management.</li> </ul>"},{"location":"LinuxMasterGuide/EP3_UserMangament/#2-root","title":"2. root","text":"<p>The root user (UID 0) is the superuser with unlimited access to the system. Normal users should avoid working as root to prevent accidental system damage. Instead, tools like <code>sudo</code> allow trusted users to run specific commands as root safely.</p> <p>Command example:</p> <ul> <li> <p>Run a command as root using sudo:</p> <pre><code>sudo apt update\n</code></pre> </li> <li> <p>Switch to root shell (less recommended):</p> <pre><code>sudo su\n</code></pre> </li> <li> <p>Switch back to normal user:</p> <pre><code>su &lt;username&gt;\n</code></pre> </li> </ul>"},{"location":"LinuxMasterGuide/EP3_UserMangament/#3-etcpasswd","title":"3. /etc/passwd","text":"<p><code>/etc/passwd</code> is a system file listing all the user accounts. Each line represents a user account, containing fields such as username, UID, GID, user information, home directory, and login shell. It is readable by all users but does not contain password hashes.</p> <p>View <code>/etc/passwd</code> contents:</p> <pre><code>cat /etc/passwd\n</code></pre> <p>The general format of <code>/etc/passwd</code> is:</p> <pre><code>username : password_placeholder : UID : GID : comment/gecos : home_directory : login_shell\n</code></pre> <p>Each field is broken down in the table below, with root as an example:</p> Field # Value Name / Field Description Meaning in This Context 1 <code>root</code> Username The login name of the account. This is the superuser account. 2 <code>x</code> Password placeholder Indicates the actual hashed password is stored in <code>/etc/shadow</code> (for security), not here. 3 <code>0</code> UID (User ID) Unique ID for the user. <code>0</code> means this account is the root superuser with full system permissions. 4 <code>0</code> GID (Group ID) Primary group ID. <code>0</code> refers to the <code>root</code> group from <code>/etc/group</code>. 5 <code>root</code> Comment / GECOS field A descriptive field, often the real name or account description. Here it\u2019s simply \u201croot.\u201d 6 <code>/root</code> Home directory The root user\u2019s personal home folder, where configs and files are stored. 7 <code>/bin/bash</code> Login shell The default shell program started when this account logs in \u2014 here, the GNU Bash shell."},{"location":"LinuxMasterGuide/EP3_UserMangament/#4-etcshadow","title":"4. /etc/shadow","text":"<p><code>/etc/shadow</code> stores encrypted passwords and account expiration information for users. It is readable only by root or users with proper privileges to protect password security.</p> <p>View with root privilege:</p> <pre><code>sudo cat /etc/shadow\n</code></pre> <p>To understand what each section means for the shadow folder see the table below:</p> Field Number Value Meaning 1 root Username \u2014 the account name. 2 * Password field \u2014 here <code>*</code> means the account is locked or has no valid password set. 3 20134 Last password change date \u2014 number of days since Jan 1, 1970 (Unix epoch). 4 0 Minimum days before password can be changed \u2014 0 means the password can be changed any time. 5 99999 Maximum days password is valid before requiring change \u2014 99999 means password never expires. 6 7 Warning period \u2014 number of days before expiration to warn the user to change the password. 7 (empty) Inactivity period \u2014 days after password expires before account is disabled (empty means disabled immediately or no inactivity setting). 8 (empty) Account expiration date \u2014 number of days since Jan 1, 1970, when the account is disabled (empty means no expiration). 9 (empty) Reserved field \u2014 currently unused."},{"location":"LinuxMasterGuide/EP3_UserMangament/#5-etcgroup","title":"5. /etc/group","text":"<p><code>/etc/group</code> lists all groups on the system and their members, making it easier to see which users belong to each group.</p> <p>View <code>/etc/group</code>:</p> <pre><code>cat /etc/group\n</code></pre> <p>The general format of each line in <code>/etc/group</code> is:</p> <pre><code>group_name : password_placeholder : GID : member_list\n</code></pre>"},{"location":"LinuxMasterGuide/EP3_UserMangament/#6-user-management-tools","title":"6. User Management Tools","text":"<p>Linux provides several command-line tools to manage users and groups:</p> <ul> <li> <p>Add a user:</p> <pre><code>sudo useradd username\n</code></pre> </li> <li> <p>Delete a user:</p> <pre><code>sudo userdel username\n</code></pre> </li> <li> <p>Modify a user (e.g., change username or home directory):</p> <pre><code>sudo usermod -l newname oldname\n</code></pre> </li> <li> <p>Add a group:</p> <pre><code>sudo groupadd groupname\n</code></pre> </li> <li> <p>Add user to group:</p> <pre><code>sudo usermod -aG groupname username\n</code></pre> </li> <li> <p>List user groups:</p> <pre><code>groups username\n</code></pre> </li> </ul>"},{"location":"LinuxMasterGuide/EP3_UserMangament/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/","title":"Linux Permissions Tutorial 2025","text":""},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/#1-file-permissions","title":"1. File Permissions","text":"<p>Linux files have permissions defining who can read, write, or execute them. Permissions are split into three sets:</p> <ul> <li>User (owner)</li> <li>Group (group members)</li> <li>Others (everyone else)</li> </ul> <p>Permissions appear in the format: <code>-rwxr-xr-x</code></p> <ul> <li>The first character indicates file type (<code>-</code> for file, <code>d</code> for directory).</li> <li>Then three sets of <code>rwx</code> refer to user, group, and others.</li> <li><code>r</code> = read, <code>w</code> = write, <code>x</code> = execute, <code>-</code> = no permission.</li> </ul> <p>Instead of typing rwx you can also use numbers based on the table below:</p> Number Permission 4 Read 2 Write 1 Execute <p>Example:</p> <pre><code>ls -l example.txt\n</code></pre>"},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/#2-chmod-modifying-permissions","title":"2. Chmod Modifying Permissions","text":"<p>Use <code>chmod</code> to add (<code>+</code>), remove (<code>-</code>), or set permissions directly (numeric mode).</p> <ul> <li> <p>Add executable permission to the user:</p> <pre><code>chmod u+x myfile.txt\n</code></pre> </li> <li> <p>Remove executable permission from the group:</p> <pre><code>chmod g-x myfile.txt\n</code></pre> </li> <li> <p>Set exact permissions with numeric mode (e.g., <code>755</code>):</p> <pre><code>chmod 755 myfile.txt\n</code></pre> <ul> <li>7 = read+write+execute (4+2+1) for user</li> <li>5 = read+execute (4+1) for group and others</li> </ul> </li> </ul>"},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/#3-ownership-permissions","title":"3. Ownership Permissions","text":"<p>Files are owned by a user and a group. To view ownership:</p> <pre><code>ls -l myfile.txt\n</code></pre> <p>Change ownership with <code>chown</code>:</p> <ul> <li> <p>Change owner:</p> <pre><code>sudo chown alice myfile.txt\n</code></pre> </li> <li> <p>Change owner and group:</p> <pre><code>sudo chown alice:developers myfile.txt\n</code></pre> </li> <li> <p>Change group only:</p> <pre><code>sudo chgrp developers myfile.txt\n</code></pre> </li> </ul>"},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/#4-umask","title":"4. Umask","text":"<p><code>umask</code> controls the default permissions for newly created files or directories by masking out permissions (meaning we are SUBTRACTING permissions). A <code>umask</code> of <code>0022</code> removes write permission for group and others by default.</p> <p>Here is a table on how permissions work. The top table is more traditional for chmod, well the second table is usually what is used with Umask.</p> Number Permission 4 Read 2 Write 1 Execute Read Write Execute Total Value Symbolic Equivalent: 0 0 0 0 0 0 1 1 x 0 2 0 2 w 0 2 1 3 wx 4 0 0 4 r 4 0 1 5 rx 4 2 0 6 rw 4 2 1 7 rw <p> </p> <p>View your current mask:</p> <pre><code>umask\n</code></pre> <p>Set a new mask (temporary for session):</p> <pre><code>umask 027\n</code></pre> <p>This means new files will have permissions masked accordingly (e.g., 750 for directories).</p>"},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/#set-permanent-umask-for-one-user","title":"Set Permanent Umask for One User","text":"<p>Edit the user's shell startup files in their home director</p> <p>Example if you are logged in as the root user controlling accounts:</p> <pre><code>sudo nano /home/&lt;user&gt;/.bashrc (.profile, .bash_profile)\n</code></pre> <p>these may include:</p> <ul> <li> <p><code>~/.bashrc</code> (For Bash shell, most common)</p> <pre><code>sudo nano ~/.bashrc\n</code></pre> </li> <li> <p><code>~/.profile</code> (For login shells)</p> <pre><code>sudo nano ~/.profile\n</code></pre> </li> <li> <p><code>~/.bash_profile</code> (Sometimes preferred in Bash)</p> <pre><code>sudo nano ~/.bash_profile\n</code></pre> </li> </ul> <p>Add the following line to the end of one of these files:</p> <pre><code>umask 027   # Example, pick your required umask value\n</code></pre> <p>After saving, the new umask will apply for all new shells and logins by that user. It affects only newly created files and directories, not existing ones. The change takes effect at the next login or when the terminal is restarted</p>"},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/#5-setuid-set-user-id","title":"5. Setuid (Set User ID)","text":"<p>The setuid bit allows users to run an executable with the permissions of the file owner (usually root). It is indicated by <code>s</code> in the user execute permission place.</p> <p>Example: Check setuid bit on <code>passwd</code>:</p> <pre><code>ls -l /usr/bin/passwd\n</code></pre> <p>Set the setuid bit:</p> <pre><code>sudo chmod u+s &lt;program you want to allow executible permissions&gt;\n</code></pre>"},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/#6-setgid-set-group-id","title":"6. Setgid (Set Group ID)","text":"<p>The setgid bit allows users to run an executable with the permissions of the group owner or lets files created in a directory inherit the directory\u2019s group. It appears as <code>s</code> in the group execute position.</p> <p>Set setgid on a directory:</p> <pre><code>sudo chmod g+s &lt;/shared-directory full path&gt;\n</code></pre> <p>Files created inside inherit the group ownership of the directory.</p>"},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/#7-process-permissions","title":"7. Process Permissions","text":"<p>Processes run with the permissions of the user who started them. Permissions determine if a process can read/write/execute files or access system resources. To check a process\u2019s user, use:</p> <pre><code>ps -u username\n</code></pre> <p>You can also check process capabilities related to security policies, but generally, processes inherit file permissions from their user identity.</p>"},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/#8-the-sticky-bit","title":"8. The Sticky Bit","text":"<p>When set on a directory, the sticky bit prevents users from deleting or renaming files owned by others within that directory. It appears as a <code>t</code> in the others\u2019 execute bit position.</p> <p>Example directory with sticky bit:</p> <pre><code>ls -ld /tmp\n</code></pre> <p>Set sticky bit on a directory:</p> <pre><code>sudo chmod +t /shared-directory\n</code></pre> <p>This ensures only file owners (or root) can delete or rename files inside.</p>"},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/#checkout-this-series-here","title":"Checkout this series here","text":"<p>Check out videos in this playlist here</p>"},{"location":"LinuxMasterGuide/EP4_LinuxPermissions/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/","title":"Linux Processes Tutorial 2025","text":""},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#1-ps-processes","title":"1 ps (Processes)","text":"<p>The <code>ps</code> command shows a snapshot of currently running processes. It lists details like process ID (PID), user, CPU and memory usage, status, and command.</p> <pre><code>ps aux\n</code></pre> <ul> <li><code>a</code> shows processes for all users</li> <li><code>u</code> adds detailed info (user, CPU%, MEM%)</li> <li><code>x</code> shows processes without a controlling terminal</li> </ul>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#2-controlling-terminal","title":"2. Controlling Terminal","text":"<p>A controlling terminal (TTY) is a terminal device associated with a process. Many processes run without a TTY, especially daemons or background jobs.</p> <ul> <li>ps: Shows information about running processes.</li> <li>-e: Lists all Processes on the system (not just those belonging to the current user).</li> <li>-o pid,tty,cmd: Customizes the output columns to show:</li> <li>pid: Process ID \u2014 a unique number for each running process.</li> <li>tty: Terminal associated with the process (shows which terminal, if any, started the process).</li> <li>cmd: Command line that started the process.</li> </ul> <pre><code>ps -eo pid,tty,cmd\n</code></pre> <p>This shows each process with its PID, associated terminal (if any), and the command.</p>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#3-process-details","title":"3. Process Details","text":"<p>Processes have attributes like PID, parent PID (PPID), status, CPU time, and command name. The <code>ps</code> command can display these with specific formatting:</p> <ul> <li>ps: Displays information about active processes.</li> <li>-e: Shows all processes on the system, not just those belonging to the current user or terminal.</li> <li>-o: Specifies the output format (which columns to display).</li> </ul> <p>The list after <code>-o</code> defines which columns you\u2019ll see:</p> <ul> <li>pid: Process ID \u2014 the unique number for each running process.</li> <li>ppid: Parent Process ID \u2014 shows which process started (is the parent of) this one.</li> <li>stat: Process status \u2014 displays the state of the process (e.g., running, sleeping, stopped) along with additional flags (like if it\u2019s a foreground process).</li> <li>cmd: Command \u2014 shows the command used to start the process, including its arguments</li> </ul> <pre><code>ps -eo pid,ppid,stat,cmd\n</code></pre> <ul> <li><code>STAT</code> shows process state codes (e.g., S = sleeping, R = running).</li> </ul>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#4-process-creation","title":"4. Process Creation","text":"<p>Processes are created when a parent process forks a child. Common shells or applications spawn new processes. You can observe new processes appearing by running:</p> <pre><code>ps aux --sort=start_time | tail -10\n</code></pre> <p>This shows the 10 most recently started processes.</p>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#5-process-termination","title":"5. Process Termination","text":"<p>Processes can end normally or be terminated by signals. A terminated process is removed from the process table. You can kill a process by PID (next topic).</p>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#6-signals","title":"6. Signals","text":"<p>Signals are notifications sent to processes to trigger actions like stop, continue, or terminate. Common signals include:</p> <ul> <li><code>SIGTERM</code> (signal 15) \u2014 polite termination request</li> <li><code>SIGKILL</code> (signal 9) \u2014 forceful termination</li> <li><code>SIGSTOP</code> (signal 19) \u2014 suspend process</li> <li><code>SIGCONT</code> (signal 18) \u2014 resume process</li> </ul> <p>Send a signal using <code>kill</code>:</p> <pre><code>kill -&lt;SIGTERM number&gt; &lt;pid&gt;\n</code></pre>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#7-kill-terminate","title":"7. kill (Terminate)","text":"<p>Use <code>kill</code> to send signals to processes. The default signal is SIGTERM. To force kill:</p> <pre><code>kill -9 &lt;pid&gt;\n</code></pre> <p>You can also terminate processes by name:</p> <pre><code>pkill firefox\n</code></pre>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#8-niceness","title":"8. niceness","text":"<p>Niceness is a value affecting process priority; lower niceness means higher priority. You would want critical system infrastructure to have a lower value. You can start a process with a niceness (priority) value:</p> <pre><code>nice -n 10 command\n</code></pre> <p>Change an existing process\u2019s niceness:</p> <pre><code>renice 5 &lt;pid&gt;\n</code></pre>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#9-process-states","title":"9. Process States","text":"<p>Processes are in states such as:</p> <ul> <li>Running (R)</li> <li>Sleeping (S)</li> <li>Stopped (T)</li> <li>I: Idle kernel thread (a kernel thread that is currently idle)</li> <li>Zombie (Z) \u2014 a terminated process waiting for parent cleanup</li> </ul> <p>View states in <code>ps</code>:</p> <pre><code>ps -eo pid,state,cmd\n</code></pre>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#10-proc-filesystem","title":"10. /proc Filesystem","text":"<p><code>/proc</code> is a virtual filesystem exposing detailed info about processes and system status. Each process has a directory <code>/proc/&lt;pid&gt;</code> with files describing it. View proc systems with:</p> <pre><code>ls /proc\n</code></pre> <p>Explore /proc for CPU info, memory usage, open files, and more.</p> <pre><code>cat /proc/&lt;pid&gt;/status\n</code></pre>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#11-job-control","title":"11. Job Control","text":"<p>Job control allows managing background and foreground processes interactively in shells. Important commands:</p> <ul> <li><code>bg</code> \u2014 resume job in background</li> <li><code>fg</code> \u2014 bring job to foreground</li> <li><code>jobs</code> \u2014 list current jobs</li> </ul>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#job-control-example","title":"Job Control Example:","text":"<p>Step 1: Start a long-running job in the background</p> <pre><code>sleep 300 &amp;\n</code></pre> <p>Output will look like: </p> <p>[1] 12345 (job number and process ID)</p> <p>Step 2: List the jobs</p> <pre><code>jobs\n</code></pre> <p>Output example:</p> <p>[1]+ Running sleep 300 &amp;</p> <p>Step 3: Stop a foreground job (start one first)</p> <pre><code>sleep 500\n</code></pre> <p>Press CTRL+Z to pause it</p> <p>You'll see:</p> <p>[2]+ Stopped sleep 500</p> <p>Step 4: Resume it in the background</p> <pre><code>bg %2\n</code></pre> <p>Output: </p> <p>[2]+ sleep 500 &amp;</p> <p>Step 5: Bring it back to the foreground</p> <pre><code>fg %2\n</code></pre> <p>Now you are attached to it again</p> <p>To kill a job you can do</p> <pre><code>kill %&lt;job number&gt;\n</code></pre>"},{"location":"LinuxMasterGuide/EP5_LinuxProcesses/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"hardwarereview/ep0_unififlex2gig/","title":"Our Review of the Ubiquiti Flex Mini 2.5G","text":"<p>If you are new here, check out our channel where every article has an accompanied video!</p>"},{"location":"hardwarereview/ep0_unififlex2gig/#overview-of-the-ubiquiti-flex-mini-25g","title":"Overview of the Ubiquiti Flex Mini 2.5G","text":"<p>The Ubiquiti Flex Mini 2.5G is a compact 5-port managed network switch that offers 2.5 Gigabit Ethernet connectivity at an affordable price point of $49. Here's an overview of its key features and specifications:</p>"},{"location":"hardwarereview/ep0_unififlex2gig/#ubiquiti-flex-mini-25g-specifications","title":"Ubiquiti Flex Mini 2.5G Specifications","text":""},{"location":"hardwarereview/ep0_unififlex2gig/#hardware-specifications","title":"Hardware Specifications","text":"<ul> <li>Ports: 5x 2.5 GbE RJ45 ports</li> <li>Dimensions: 117.1 x 90 x 21.2 mm (4.6 x 3.5 x 0.8\")</li> <li>Weight: 206 g (7.3 oz)</li> <li>Enclosure: Polycarbonate</li> <li>Power: PoE input or USB-C power adapter (included)</li> <li>Power consumption: AC/DC input: 5W, PoE input: 6.4W</li> <li>Operating temperature: -20 to 45\u00b0C (-4 to 113\u00b0F)</li> </ul>"},{"location":"hardwarereview/ep0_unififlex2gig/#performance","title":"Performance","text":"<ul> <li>Total non-blocking throughput: 12.5 Gbps</li> <li>Switching capacity: 25 Gbps</li> <li>Forwarding rate: 18.6 Mpps</li> </ul>"},{"location":"hardwarereview/ep0_unififlex2gig/#networking-features","title":"Networking Features","text":"<ul> <li>Layer 2 switching</li> <li>STP / RSTP with priorities</li> <li>Port isolation</li> <li>Storm control</li> <li>Port mirroring</li> <li>Multicast / broadcast rate limiting</li> <li>Flow control</li> <li>Jumbo frame support</li> <li>Egress rate limiting</li> <li>VLAN tagging and management</li> </ul>"},{"location":"hardwarereview/ep0_unififlex2gig/#management","title":"Management","text":"<ul> <li>Managed through UniFi Network application (version 8.4.62 and later)</li> <li>Ethernet in-band management</li> </ul>"},{"location":"hardwarereview/ep0_unififlex2gig/#additional-notes","title":"Additional Notes","text":"<ul> <li>Does not support PoE output or link aggregation</li> <li>No Layer 3 features or 802.1X support</li> <li>Includes a factory reset button</li> <li>LED indicators for power and port activity</li> </ul> <p>The Flex Mini 2.5G is an upgrade from the original Flex Mini, offering faster speeds and more advanced VLAN capabilities. It's well-suited for home networks, small offices, or as a desk switch for connecting multiple 2.5G-capable devices</p>"},{"location":"hardwarereview/ep0_unififlex2gig/#closing-thoughts","title":"Closing Thoughts","text":"<p>This switch is great for the user wanting to add 2.5gig to their network at an affordable price while maintaining some creature comforts! </p>"},{"location":"hardwarereview/ep0_unififlex2gig/#useful-links","title":"Useful links","text":"<ul> <li>Buy the switch here</li> <li>The 3D printer 10inch rack mount can be found here</li> <li>Download the application version of the software for your desktop here</li> <li>Download the server version here</li> </ul>"},{"location":"homelabseries/EP0_startguide/","title":"Welcome","text":"<p>LTH is glad to see you here! This free course focuses on beginners and newcomers to IT, Cyber Security, and Network Engineering prospects (and really anyone interested in IT or self-hosting services)!</p> <p>Our YouTube videos accompany this series; click here to find that series on YouTube!</p>"},{"location":"homelabseries/EP0_startguide/#introduction","title":"Introduction","text":"<p>What does this course encompass and it is right for me is a question most of you are asking. You may even be asking yourself if you have enough knowledge to be successful in this course, and the answer is yes you do. </p> <p>The course \"HomeLab\" you are about to embark on was created so that even the most novice individual could follow. Please take the time to read through this page and every lesson page; there are lots of great details!</p>"},{"location":"homelabseries/EP0_startguide/#what-is-a-homelab","title":"What is a Homelab?","text":"<p>An IT homelab is a personal setup where enthusiasts and professionals experiment with and learn about computer systems, networking, cybersecurity, and server management at home. Using hardware like old PCs, servers, or mini computers, homelabbers create virtual environments to explore IT concepts, test software, and develop skills in areas like virtualization, network security, and system administration. Homelabs mimic business IT environments, enabling hands-on practice with technologies like firewalls, cloud services, and automation tools, helping users advance their careers, troubleshoot, and stay current with industry trends.</p>"},{"location":"homelabseries/EP0_startguide/#first-things-first","title":"First things first","text":"<p>This course is about getting hands-on skills to pass an interview that will be an entry-level job for many of you. Although there are many high-level or \"very knowledgeable\" areas of focus throughout this course, experience is king. You also must understand that everyone puts in their \"sweat equity\" before they reach the top. If your family needs to support you or your spouse must start working while you transition or take a pay cut to get an entry-level role, that is sweat equity. The technical field is a very fast return on investment AS LONG AS you apply yourself. You should be qualified and take on responsibility for the position you want to be in. Do not get in that ugly mindset that you are worth some set amount of money, prove it. </p> <p>Lastly, before we get started, realize that this industry is COMPETITIVE, if you want to study, get a job, and sit back, this industry is not for you. I have been doing this for about ten years, and to this day, I spend around 10-20 hours a week bettering myself. </p>"},{"location":"homelabseries/EP0_startguide/#what-you-will-learn","title":"What you will learn","text":"Warning Box Example <p>Some videos are not required to setup a successful home lab, use case will determine that, please read on.</p> <p>Below, you will find a breakdown of the network we are going to set up and some of the services. The image you are looking at in IT is called a topology. Topologies come in two forms: logical and physical. Any time we use the term logical, we refer to digital or how the computers will communicate or host services. Physical topologies show you how the devices are interconnected. </p> <p>In this case, our topology does both; we can see the arrows from the public internet down and imagine each arrow as being an ethernet cable connecting our homelab devices together. We can see for this course, we will use three servers, but realistically, if you do not want to or cannot afford to, you can simply use one server and host all your stuff on that. The other two servers will be used to teach a more professional and closer to an enterprise setup so to speak. Please take a moment to look at our topology for a high-level overview of what will be covered here. </p> Informative Section ! <p>Throughout this course, during each episode, you will see the topology map with a red box. The content contained within the red box is what the lesson will be covering and what part of the home lab setup we are on.</p> <p>  Here is what that topology looks like in physical form without the stage 2 servers.  </p> <p>Okay before we get down to the course content it is important to understand that there are certain things you are not REQUIRED to do. What do we mean by this? HomeLabs are about learning and catering towards what you want, however some people may expose things to the internet or use a virtual private network (VPN) that will allow them access to their internal resources externally. In this course we will cover some of that but will NOT be making services public through the firewall. Best practice will be to use a VPN tunnel and that is what is covered in this course. Because of this, the Firewall video/device is not required.</p> <p>I know budget is always of concern for anyone, so again pay attention to what is required and what is not required below. By not having to setup a firewall, you can invest that money into a small form factor PC and install Proxmox on there. </p>"},{"location":"homelabseries/EP0_startguide/#not-required","title":"Not required","text":"<ol> <li>Opnsense/PFsense Firewall (Episode - 3)</li> <li>Stage 2, as indicated in the topology breakdown. A NAS backup and fail-over machine are solely for people learning more advanced technologies and capabilities. They are not required for the main purpose of this course.</li> </ol>"},{"location":"homelabseries/EP0_startguide/#order-of-content","title":"Order of Content","text":"<ol> <li>Getting started (Intro video) </li> <li>Note taking</li> <li>Installing your switch</li> <li>Firewall</li> <li>Proxmox</li> <li>Setting up our first VM (Ubuntu)</li> <li>First Video Game Server (minecraft)</li> <li>Setup Pi-Hole with Proxmox</li> <li>Setup NextCloud with Proxmox</li> <li>Setup Tailscale with Proxmox</li> <li>Zabbix Server With Proxmox</li> <li>Zabbix Agent Install on a VM</li> <li>Zabbix Dashboard Creation</li> <li>Install the Wazuh Server</li> <li>Install the Wazuh Agent</li> <li>Install TrueNas Scale</li> </ol> <p>This series continues but these are the fundamental episodes of the series. If you would like to find more content related to this series, please the column on the left. </p>"},{"location":"homelabseries/EP10_zabbixserver/","title":"Zabbix Server Install","text":"<p>Zabbix is an open-source monitoring tool that monitors IT infrastructure, including:  Networks, Servers, Virtual machines (VMs), Cloud services, Applications, Databases, and Websites</p> <p>In this episode we will cover how to setup the server side of Zabbix and in the followin episode/article we will show you the agent side.</p>"},{"location":"homelabseries/EP10_zabbixserver/#our-homelab-topology","title":"Our Homelab Topology","text":""},{"location":"homelabseries/EP10_zabbixserver/#the-order-of-commands","title":"The Order of Commands","text":""},{"location":"homelabseries/EP10_zabbixserver/#list-of-commands-used","title":"List of commands used","text":"<p>If you do not care about the screenshots, here is a list of commands used!</p> Warning Box Example <p>Some commands MAY change usually just step 2 based on the current version of Zabbix. All other commands should work though.</p>"},{"location":"homelabseries/EP10_zabbixserver/#install-zabbix-commands","title":"Install zabbix Commands:","text":"<p>Link to Zabbix's site and the commands can be found here</p> <pre><code>sudo -s\n</code></pre> <pre><code>wget https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_7.0+ubuntu22.04_all.deb\n</code></pre> <pre><code>dpkg -i zabbix-release_latest_7.0+ubuntu22.04_all.deb\n</code></pre> <pre><code>apt update\n</code></pre> <pre><code>apt install zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-sql-scripts zabbix-agent\n</code></pre>"},{"location":"homelabseries/EP10_zabbixserver/#install-sql-server","title":"Install SQL server","text":"<p>installs mySQL <pre><code>sudo apt-get install mysql-server\n</code></pre> Starts mySQL on boot <pre><code>sudo systemctl start mysql\n</code></pre> start it <pre><code>service mysql start\n</code></pre> then do <pre><code>mysql\n</code></pre></p>"},{"location":"homelabseries/EP10_zabbixserver/#create-the-database","title":"Create the database","text":"<p><pre><code>sudo mysql\n</code></pre> Formats the database type to a the format Zabbix can understand (utf8mb4) <pre><code>create database zabbix character set utf8mb4 collate utf8mb4_bin;\n</code></pre> With this one the <code>password</code> section is where you assign your database password <pre><code>create user zabbix@localhost identified by 'password';\n</code></pre> Giving your user access to read and write to this database <pre><code>grant all privileges on zabbix.* to zabbix@localhost;\n</code></pre> Set trust for the database <pre><code>set global log_bin_trust_function_creators = 1;\n</code></pre> Exit mySQL <pre><code>quit;\n</code></pre></p> Warning Box Example <p>wait a couple minutes after doing the following command, the script takes awhile to work. You won't see any output for a couple minutes</p> <pre><code>zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz | mysql --default-character-set=utf8mb4 -uzabbix -p zabbix\n</code></pre> <p>Go back into mySQL <pre><code>mysql\n</code></pre></p> <pre><code>set global log_bin_trust_function_creators = 0;\n</code></pre> <pre><code>quit;\n</code></pre> <p>then go into the following config file and update the section (DBPassword=) section with the password you set earlier. It will be under the Database user=Zabbix section.</p> <pre><code>nano /etc/zabbix/zabbix_server.conf\n</code></pre> <p>Start the services with the following commands: <pre><code>systemctl restart zabbix-server zabbix-agent apache2\n</code></pre></p> <pre><code>systemctl enable zabbix-server zabbix-agent apache2\n</code></pre> <p>Now you can go to your Zabbix servers URL with the following format:</p> <pre><code>http://host_machine_ip/zabbix\n</code></pre>"},{"location":"homelabseries/EP10_zabbixserver/#walkthrough","title":"Walkthrough","text":"<p>Create a virutal machine for your Zabbix server. We used 2 cores, 2gb of RAM, and 20gb of storage on an Ubuntu Linux ISO 22.04 Jammy. Here is the ISO</p> <p> </p> <p>First go to Zabbix's site and grab the current version of Zabbix you are downloading, this is very important specifically for step 2 as shown under the order of commands section. Go here</p> <p> </p> <p>Now go ahead and login (SSH) to your freshly created VM for the Zabbix Server</p> <p> </p> <p>Perform the following commands:</p> <pre><code>sudo -s\n</code></pre> <pre><code>wget https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_7.0+ubuntu22.04_all.deb\n</code></pre> <pre><code>dpkg -i zabbix-release_latest_7.0+ubuntu22.04_all.deb\n</code></pre> <pre><code>apt update\n</code></pre> <pre><code>apt install zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-sql-scripts zabbix-agent\n</code></pre> <p>Install SQL server</p> <p>installs mySQL <pre><code>sudo apt-get install mysql-server\n</code></pre> Starts mySQL on boot <pre><code>sudo systemctl start mysql\n</code></pre> start it <pre><code>service mysql start\n</code></pre> then do <pre><code>mysql\n</code></pre></p> <p>Create the mySQL database:</p> <p><pre><code>sudo mysql\n</code></pre> Formats the database type to a the format Zabbix can understand (utf8mb4) <pre><code>create database zabbix character set utf8mb4 collate utf8mb4_bin;\n</code></pre> With this one the <code>password</code> section is where you assign your database password <pre><code>create user zabbix@localhost identified by 'password';\n</code></pre> Giving your user access to read and write to this database <pre><code>grant all privileges on zabbix.* to zabbix@localhost;\n</code></pre> Set trust for the database <pre><code>set global log_bin_trust_function_creators = 1;\n</code></pre> Exit mySQL <pre><code>quit;\n</code></pre></p> <p>At this point we are going to execute the following command, you will notice no response after inputting the command and entering the password for the zabbix user you just created 7 command ago. That is normal, give the script a couple minutes to do its thing.</p> <pre><code>zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz | mysql --default-character-set=utf8mb4 -uzabbix -p zabbix\n</code></pre> <p> </p> <p>Now perform the following commands after the CLI comes back from being blank.</p> <pre><code>mysql\n</code></pre> <pre><code>set global log_bin_trust_function_creators = 0;\n</code></pre> <pre><code>quit;\n</code></pre> <p>We need to now edit the following config file, open it with:</p> <pre><code>nano /etc/zabbix/zabbix_server.conf\n</code></pre> <p> </p> <p>Look for the DBuser=zabbix section and edit the DBPassword= section with the password you just set earlier.</p> <p> </p> <p>It will look like this when you are done. You can then save and exit with ctrl + X then click Y and lastly to save it click enter</p> <p> </p> <p>Now perform the following commands to start the Zabbix server and all its needed counterparts.</p> <pre><code>systemctl restart zabbix-server zabbix-agent apache2\n</code></pre> <pre><code>systemctl enable zabbix-server zabbix-agent apache2\n</code></pre> <p>Now go to your browser and we need to login with the following format:</p> <pre><code>http://host_machine_ip/zabbix\n</code></pre> <p> </p> <p>You will be presented with the following landing page, click next. </p> <p> </p> <p>Make sure everything has a green ok so you know you did it right.</p> <p> </p> <p>Ensure you add the database user password you just set in that config file so Zabbix's panel can access it.</p> <p> </p> <p>Set your server name and timezone</p> <p> </p> <p>ensure all settings have been filled out or go back and fix them</p> <p> </p> <p>login, remember the login for username and password is case sensitive! it is Admin NOT admin.</p> <p>User: Admin</p> <p>Pass: zabbix</p> <p> </p> <p>You are in, stay tuned for next episode on how to setup an agent on your servers, VMs, firewalls, etc!</p> <p> </p>"},{"location":"homelabseries/EP10_zabbixserver/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP11_zabbixagent/","title":"Zabbix Agent install on a VM (Linux)","text":""},{"location":"homelabseries/EP11_zabbixagent/#introduction","title":"Introduction","text":"<p>In this episode we are going to be covering how to setup a Zabbix Agent specifically for Linux but this method really applies for all ways when it comes to configuring the devices. </p> <p>If you want to know how to setup the Zabbix server please find our article/video on that here</p>"},{"location":"homelabseries/EP11_zabbixagent/#getting-started","title":"Getting started","text":"<ol> <li> <p>Find the current agent commands here Select the current Zabbix version you are installing, OS, OS version, Zabbix component (AGENT), database will be MYSQL, and Web server is APACHE</p> </li> <li> <p>Login to your Zabbix Server Panel in the Browser</p> </li> <li> <p>Lastly, select what VM/Machine(s) you want to install your agent(s) on.</p> </li> </ol>"},{"location":"homelabseries/EP11_zabbixagent/#step-by-step-guide","title":"Step by step guide","text":"<p>Now go ahead and login to your select VM/Machine(s)</p> <pre><code>ssh username@ip_address_of_machine\n</code></pre> <p> </p> <p>We are going to start installing the Zabbix Agent using the commands found from our getting started section step 1. In this case we are installing 7.0 for the following commands:</p> <p>Makes you a super user:</p> <pre><code>sudo -s\n</code></pre> <p>Install the REPO:</p> <pre><code>wget https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_7.0+ubuntu22.04_all.deb\n</code></pre> <p>Unpackage the REPO:</p> <pre><code>dpkg -i zabbix-release_latest_7.0+ubuntu22.04_all.deb\n</code></pre> <p>Update the REPOS:</p> <pre><code>apt update\n</code></pre> <p>Install the Agent</p> <pre><code>apt install zabbix-agent\n</code></pre> <p>Start the Zabbix Process</p> <p><pre><code>systemctl restart zabbix-agent\n</code></pre> AND <pre><code>systemctl enable zabbix-agent\n</code></pre></p> <p> </p>"},{"location":"homelabseries/EP11_zabbixagent/#configure-the-zabbix-agent-config-file","title":"Configure the Zabbix Agent Config file","text":"<p>Now we need to change two entires in our config file. We need to point our AGENT AT the IP address of our Zabbix SERVER!</p> <p>That will be done with the following commands:</p> <pre><code>sudo nano /etc/zabbix/zabbix_agentd.conf\n</code></pre> <p>Within that file you need to find:</p> <ol> <li> <p>Change server=(your zabbix server IP)</p> </li> <li> <p>Change serveractive=(your server IP)</p> </li> </ol> <p> </p> <p>AND </p> <p> </p>"},{"location":"homelabseries/EP11_zabbixagent/#check-the-status-of-your-zabbix-agent","title":"Check the Status of Your Zabbix Agent","text":"<p>Now you can verify your Agent is running with the following commands and will run after a VM reboot:</p> <pre><code>sudo systemctl enable zabbix-agent\n</code></pre> <p>Verify the setting:</p> <pre><code>systemctl is-enabled zabbix-agent\n</code></pre> <p> </p>"},{"location":"homelabseries/EP11_zabbixagent/#adding-an-agent-to-your-zabbix-server","title":"Adding an Agent to your Zabbix Server","text":"<p>Now we need to add an agent on the far right under Monitoring / Hosts.</p> <p>On the far right you will see a blue create hosts button.</p> <p>Give the device a hostname, grab the correct template in our case it is the Linux by Zabbix agent NOT the Agent Live one.</p> <p>Then input the IP address of your VM/machine you just installed your Agent on and click add. </p> <p> </p> <p>Now wait about 30 seconds to 5 minutes for the Availability ZBX sign to go green, and you will know its working. Red means its not, and gray is unknown (usually shown when you first add them).</p> <p>You can also click the Latest data tab to see what information it can gather or is gathering. This can take a couple hours to grab more specific data if the machine is even offering that type of data.</p> <p> </p> <p>Picture showing data it is currently pulling:</p> <p> </p>"},{"location":"homelabseries/EP11_zabbixagent/#closing-thoughts","title":"Closing thoughts","text":"<p>That is it! Pretty simple right? Now in another episode we will cover how to add these hosts to data panels on your dashboard but Zabbix is so extensive I would reccomend you Google around yourself and find what you want and add them that way.</p>"},{"location":"homelabseries/EP11_zabbixagent/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP12_zabbixdashboards/","title":"How to create Dashboards in Zabbix","text":""},{"location":"homelabseries/EP12_zabbixdashboards/#introduction","title":"Introduction","text":"<p>This is going to be a more basic article because what dashboards you want, how many you want, and the types of machines/services you are monitoring vary widely. </p> <p>In short, this article will familiarize you with how to create dashboards, grab device information, and the importance of classifying devices by catergories or customers for easy dashboard creation. </p>"},{"location":"homelabseries/EP12_zabbixdashboards/#getting-started","title":"Getting started","text":"<p>Firs go ahead and login to your Zabbix Dashboard/Monitoring service website. Selecting the Dashboard menu on the far left will present you with the following screen.</p> <p>You can view all your dashboards by selecting the all dashboards found on the top right of this page. When editing a dashboard you will be able to save on the top right. </p> <p> </p> <p>After selecting all dashboards you can see a list of all your dashboards. It is best practice to make dashboards for specific customers, job types (network engineers monitoring all the switches and routers for example) etc. You want to try and avoid have cluttered or overwhelming dashboards.</p> <p> </p> <p>After selecting create a new dashboard on the top right, you can select anywhere in the menu to create a widget and will be presented with the following screen. </p> <p>The type of dashboard you pick is how the information will be presented, graphs, tables, pictures, etc. </p> <p>Host groups is a grouping of devices you should have created when adding agents, for example, you should have a group for a specific customer or all your routers/switches. This allows you to pull all their info in quickly. </p> <p>Hosts are a more refined search where you can select certain devices of a group. </p> <p>(do not select add just yet)</p> <p> </p> <p>Before selecting add you will be presented with a screenn like below, this screen depends on what type of widget you created but you are provided a list of resources you can choose to monitor. This will take trial and error though. Some selections may not reveal any information because the agent is unable to pull that type of data (it is service dependent). </p> <p> </p> <p>That is it, here is a quick and basic example of what your newly created dashboard could look like. Super simple, super easy to do! </p> <p> </p>"},{"location":"homelabseries/EP12_zabbixdashboards/#closing-thoughts","title":"Closing thoughts","text":"<p>Join our discord and share screenshots of your custom made dashboards Discord</p>"},{"location":"homelabseries/EP12_zabbixdashboards/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP13_homarr/","title":"How to Install The Homarr Dashboard","text":"<p>EP 22 - Homarr 1.0 Install/Upgrade:</p>"},{"location":"homelabseries/EP13_homarr/#introduction","title":"Introduction","text":"<p>In this episode we are going to cover how to install the Homarr Dashboard. Homarr is a dashboard that helps you manage your server by providing access to all your apps and services in one place. It's highly customizable and integrates with self-hosted applications.</p> Informative Section ! <p>The following commands will work with EITHER a Proxmox VM or Proxmox container!</p>"},{"location":"homelabseries/EP13_homarr/#getting-started","title":"Getting Started","text":"<p>The first thing you will need to do is create a Proxmox VM or container. Please see the image below with the example of the configuration we used for our Homarr Vm. </p> <p> </p> <p>If you want to know where I got the commands shown in the video, they are from the following/trial and error: </p>"},{"location":"homelabseries/EP13_homarr/#useful-links","title":"Useful Links","text":"<ol> <li>Docker for Ubuntu</li> <li>Docker Compose</li> <li>Homarr for Docker Compose</li> <li>After the Homarr Install, how to configure the panel</li> </ol>"},{"location":"homelabseries/EP13_homarr/#how-to-install-homarr","title":"How to Install Homarr","text":"<p>After creating your VM/container, SSH into your about to be Homarr Machine. </p> <p> </p> <p>Now we are going to start installing all the packages (Docker, Docker Compose, and Homarr). </p> <p> </p>"},{"location":"homelabseries/EP13_homarr/#installing-docker","title":"Installing Docker","text":"<p>Adding the GPG keys and Docker repo:</p> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre> <p>Install the Latest Package:</p> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p>Ensure Docker is running after Install, you will get a response like this.</p> <pre><code>sudo docker run hello-world\n</code></pre> <p> </p>"},{"location":"homelabseries/EP13_homarr/#if-docker-hello-fails-do-the-following","title":"If Docker hello fails do the following","text":"<p>if you do not get a response try</p> <pre><code>systemctl status docker.service\n</code></pre> <p>If that shows failed messages, try the following</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl restart docker\n</code></pre> <p>Then try to see its status once again:</p> <pre><code>systemctl status docker.service\n</code></pre> <p> </p>"},{"location":"homelabseries/EP13_homarr/#install-docker-compose","title":"Install Docker Compose","text":"<p>Install Docker Compose with:</p> <pre><code>sudo apt install docker-compose\n</code></pre> <p>Verify that docker compose is installed</p> <pre><code>docker compose version\n</code></pre> <p> </p>"},{"location":"homelabseries/EP13_homarr/#install-homarr","title":"Install Homarr","text":"<p>Then create a docker compose file:</p> <pre><code>nano docker-compose.yml\n</code></pre> <p>Copy the following file config in there from Homarr</p> <pre><code>#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/ajnart/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - ./homarr/configs:/app/data/configs\n      - ./homarr/icons:/app/public/icons\n      - ./homarr/data:/data\n    ports:\n      - '7575:7575'\n</code></pre> <p> </p> <p>Then run the following to start it:</p> <pre><code>sudo docker compose up -d\n</code></pre> <p>Then to login to your machine you will type the following into your browser to access the panel:</p> <pre><code>ip_address:7575\n</code></pre> <p>After you go to the site you will be presented with this screen, make a username and matching password.</p> <p> </p> <p>To edit the dashboard you will select the following icon from the top right</p> <p> </p> <p>You will then be presented with the options APPS / WIDGETS / CATEGORIES. APPS are used to connect VMs, containers, etc. as hyperlinks so we can access those sites/resources quickly.</p> <p> </p> <p>When adding VMs, Containers, or other services you will use the IP address and the port number for both the internal and external address sections after selecting the APP option.</p> <p> </p>"},{"location":"homelabseries/EP13_homarr/#starting-and-stopping-homarr","title":"Starting and Stopping Homarr","text":"<p>Start and stop</p> <p><pre><code>sudo systemctl stop docker\n</code></pre> Restart:</p> <p><pre><code>sudo systemctl restart docker\n</code></pre> Check the status:</p> <pre><code>sudo systemctl status docker\n</code></pre> <p>and start docker compose:</p> <pre><code>sudo docker compose up -d\n</code></pre>"},{"location":"homelabseries/EP13_homarr/#next-steps-after-installing-homarr","title":"Next Steps After Installing Homarr","text":"<p>After you are done installing Homarr check out their content on how to setup Widgets and organize the Dashboard here</p> <p>If you would like to know how to add websites, and your Proxmox machines information like found in the screenshot below, please watch our next episode (EP14)</p> <p> </p>"},{"location":"homelabseries/EP13_homarr/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP14_homarr/","title":"How to Install Proxmox Statistics on The Homarr Dashboard","text":"<p>EP 22 - Homarr 1.0 Install/Upgrade:</p> <p>Here is the example of what we will be covering:</p> <p> </p>"},{"location":"homelabseries/EP14_homarr/#follow-the-steps-on-your-own","title":"Follow the steps on your own","text":"<p>If you would like to follow the 13 steps on your own here is a link to Homarrs documentation. </p>"},{"location":"homelabseries/EP14_homarr/#before-getting-started","title":"Before getting started","text":"<ol> <li> <p>Make sure you login to your Homarr dashboard like we setup in the previous episode.</p> </li> <li> <p>Make sure you login to your Proxmox Machine to create the API key required for stats to be shown in Homarr.</p> </li> </ol>"},{"location":"homelabseries/EP14_homarr/#step-by-step-instructions","title":"Step by Step Instructions","text":"<ol> <li> <p>Navigate to the Proxmox portal, click on Datacenter</p> </li> <li> <p>Expand Permissions, click on Groups</p> </li> <li> <p>Click the Create button</p> </li> <li> <p>Name the group something informative, like api-users (our case we did ytlearngroup)</p> </li> </ol> <p> </p> <ol> <li>Click on the Permissions \"folder\"</li> </ol> <p>Click Add -&gt; Group Permission</p> <p> </p> <ol> <li> <p>Path: /</p> <p>Group: group from Step 4 above</p> <p>Role: PVEAuditor</p> <p>Propagate: Checked</p> </li> </ol> <p> </p> <ol> <li> <p>Expand Permissions, click on Users</p> </li> <li> <p>Click the Add button</p> <p>User name: something informative like api</p> <p>Realm: Proxmox VE authentication server</p> <p>Password: create a secure password for the user</p> <p>Confirm Password: re-enter the password</p> <p>Group: group from Step 4 above  </p> </li> <li> <p>Expand Permissions, click on API Tokens</p> </li> <li> <p>Click the Add button</p> <p>User: user from Step 8 above</p> <p>Token ID: something informative like the application or purpose like homarr</p> <p>Privilege Separation: unchecked</p> </li> </ol> <p> </p> <ol> <li>Copy the Secret that is shown in Step 10 because it is only shown once. </li> </ol> Warning Box Example <p>NOTICE THIS IS THE STEP WHERE YOU CAN GRAB THE CORRECT INTEGRATION KEY FORMAT!</p> <p>You will copy the TokenID into a notepad ADD an = sign and then paste the secret key after that.</p> <pre><code>&lt;User&gt;@pve!&lt;Token ID&gt;=&lt;Secret&gt;\n</code></pre> <p>Exmaple:</p> <pre><code>ytuser@pve!homarr=5b5467-0260-48ab-a8f5-03753d332145\n</code></pre> <p> </p> <ol> <li> <p>Go back to the \"Permissions\" menu</p> <p>Click Add -&gt; API Token Permission</p> </li> </ol> <p> </p> <ol> <li> <p>Path: /</p> <p>API Token: select the API token created in Step 10</p> <p>Role: PVE Auditor</p> <p>Propagate: Checked</p> <p> </p> </li> </ol>"},{"location":"homelabseries/EP14_homarr/#adding-your-api-to-homarrs-dashboard","title":"Adding your API to Homarr's Dashboard","text":"<p>Open your Homarr Dashboard</p> <p>Select the Writing / edit icon.</p> <p> </p> <p>Then the Add tile button</p> <p> </p> <p>Then select \"Apps\"</p> <p> </p> <p>You will then need to grap the IP address of your server and paste it to internal and external.</p> <p> </p> <p>Move over to the integrations tab and this is where you will select your integration as Proxmox and paste your Proxmox API key you made a minute ago. Then select \"Save\".</p> <p> </p> <p>After that you will need to add a Widget like you just added an app.</p> <p> </p> <p>Scroll down until you find System Health Monitoring and add it.</p> <p> </p> <p>Find the newly placed widget on your Dashboard, click the gear icon on the top right to edit it.</p> <p> </p> <p>Lastly, change your settings to match the below screenshot, save, and wait a couple minutes for your data to appear and that is it. (9)</p> <p> </p>"},{"location":"homelabseries/EP14_homarr/#closing-thoughts","title":"Closing thoughts","text":"<p>That is it, if you have any other questions do not forget to hop in our discord! </p>"},{"location":"homelabseries/EP14_homarr/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP15_wazuhserver/","title":"How to Install The Wazuh Server Dependency","text":"<p>In this episode we will cover how to install the Wazuh server \"Agent\". Wazuh is a free, open-source security platform that protects data from security threats. It combines Security Information and Event Management (SIEM) and Extended Detection and Response (XDR) capabilities. </p>"},{"location":"homelabseries/EP15_wazuhserver/#useful-linksinformation","title":"Useful links/Information","text":"<ol> <li> <p>If you want to understand how Wazuh works and all the components behind scenes read about it here</p> </li> <li> <p>The quick start guide we are going to follow found here</p> </li> <li> <p>How Wazuh Rules are formatted can be found here</p> </li> <li> <p>Where to put Wazuh Rules can be found here</p> </li> </ol> Warning Box Example <p>To note, we were unable to get the script to install when attempting to install the Wazuh Server when allocating less than 75Gigs of storage</p>"},{"location":"homelabseries/EP15_wazuhserver/#steps-to-install-wazuh-server","title":"Steps to Install Wazuh Server","text":"<p>Please see the below image on the configuration of the Proxmox VM we used to install the Wazuh Server. </p> <p>We recommend Ubuntu Server and that can be found here DO NOT FORGET TO ENABLE SSH DURING INSTALL</p> <p> </p> <p>If you would like to read the latest information on what Wazuh believes you should have for a proper install, that can be found here</p> <p> </p> <p>AFTER you created your VM please use your CLI of preference to SSH into your Wazuh Server VM.</p> <p> </p> <p>Please paste the following install script (NOTE, this will change with new releases) you can find the latest script here</p> <pre><code>curl -sO https://packages.wazuh.com/4.10/wazuh-install.sh &amp;&amp; sudo bash ./wazuh-install.sh -a\n</code></pre> <p> </p> <p>After the install script completes, you will find your login information at the end of the install, please copy these somewhere for safe keeping.</p> <p> </p> <p>Now you can login to your Wazuh Server by going to the following URL <pre><code>https://server_ip:443\n</code></pre></p> <p> </p> <p>It really is that simple, now you just need to wait a couple minutes for Wazuh to finish setting everything up.</p> <p> </p> <p>That is it! Here is the main dashboard for Wazuh Server!</p> <p> </p>"},{"location":"homelabseries/EP15_wazuhserver/#change-wazuh-to-dark-mode","title":"Change Wazuh to Dark Mode","text":"<p>Now I know all you IT / Computer and / HomeLab lovers desire dark mode! So here is how you do it!</p> <p>Select the hamburger icon on the top left, go down to Dashboard Management / Dashboards Management / Advanced Settings // Scroll down to the appearance section </p> <p> </p> <p>Then all you have to do is turn on dark mode and click save changes.</p> <p> </p> <p>Then you can click the Wazuh \"W\" logo on the top right to go back to the homepage, feel free to explore Wazuh Server or watch our next episode on installing the agent and configuration! </p> <p> </p>"},{"location":"homelabseries/EP15_wazuhserver/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP16_wazuhagent/","title":"How to Install The Wazuh Agent","text":"<p>In this episode we are going to cover the following things on top of installing the Wazuh Agent:</p> <ol> <li>Show the site proof of concepts guide found here</li> <li>We will cover how to install the agent</li> <li>How to investigate a hosts triggered alerts, what they mean, and how to find the information on what the alert is concerned with. </li> <li>How to test triggers and see the event you triggered </li> <li>As well as how to create dashboards and monitor specific events of concern to you.</li> </ol> <p>Here is an example of the concepts guide, simply put it is great info on how to test out your network and ensure Wazuh is doing its job. </p> <p> </p>"},{"location":"homelabseries/EP16_wazuhagent/#installing-the-wazuh-agent","title":"Installing the Wazuh Agent","text":"<p>Login into your Wazuh Dashboard and on the top left you will see Deploy a new agent click in there.</p> <p> </p> <p>You need to select the OS type based on the machine you are planning to install the agent on. Our case is an Intel CPU (x86) and the operating system is Ubuntu which is Debian UNIX based so we will select DEB amd64.</p> <p>Next you will need to add the Wazuh Servers IP address into the Server address box. This makes sense because the indexer is found on the Wazuh server where your dashboard is also being hosted. </p> <p>You can rename the node where you are installing the agent if like.</p> <p>Lastly, we can see step 4 there is a script we need to copy and paste into the node we are installing the Agent on.</p> <p> </p> <p>Next, SSH into your machine and based that script. </p> <p> </p> <p>(Script pasted from the dashboard shown earlier)</p> <p> </p> <p>After that is done we can grab the last part from the dashboard in step 5. This restarts the agent, and ensures it persists on the machine.</p> <p>Step 5 commands depend on what OS you choose but here is the example for Debian Linux <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable wazuh-agent\nsudo systemctl start wazuh-agent\n</code></pre></p> <p> </p> <p>(pasting the commands from step 5 onto the machine we installed the agent on)</p> <p> </p> <p>Go back to your dashboard and wait a couple minutes, on the top left you will then see your agent communicating with the Wazuh server.</p> <p> </p> <p>By clicking on that section and the specific agent, you will be presented with the agent dashboard. By clicking the items found in the red box you will be presented with your devices findings based on the agent scans.</p> <p> </p> <p>Here is a list of all the issues found. You can open them up and read important sections like the description to better understand the issue. </p> <p> </p>"},{"location":"homelabseries/EP16_wazuhagent/#searching-all-indexed-items","title":"Searching all indexed items","text":"<p>Opening the menu on the top right, going under the explore section and selecing discover allows you to search your whole network and all indexes that the agents create. An index is essentially every event on every live agent that occurs on the device as long as its being recorded by the agent. </p> <p> </p>"},{"location":"homelabseries/EP16_wazuhagent/#testing-that-our-agent-works-and-is-indexing","title":"Testing that our agent works and is indexing","text":"<p>We are going to text that the agent is indexing by doing one of the concept guides (failed login attempts over SSH). I logged into my Ubuntu VM and failed to login to the machine with the Wazuh agent installed on it numerous times (Wazuh will create an index if three failed attempts happen within an hour).</p> <p> </p> <p>Going back to the discovery page I can search for this failed SSH authentication event because Wazuhs documentation shows the event code to be \"5760\".</p> <p><pre><code>rule.id:5760\n</code></pre> We can see we get a list of responses due to the incident, we can also verify the device by checking the hostname field. </p> <p> </p> <p>You can click on any event if you are unsure what it is and read the rule description or full log fields to get a better idea.</p> <p> </p>"},{"location":"homelabseries/EP16_wazuhagent/#checking-events-by-the-host","title":"Checking events by the host","text":"<p>We can also check for events on a single host by going back to the main dashboard / selecting that agents are / clicking the agent we want / and being presented with the following screen again.</p> <p>Then you can select the sections based on what incidents have occurred on your device. In our case we can now see their is a credential access option that wasn't there before.</p> <p> </p> <p>You can read about the incident here just like the discovery page, the advantage here is its only showing events for a specific type and a specific host where the discovery page shows everything (this can be useful if you are unsure what you are looking for or know an event ID number. Possibly learning as well.)</p> <p> </p>"},{"location":"homelabseries/EP16_wazuhagent/#create-custom-dashboards-to-monitor-events","title":"Create custom dashboards to monitor events","text":"<p>Going back to the discovery dashboard:</p> <p>We can now create a search based on our findings or our now known rule IDs, etc. from investigating the host. </p> <p>After you create the search query and it resolves what you want, click save on the top right and this will save your query so you can come back to it whenever you need and allow you to add it as a tile to a dashboard.</p> <p> </p> <p>(The screen shown is after you selected save and named your custom query.)</p> <p> </p> <p>Now go over to Dashboards in the explore menu.</p> <p> </p> <p>Here you can create a new dashboard or add your query to a dashboard if you have already created one.</p> <p> </p> <p>Adding your custom query is as easy and selecting the add button found on the top right.</p> <p> </p> <p>(selecting the query you just made/saved)</p> <p> </p> <p>(What it looks like added to the dashboard. You can click save on the top right if you are done or click the gear icon on the top right of your tile to configure your specific tile).</p> <p> </p>"},{"location":"homelabseries/EP16_wazuhagent/#resolving-findings-found-on-an-agent","title":"Resolving Findings Found on an Agent","text":"<p>Going back to your agent, it is very unrealistic to be able to solve all the findings but you want to at least handle the critical ones. </p> <p>Click on the critical findings.</p> <p> </p> <p>You will be presnted with this screen, click inventory on the top left for further details on these critical findings.</p> <p> </p> <p>You will be presented with this page. </p> <p>You can read a brief overview here or select the icons on the far left for a full view with details on the issue.</p> <p>At this point you are going to have to do some reasearch online of your own. The CVE numbers are a great place to start. After you know why this is bad, the next thing you need to research is how to solve the issue based on your operating system.</p> <p>This is a very manual thing to do and a timely but if you want real hands on experience this is something you will be doing in the real world. </p> <p> </p>"},{"location":"homelabseries/EP16_wazuhagent/#conclusion","title":"Conclusion","text":"<p>I hope you found this walkthrough useful! Do not forget to join our discord and share any insights you have with us or give us video recommendations!</p>"},{"location":"homelabseries/EP16_wazuhagent/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP17_truenasscale/","title":"How to Install TrueNas Scale","text":"<p>This video is a part of our homelab series but can be followed as a stand alone article/video as well. </p> <p>You will need the following: </p> <ol> <li>A device with three drives (1 for the OS, and 2 for the mirror raid we are going to create. Most devices have EMMC storage on board which can be used for the Truenas OS).</li> <li>Download TrueNas Scale here</li> <li>Download Etcher if you do not have it yet to create a bootable USB here</li> </ol>"},{"location":"homelabseries/EP17_truenasscale/#create-a-bootable-usb","title":"Create a bootable USB","text":"<p>Download the latest version of TrueNas on their site.</p> <p> </p> <p>Download Etcher so you can create a bootable USB.</p> <p> </p> <p>Flash your USB device with the Etcher application and TrueNas Software. </p> <p> </p>"},{"location":"homelabseries/EP17_truenasscale/#installing-truenas-scale","title":"Installing TrueNas Scale","text":"<p>Then plug that USB device into the device you are going to install TrueNas Scale on when its TURNED OFF</p> <p> </p> <p>Next plug the power into your TrueNAs device WITH A KEYBOARD PLUGGED INTO IT and spam your delete/ESC keys until you see the BIOS. </p> <p>Then go to your Boot options on the BIOS and ensure your USB UEFI device is the first option. </p> <p>Go to save/exit save and exit then wait for it to boot to the TrueNas installer. </p> <p> </p> <p>You will then be presented with some options, we are going to click enter for number one because it is already selected.</p> <p> </p> <p>Select the drive you want to install to, ensure this is a 3rd drive and not your two drives you intend to mirror for your raid. </p> <p>(If you want to play it safe, you can leave your two mirror drives unplugged until the part where we reboot the device after install)</p> <p> </p> <p>You will get a warning message stating everything will be removed from the drive.</p> <p> </p> <p>For install options we are going to use number 1. (Admin)</p> <p>(Note, with 24.x the username has changed from Admin to truenas_admin)</p> <p> </p> <p>Then create a password for your admin account.</p> <p> </p> <p>After that you are going to click ok. </p> <p> </p> <p>Go to option 3 to reboot the device AND THEN REMOVE THE USB BOOTABLE DEVICE AT THIS TIME.</p> <p> </p>"},{"location":"homelabseries/EP17_truenasscale/#logging-in-and-configuring-truenas-raids","title":"Logging in and configuring TrueNas Raids","text":"<p>Wait for the device to boot, type the IP found in the CLI into your browser, and login with your credentials. </p> <p> </p> <p>This will be your main dashboard, go ahead and update your system to the latest version on the top left tile.</p> <p> </p> <p>(the update screen).</p> <p>You can also uncheck automatic updates if you are worried about up time or compatibility issues with apps.</p> <p> </p>"},{"location":"homelabseries/EP17_truenasscale/#creating-a-truenas-datastorage-pool-raid-pool","title":"Creating a TrueNas datastorage pool (Raid pool)","text":"<p>Go to the Storage tab and then click create pool.</p> <p> </p> <p>Next we are going to name the storage pool and select next. </p> <p> </p> <p>Next pick your raid type based on how many drives you have. By hovering over each type it will tell you what it does, the advantages, and how many drives you need. </p> <p>We are going to be using two drives and doing a mirror of those drives. (2 drives share the same data so if one dies we still have all our data.)</p> <p> </p> <p>We are going to skip all other options (3) log and go straight down to (8) review. (I recommend you read through them though and become familiar.)</p> <p>Please ensure all your settings are the way you wanted them and click create.</p> <p> </p> <p>Wait for your pool to be created and you will be presented with the following screen. </p> <p>The following screen is a great place to check up on your pool, see how it is doing, and ensure your drives are healthy. If you get reports of a failing drive ensure you replace it ASAP!!</p> <p> </p>"},{"location":"homelabseries/EP17_truenasscale/#the-end-applications","title":"The end (Applications)","text":"<p>Next episode we will cover applications that you can install and run on your TrueNas machine like NextCloud for image and document backups! </p> <p> </p>"},{"location":"homelabseries/EP17_truenasscale/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP18_trunasnextcloud/","title":"NextCloud on TrueNas","text":"Informative Section ! <p>This Article you are about to read is a stand alone tutorial but is also apart of our homelab series if you are following that. </p>"},{"location":"homelabseries/EP18_trunasnextcloud/#warning","title":"Warning","text":"Warning Box Example <p>If you are following this series from start to finish, this episode is a \"repeat\" in the manner that we have already covered NextCloud but this time we are hosting it on TrueNas and not Proxmox.  The advantage you get here is your pictures are now saved within a RAID which gives you some fault tolerence to a failed drive so you don't lose your treasured pictures or vacations! </p> <p>(In reality, this is how I do it) but I wanted to share the Proxmox way for smaller homelabs or people with smaller budgets where they cannot afford multiple devices. </p> <p>SO YOU CAN SKIP THIS EPISODE IF YOU ARE FOLLOWING THE COURSE AND WANTED TO USE THE PROXMOX WAY</p>"},{"location":"homelabseries/EP18_trunasnextcloud/#installing-nextcloud-steps","title":"Installing NextCloud Steps","text":"<p>Go ahead and login to your TrueNas dashboard you can also learn how to install TrueNas from our previous episode here</p> <p> </p> <p>Select the \"Apps\" tab on the right and then click on \"Check Available apps\"</p> <p> </p> <p>next search for (NextCloud) and select it. </p> <p> </p> <p>Click the blue isntall button.</p> <p> </p> <p>Now a lot of this CAN be left the same but we have a couple things WE MUST FILL OUT. </p> <ol> <li>(Application name) give your NextCloud Container a name.</li> <li>(Admin User) Create a username to login to NextCloud with.</li> <li>(Admin Password) Set the password you are going to use to login.</li> <li>(Host) This will be the IP address of your TrueNas machine, you can see the IP address of your TrueNas machine in your browsers URL. The example like ours is 192.168.50.221.</li> <li>(Redia Password) Create a password.</li> <li>(Database Password) Create a password.</li> <li>(CPU) You can raise or lower how much of the CPU you want this NextCloud container to have access to.</li> <li>(Memory in MB) You can raise or lower how much of the RAM you want this NextCloud container to have access to, more is better.</li> </ol> <p> </p> <p>Second screenshot of the settings page settings that need to be changed as explained in the numbered list above.</p> <p> </p> <p>Last screenshot of the settings page, select install.</p> <p> </p> <p>Wait until you see the status shown as running. You can then access your NextCloud instance by clicking the WebUI button.</p> <p> </p> <p>If you need to delete your NextCloud Container you can also select it on the far left and an actions box will open, click that for options like delete.</p> <p> </p> <p>After selecting the WebUI botton you will be on the login page, go ahead and put in the admin credentials you just created a minute ago. </p> <p> </p> <p>We can create new folders like the (TestFolder) shown below by clicking the (New) botton at the top. </p> <p> </p> <p>When you are in that folder you can click the new button in the middle of the screen to add pictures and documents. </p> <p> </p> <p>After images are within the folder you can see the new button is moved to the top. </p> <p>You can also add people from up top to access the whole folder or you can give people permissions for each file by selecting the icons on the far right of the image. </p> <p> </p> <p>You can share folders with others by sending them a link or controlling what users can access a folder. </p> <p>remember if you do not have tailscale setup, only users on the local network of the NAS will have access. </p> <p> </p>"},{"location":"homelabseries/EP18_trunasnextcloud/#conclusion","title":"Conclusion","text":"<p>It is that simple, what did you think? </p> <p>I honestly love how simple it is to run your own personal Cloud for images/Documents! I hope you guys subscribe to our YouTube Channel for more content!</p>"},{"location":"homelabseries/EP18_trunasnextcloud/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP19_wazuhdiscordalerts/","title":"How to Push Wazuh Alerts to Your Discord Server","text":"<p>In this episode we will cover how to push Wazuh Alerts to your Discord server! I think this integration is super useful because 99% of us probably already use Discord. Why monitor a Wazuh Dashboard when you can monitor your network through Discord? </p>"},{"location":"homelabseries/EP19_wazuhdiscordalerts/#example-of-discord-alerts","title":"Example of Discord Alerts","text":"<p>Here is an example of what we are going to do in this episode: </p> <p> </p>"},{"location":"homelabseries/EP19_wazuhdiscordalerts/#create-a-discord-webhook","title":"Create a Discord Webhook","text":"<ol> <li>Open Discord.</li> <li>Go to the server you want to use to monitor Wazuh.</li> <li>Create a text channel.</li> </ol> <ol> <li>right click on your server</li> <li>Go to server settings.</li> <li>Select the integrations page.</li> </ol> <p>Click on Create a webhook. </p> <p> </p> <ol> <li>Click New Webhook.</li> <li>Name your webhook but to something like WazuhAlerts.</li> <li>Select the text channel for your Wazuh alerts we created a second ago. </li> <li>Copy the Webhook to a notepad, we will paste it in a configuration file in a minute. </li> </ol> <p> </p>"},{"location":"homelabseries/EP19_wazuhdiscordalerts/#configure-wazuhs-dashboard-integration-settings","title":"Configure Wazuh's Dashboard Integration settings","text":"<p>Login to your Wazuh dashboard and go to the following location:</p> <p>(Server Manangement / Settings)</p> <p> </p> <p>On the top right click (edit configuration)</p> <p> </p> <p>We are going to paste the following code BELOW the tags <code>&lt;global&gt; &lt;/global&gt;</code></p> <p><pre><code> &lt;integration&gt;\n     &lt;name&gt;custom-discord&lt;/name&gt;\n     &lt;hook_url&gt;https://discord.com/api/webhooks/XXXXXXXXXXX&lt;/hook_url&gt;\n     &lt;alert_format&gt;json&lt;/alert_format&gt;\n &lt;/integration&gt;\n</code></pre> Then paste your Discords Webhook in the <code>&lt;hook_url&gt; &lt;/hook_url&gt;</code> tags.</p> <p> </p> <ol> <li>Click Save.</li> <li>Restart Manager.</li> </ol> <p> </p>"},{"location":"homelabseries/EP19_wazuhdiscordalerts/#ssh-into-your-wazuh-dashboard-machine","title":"SSH into your Wazuh Dashboard Machine","text":"<p>Next we need to SSH into your Wazuh Dashboard Machine/VM (etc.) to configure the following settings. </p> <pre><code>ssh username@ip_address\n</code></pre> <p> </p> <p>After you login perform the following commands:</p> <pre><code>sudo su\n</code></pre> <p>then go to the config section for integrations:  <pre><code>cd /var/ossec/integrations\n</code></pre></p> <p>We can use the following command to see a list of files in there <pre><code>ls -l\n</code></pre></p> <p>We need to grab the following discord integrations for this custom Discord notifications here:</p> <p><pre><code>wget https://raw.githubusercontent.com/maikroservice/wazuh-integrations/main/discord/custom-discord\n</code></pre> and <pre><code>wget https://raw.githubusercontent.com/maikroservice/wazuh-integrations/main/discord/custom-discord.py\n</code></pre></p> <p> </p> <p>We can then verify they are downloaded. We can also see they are white because they don't have the proper permissions yet.  <pre><code>ls -l\n</code></pre></p> <p>Then we need to ensure they have the proper permissions to execute: <pre><code>sudo chmod 750 /var/ossec/integrations/custom-*\nsudo chown root:wazuh /var/ossec/integrations/custom-*\n</code></pre></p> <p>Now we can verify they are correct one more time (and that they have turned green instead of white becuase they have the right perms now.) <pre><code>ls -l\n</code></pre></p> <p> </p> <p>Now because this is a python script we need to install the proper pip: (You may get a \"Running as pip as the root user...\" error but its fine, do not worry about it.) <pre><code># debian / ubuntu\nsudo apt-get install python3-pip\npip3 install requests\n</code></pre></p> <p> </p> <p>Lastly, we need to restart Wazuhs controls:</p> <p><pre><code>/var/ossec/bin/wazuh-control restart\n</code></pre> </p> <p>....</p> <p> </p>"},{"location":"homelabseries/EP19_wazuhdiscordalerts/#verify-discord-alerts","title":"Verify Discord Alerts","text":"<p>Next we can go to our Discord channel and see the service restarted with a confirmation alert:</p> <p> </p> <p>I am going to attempt to SSH into one of our Machines with the Wazuh Agent installed and type the wrong password to mimic failed login attempts from a malicious actor.</p> <p>We will see that we get notified in Discord for these failed attempts within just a few seconds. </p> <p> </p>"},{"location":"homelabseries/EP19_wazuhdiscordalerts/#conclusion","title":"Conclusion","text":"<p>That is it! I hope you guys enjoyed, if you would like to learn more please see the links down below. </p> <p>How to setup Discord Webhooks</p> <p>Wazuh external integration configurations</p>"},{"location":"homelabseries/EP19_wazuhdiscordalerts/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP1_notekeeping/","title":"Note taking, Obsidian Note Taking and Install","text":"<p>Obsidian is a notetaking and knowledge management software designed to help users organize, connect, and develop their ideas. It is based on the concept of a \"personal knowledge base\" (PKB) and utilizes a method known as \"markdown\" for formatting text.</p> <p>As our video explained, Note-taking is a critical tool and a skill you must master. No one likes paperwork, but proper documentation easily makes up almost half of IT roles, **not to mention there will be A LOT of times you forget something and wish you\u2019d made a note. **</p> <p>The last step in the troubleshooting methodology is to document the solution. It is described as \"Document the troubleshooting process, including the problem description, steps taken, root cause, and solution implemented. This documentation can be a reference for future troubleshooting efforts and knowledge sharing.\" You will become a master of the troubleshooting methodology as time goes on; one thing to keep in mind is that the symptoms do not always characterize the root cause of your issue. </p>"},{"location":"homelabseries/EP1_notekeeping/#installing-obsidian-the-note-taking-application","title":"Installing Obsidian the note-taking application","text":"<p>You can download Obsidian directly from here</p> <p>Click the download button, and now go to your downloads folder.   Now you can run the installer.   You will be brought to this menu, select quick start </p> Warning Box Example <p>If you are confused by this step, please reference the YouTube video.</p> <p>After that, there are a couple of things we need to do. </p> <p>Step 1: We are going to select the gear icon on the bottom left to open our settings.   Step 2: Go to the appearance tab and then at the very top change adapt to system to dark mode.   Step 3: We will then go under Files and Links, Default location for new attachments and select in subfolder under current folder which will put our screenshots/images in their own folder to keep our note taking enviroment clean.  </p> <p>There you have it, a clean and organized note taking application for the remainder of this course!</p>"},{"location":"homelabseries/EP1_notekeeping/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP20_ProxmoxClustering/","title":"How to Setup a Proxmox Cluster","text":"<p>In this episode we will cover how to setup a Proxmox Cluster and in the next video I will cover setting up Ceph pool storage for live migrations of VMs. </p>"},{"location":"homelabseries/EP20_ProxmoxClustering/#what-is-clustering","title":"What is Clustering?","text":"<p>Allows you to manage multiple Proxmox nodes from a single interface</p> <p>Enables manual migration of VMs and containers between nodes</p> <p>Does not automatically provide failover or resource management</p>"},{"location":"homelabseries/EP20_ProxmoxClustering/#setting-up-your-proxmox-cluster","title":"Setting up your Proxmox Cluster","text":"<ol> <li> <p>First you you need to do is ensure you have TWO Proxmox Nodes setup. </p> </li> <li> <p>The orinal node CAN have VMs on it but the SECOND Node CANNOT!</p> </li> <li> <p>If you need to learn how to install Proxmox on a machine please check out our 4th episode in this series here</p> </li> </ol> <p>We are going to start with your first machine (or your machine that has VMs already on it)</p> <p>Go to datacenter, cluster, and click create cluster.</p> <p> </p> <p>Name your cluster and ensure the IP matches your current nodes IP which can be found in your URL bar, then click create.</p> <p> </p> <p>Wait for TASK OK then click exit on the top right.</p> <p> </p> <p>Select join information at the top.</p> <p> </p> <p>Copy the join information and then LOGIN to your SECOND node.</p> <p> </p> <p>On your second node go to datacenter, cluster, and join cluster. </p> <p> </p> <p>Paste the join information, type the password in for your FIRST NODES root login, and ensure your cluster network IP matches your current nodes URL and that the peer IP is correct for your FIRST NODE. </p> <p> </p> <p>After you click join cluster you may need to wait 1-3 minutes for the two machines to communicate before it will let you login. Refresh your browser and then login.</p> <p> </p> <p>There you have it, a Proxmox Cluster that will allow you to manage your machines from one interface. </p> <p> </p>"},{"location":"homelabseries/EP20_ProxmoxClustering/#conclusion","title":"Conclusion","text":"<p>In the next episode we will cover how to create a Ceph Pool and get our cluster ready for live migrations. </p>"},{"location":"homelabseries/EP20_ProxmoxClustering/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP21_ProxmoxCeph/","title":"How to Setup Ceph on Proxmox and Perform Live VM Migration","text":"<p>In this video we will cover how to do live VM migration between Proxmox Nodes in a cluster using Ceph as the distributed data storage.</p>"},{"location":"homelabseries/EP21_ProxmoxCeph/#setting-up-a-ceph-storage-pool","title":"Setting up a Ceph Storage Pool","text":"<p>Here are the following steps to create a ceph cluster:</p> <ol> <li>Have dedicated storage for your ceph pool (ssd, HDD. CANNOT be the one you are already using because we are going to wipe it)</li> </ol> <p>Ensure you have an extra SSD/HDD installed for your Ceph pool. </p> <p> </p> Warning Box Example <p>The following commands will need to be done on EVERY node (cluster size dependent)</p> <p>Click on your node, go to Ceph, and click install Ceph.</p> <p> </p> <p>We are going to use Reef (18.2) make sure you install the latest at the time you do this install and the No-Subcription option because we do not pay for Proxmox. </p> <p> </p> <p>On the next screen you will see a prompt during install, click enter for yes and wait for it to finish. </p> <p> </p> <p>When you see the following screen and the blue next button is now clickable, go to next.</p> <p> </p> <p>Your install should do this by default but if not make sure it has the same network selected as the node, then click next. </p> <p> </p>"},{"location":"homelabseries/EP21_ProxmoxCeph/#now-we-need-to-create-the-storage-pool","title":"Now we need to create the storage pool","text":"<p>Click on the node name, go to disks, select your dedicated storage device, and click wipe disk. </p> <p> </p> <p>Next go back to the ceph menu (click the drop down area next to the name ceph) and select OSD. Within OSD select the device you just wiped and click create. </p> <p> </p> <p>Next click the Pools menu below the OSD menu, click create on the top left, select the size of the pool based on how many nodes /OSD drives you have. We have two nodes and two drives so we are doing two. (leave PG autoscaler mode to on). </p> <p> </p>"},{"location":"homelabseries/EP21_ProxmoxCeph/#how-to-perform-live-migrations-of-vms","title":"How to Perform live migrations of VMs","text":"<p>So in order to perform a live migration your VM's storage has to be set to the Ceph pool storage. </p> <p>You will create a VM like any other VM BUT on the disks page you will select the storage option as your Ceph pool. </p> <p> </p> Informative Section ! <p>You can edit old VM's and move their storage to the Ceph Pool so they can live migrate as well.</p>"},{"location":"homelabseries/EP21_ProxmoxCeph/#removing-local-disk-for-live-migration","title":"Removing local disk for live migration","text":"<p>Live migration will not work with a CD/DVD attached. You only need the CD/DVD attached for the initial install operating system file. </p> <ol> <li>Turn your machine off</li> <li>Select the CD/DVD device under hardware</li> <li>Click remove</li> <li>Start your VM again. </li> </ol> <p> </p> <p>Example of how live migration wont work with a local CD/DVD attached.</p> <p> </p> <p>Example with the CD/DVD removed</p> <p> </p> <p>Now we can see live migraiton is possible with that CD/DVD removed and the VM running. Select the node you wish to move your VM to and click migrate. </p> <p> </p> <p>Live feed of the migration</p> <p> </p> <p>We can now see the VM has moved to the other machine with virtually no down time. </p> <p> </p> <p>Now if you moved all your VM's to a different node you could go back and update your other node, take it off line for maintenance, fix a failing part, etc. without losing any uptime or having upset customers. </p> <p> </p>"},{"location":"homelabseries/EP21_ProxmoxCeph/#conclusion","title":"Conclusion","text":"<p>That is it for this video, We covered: 1. How to wipe drives 2. How to create a Ceph Pool 3. How to live migrate VM's  4. How to update other systems without disrupting the availability of our users.</p>"},{"location":"homelabseries/EP21_ProxmoxCeph/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP22_homarr1.0upgrade/","title":"EP 22 - Homarr 1.0 Install/Upgrade","text":"<p>This episode is an update to episode 13 AND 14 due to Homarr's source code being redone. </p>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#what-we-will-cover","title":"What we will cover","text":"Informative Section ! <p>This episode is good for FRESH INSTALLS AND those who are UPGRADING from the old Homarr Dashboard</p> <ol> <li>Creating a new VM for the new Homarr Dashboard</li> <li>How to create an API key for Proxmox usage stats.</li> <li>How to install the new 1.0 Homarr dashboard</li> <li>How to upgrade from the old dashboard to the new dashboard. </li> <li>How to add trusted certificates to your dashboard</li> <li>How to edit old Proxmox intergrations</li> <li>How to create new Proxmox intergrations in the Homarr Dashboard</li> </ol>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#getting-started","title":"Getting started","text":""},{"location":"homelabseries/EP22_homarr1.0upgrade/#fresh-install-users","title":"Fresh Install Users","text":"<p>Create a new Ubuntu Server VM in Proxmox with the following:</p> <ol> <li>OS: Ubuntu Server</li> <li>2gb of ram</li> <li>2 vcores, </li> <li>32gb of storage. </li> </ol> <p> </p> <p>During install ensure you enable SSH!</p> <p> </p> <p>On your new VM we need to install Docker and Homarr with the following commands:</p> <p>SSH into your NEW homarr VM using the following command:</p> <pre><code>ssh &lt;username&gt;@&lt;VM_ipaddress&gt;\n</code></pre> <p> </p> <p>Adding the GPG keys and Docker repo:</p> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre> <p> </p> <p>Install the Latest Package:</p> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p> </p> <p>Ensure Docker is running after Install, you will get a response like this.</p> <pre><code>sudo docker run hello-world\n</code></pre> <p> </p> If Docker hello fails do the following  if you do not get a response try  <pre><code>systemctl status docker.service\n</code></pre>    If that shows failed messages, try the following  <pre><code>sudo systemctl daemon-reload\n\nsudo systemctl restart docker\n</code></pre>  Then try to see its status once again:  <pre><code>systemctl status docker.service\n</code></pre>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#install-docker-compose","title":"Install Docker Compose","text":"<p>Install Docker Compose with: </p> <pre><code>sudo apt install docker-compose\n</code></pre> <p>Verify that docker compose is installed</p> <pre><code>docker compose version\n</code></pre>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#install-homarr","title":"Install Homarr","text":"<p>Then create a docker compose file:</p> <pre><code>nano docker-compose.yml\n</code></pre> <p> </p> <p>Copy the following file config in there for your Homarr docker compose file.</p> <p><pre><code>#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - ./homarr/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=51564af476c9eecd2efb30ed980a4b2e768efb7a558676859e2e1fbd04ce15a0\n    ports:\n      - '7575:7575'\n</code></pre> To get out of the above editor you will do the following: To exit: ctrl + X </p> <p>To confirm save: y</p> <p>To confirm the file name you are saving to: enter</p> <p> </p> <p>Then run the following to start it:</p> <pre><code>sudo docker compose up -d\n</code></pre> <p> </p> <p>Then to login to your machine you will type the following into your browser to access the panel:</p> <pre><code>ip_address:7575\n</code></pre> <p> </p>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#creating-a-proxmox-api-key","title":"Creating a Proxmox API Key","text":""},{"location":"homelabseries/EP22_homarr1.0upgrade/#make-new-api-key","title":"make new API key","text":"<ol> <li>Navigate to the Proxmox portal, click on Datacenter</li> <li>Expand Permissions, click on Groups</li> <li>Click the Create button</li> </ol> <ol> <li>Name the group something informative, like api-users</li> </ol> <ol> <li>Click on the Permissions \"folder\"</li> <li>Click Add -&gt; Group Permission</li> </ol> <ul> <li>Path: /</li> <li>Group: group from Step 4 above</li> <li>Role: PVEAuditor</li> <li>Propagate: Checked</li> </ul> <ol> <li>Expand Permissions, click on Users</li> <li>Click the Add button<ul> <li>User name: something informative like api</li> <li>Realm: Proxmox VE authentication server</li> <li>Password: create a secure password for the user</li> <li>Confirm Password: re-enter the password</li> <li>Group: group from Step 4 above</li> </ul> </li> </ol> <ol> <li>Expand Permissions, click on API Tokens</li> <li>Click the Add button<ul> <li>User: user from Step 8 above</li> <li>Token ID: something informative like the application or purpose like homarr</li> <li>Privilege Separation: unchecked</li> </ul> </li> </ol> <ol> <li>Copy the Secret that is shown below because it is only shown once</li> </ol> <ol> <li>Go back to the \"Permissions\" menu</li> <li>Click Add -&gt; API Token Permission</li> </ol> <pre><code>- Path: /\n- API Token: select the API token created in Step 10\n- Role: PVE Auditor\n- Propagate: Checked\n</code></pre>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#adding-your-certificate","title":"Adding your Certificate","text":"<p>Now we need to grab the Proxmox certificate.</p> <ol> <li>Select the node where your Homarr Dashboard is located. </li> <li>Select Certificates</li> <li>Select the pve-root-ca.pem certificate</li> <li>Click View certificate</li> </ol> <p> </p> <p>Next we need to copy the contents to a notepad and then save the file as <code>certificate_name.crt</code></p> <p> </p> <p>Pasting it into Notepad</p> <p> </p> <p>Saving it as a .crt file name</p> <p> </p> <p>Now go over to your Homarr dashboard and on the top right click / your username bubble / Manage</p> <p> </p> <p>Next go to: 1. Tools 2. Certificates 3. (top right) select add certificate 4. Add your saved certifcate  5. Click add.</p> <p> </p> <p><code>showing the certificate added</code></p> <p> </p> <p>You should now see a valid certificate</p> <p> </p>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#adding-proxmox-stats-integration","title":"Adding Proxmox Stats Integration","text":"<p>Now we can go over to the Apps page and create a new app (this must be done before adding the integration)</p> <p>Click new app</p> <p> </p> <ol> <li>Now you can give it whatever name you want.</li> <li>Search for the icon related to what you are connecting (in our case Proxmox)</li> <li>grab the IP(URL) address of the Proxmox Node we want to see stats from.</li> <li>Click create</li> </ol> <p> </p> <p>Now go to the integrations tab: 1. New integration 2. Search and select Proxmox</p> <p> </p> <p>This is where people struggle because this is the major change from the old Homarr panel</p> <p>We are going to go grab the correct information from Proxmox for the username, token ID, API key, and realm. </p> <p> </p> <p>Over on Proxmox:</p> <ol> <li>Go to the data center at the top</li> <li>Go to API Token</li> <li>We will see the username</li> <li>We will see the Token name</li> </ol> <p> </p> <p>Go back over to Homarr and fill out that respective information in the username and token ID field. Remember you also need to paste your API key you created under the (make a new API key) section. </p> <p> </p> <p>Lastly we just need to get the realm. </p> <p>Your realms are found under datacenter / realms. We are going ot be using PVE so our real will be PVE. </p> <p> </p> <p>like so:</p> <p>Then test connection and connect.</p> <p> </p> <p>Click the Homarr logo at the top left to go back to your main dashboard OR (Boards on the far right, then select your dashboard from there)</p> <p>On the top right click the pencil icon to edit your dashboard (it won't look like ours below)</p> <p> </p> <p>Now you will notice all your icons have three dots on the top right and your board is now editable.</p> <p>There will be a + icon on the top right, click that and then select new item. <p> </p> <p>Under the items we need to select (System Health Monitoring) and click add to board</p> <p> </p> <p>Now on our dashboard page we will see that new section with no data, click the three dots on the right and click edit item.</p> <p> </p> <p>From the integrations drop down menu select the integration we just created, and click save changes.</p> <p> </p> <p>Now you can see we have the Proxmox stats on our dashboard!</p> <p> </p> Warning Box Example <p>The fresh install tutorial is now over</p>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#upgrade-path-for-old-users","title":"Upgrade path for old users","text":""},{"location":"homelabseries/EP22_homarr1.0upgrade/#create-a-new-homarr-vm","title":"Create a new Homarr VM","text":"<p>Create a new Ubuntu Server VM in Proxmox with the following:</p> <ol> <li>OS: Ubuntu Server</li> <li>2gb of ram</li> <li>2 vcores, </li> <li>32gb of storage. </li> </ol> <p> </p> <p>During install ensure you enable SSH!</p> <p> </p> <p>On your new VM we need to install Docker and Homarr with the following commands:</p> <p>SSH into your NEW homarr VM using the following command:</p> <pre><code>ssh &lt;username&gt;@&lt;VM_ipaddress&gt;\n</code></pre> <p> </p> <p>Adding the GPG keys and Docker repo:</p> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre> <p> </p> <p>Install the Latest Package:</p> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p> </p> <p>Ensure Docker is running after Install, you will get a response like this.</p> <pre><code>sudo docker run hello-world\n</code></pre> <p> </p> If Docker hello fails do the following  if you do not get a response try  <pre><code>systemctl status docker.service\n</code></pre>    If that shows failed messages, try the following  <pre><code>sudo systemctl daemon-reload\n\nsudo systemctl restart docker\n</code></pre>  Then try to see its status once again:  <pre><code>systemctl status docker.service\n</code></pre>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#install-docker-compose_1","title":"Install Docker Compose","text":"<p>Install Docker Compose with: </p> <pre><code>sudo apt install docker-compose\n</code></pre> <p>Verify that docker compose is installed</p> <pre><code>docker compose version\n</code></pre>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#install-homarr_1","title":"Install Homarr","text":"<p>Then create a docker compose file:</p> <pre><code>nano docker-compose.yml\n</code></pre> <p> </p> <p>Copy the following file config in there for your Homarr docker compose file.</p> <p><pre><code>#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - ./homarr/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=51564af476c9eecd2efb30ed980a4b2e768efb7a558676859e2e1fbd04ce15a0\n    ports:\n      - '7575:7575'\n</code></pre> To get out of the above editor you will do the following: To exit: ctrl + X </p> <p>To confirm save: y</p> <p>To confirm the file name you are saving to: enter</p> <p> </p> <p>Then run the following to start it:</p> <pre><code>sudo docker compose up -d\n</code></pre> <p> </p> <p>Then to login to your machine you will type the following into your browser to access the panel:</p> <pre><code>ip_address:7575\n</code></pre> <p> </p>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#exporting-your-old-dashboard","title":"Exporting your old dashboard","text":"<p>login to your OLD Homarr Dashboard, click the username top right, clicked manage, under settings go to tools, migrate to 1.0</p> <p> </p> <p>here is how you get to that menu:</p> <p> </p> <p>Select export data (copy your encryption key to your notes!!!!) and ensure you also select keep on the top right of your browser if it tries to block it.</p> <p> </p> <p>Going over to your fresh VM you just created, click (import from Homarr before 1.0)</p> <p> </p> <p>After selecting your .zip file you will be presented with the screen below. We are not changing ANY of the settings, simply click (confirm import and continue)</p> <p> </p> <p>Now paste that encryption key so Homarr and unzip your old dashboard.</p> <p> </p> <p>We wont be changing any of the settings here but you can turn off (send anonymous analytics) if you want.</p> <p> </p> <p>You will be presented with the following screen, we are going to select (go to default-large board)</p> <p> </p> <p>You may then be prompted to login, you will do this with the credentials of your old dashboard (because now its really your new dashboard)</p> <p> </p> <p>Now we are going to select (configure server-wide home dashboard) this is where we will set the default dashboard when you login.</p> <p> </p> <p>Find your old dashboards, click the three dots, then select (set as your home board)</p> <p> </p> <p>Now you have your dashboard back! </p> <p> </p>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#adding-your-certificate_1","title":"Adding your Certificate","text":"<p>Now we need to grab the Proxmox certificate.</p> <ol> <li>Select the node where your Homarr Dashboard is located. </li> <li>Select Certificates</li> <li>Select the pve-root-ca.pem certificate</li> <li>Click View certificate</li> </ol> <p> </p> <p>Next we need to copy the contents to a notepad and then save the file as <code>certificate_name.crt</code></p> <p> </p> <p>Pasting it into Notepad</p> <p> </p> <p>Saving it as a .crt file name</p> <p> </p> <p>Now go over to your Homarr dashboard and on the top right click / your username bubble / Manage</p> <p> </p> <p>Next go to: 1. Tools 2. Certificates 3. (top right) select add certificate 4. Add your saved certifcate  5. Click add.</p> <p> </p> <p><code>showing the certificate added</code></p> <p> </p> <p>You should now see a valid certificate</p> <p> </p>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#adding-proxmox-stats-integration_1","title":"Adding Proxmox Stats Integration","text":"<p>Now we can go over to the Apps page and create a new app (this must be done before adding the integration)</p> <p>Click new app</p> <p> </p> <ol> <li>Now you can give it whatever name you want.</li> <li>Search for the icon related to what you are connecting (in our case Proxmox)</li> <li>grab the IP(URL) address of the Proxmox Node we want to see stats from.</li> <li>Click create</li> </ol> <p> </p> <p>Now go to the integrations tab: 1. New integration 2. Search and select Proxmox</p> <p> </p> <p>This is where people struggle because this is the major change from the old Homarr panel</p> <p>We are going to go grab the correct information from Proxmox for the username, token ID, API key, and realm. </p> <p> </p> <p>Over on Proxmox:</p> <ol> <li>Go to the data center at the top</li> <li>Go to API Token</li> <li>We will see the username</li> <li>We will see the Token name</li> </ol> <p> </p> <p>Go back over to Homarr and fill out that respective information in the username and token ID field. Remember you also need to paste your API key you created under the (make a new API key) section. </p> <p> </p> <p>Lastly we just need to get the realm. </p> <p>Your realms are found under datacenter / realms. We are going ot be using PVE so our real will be PVE. </p> <p> </p> <p>like so:</p> <p>Then test connection and connect.</p> <p> </p> <p>Click the Homarr logo at the top left to go back to your main dashboard OR (Boards on the far right, then select your dashboard from there)</p> <p>On the top right click the pencil icon to edit your dashboard (it won't look like ours below)</p> <p> </p> <p>Now you will notice all your icons have three dots on the top right and your board is now editable.</p> <p>There will be a + icon on the top right, click that and then select new item. <p> </p> <p>Under the items we need to select (System Health Monitoring) and click add to board</p> <p> </p> <p>Now on our dashboard page we will see that new section with no data, click the three dots on the right and click edit item.</p> <p> </p> <p>From the integrations drop down menu select the integration we just created, and click save changes.</p> <p> </p> <p>Now you can see we have the Proxmox stats on our dashboard!</p> <p> </p>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#updating-homarr-10","title":"Updating Homarr 1.0","text":"<p>To update, navigate to the directory with the docker-compose.yaml located. (This will need to be done using the sudo command or becoming the super user with sudo su)</p> <p>Stop Homarr using </p> <pre><code>docker compose down\n</code></pre> <p>Pull the newest image of Homarr using </p> <pre><code>docker compose pull\n</code></pre> <p>Start Homarr again using the below command. (-d for detached mode - start in background)</p> <pre><code>docker compose up -d \n</code></pre> <p>Delete the old image using (Warning: this also removes you other unused images - not just Homarr)</p> <pre><code>docker image prune\n</code></pre> <p> </p>"},{"location":"homelabseries/EP22_homarr1.0upgrade/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP23_notesinnextcloud/","title":"EP 23 - Note Taking with NextCloud","text":"<p>In this episode we will cover how to install the Note Taking Application on Nextcloud, how to create folders, and organize your notes as well as some basic formatting. </p>"},{"location":"homelabseries/EP23_notesinnextcloud/#installing-nextcloud-notes","title":"Installing NextCloud Notes","text":"<p>The first thing you need to do is login to your Nextcloud instance, if you have not done this, check out EP 8 where we go over how to install it on Proxmox Setup NextCloud with Proxmox</p> <p> </p> <p>Next click your profile icon on the top right, and go to Apps. </p> <p> </p> <p>Next you need to click the search menu on the left, then the search icon top right, and search for notes. You may notice it will load in the background (4), close the window and select \"Notes\".</p> <p> </p> <p>Next click \"Download and Enable\" to install Notes. </p> <p> </p> <p>Now you can select \"Create a sample note with Markdown\" OR \"New Note\" on the top left. </p> <p> </p> <p>Note note as shown...</p> <p> </p>"},{"location":"homelabseries/EP23_notesinnextcloud/#categorize-notes-in-folders","title":"Categorize notes in folders","text":"<p>Hover over any note and select the three dots to categorize/create folders for your notes. </p> <p> </p> <p>When you select the folder icon, by simply typing the new of your new folder and click enter will create a new folder for you.</p> <p> </p> <p>By doing the same thing on a note, you can then select the new or old folder you wish to move the note into. </p> <p> </p> <p>As shown:</p> <p> </p>"},{"location":"homelabseries/EP23_notesinnextcloud/#conclusion","title":"Conclusion","text":"<p>In this video we covered:  1. How to download the Note App. 2. How to create notes. 3. How to create folders.  4. How to categorize notes.</p>"},{"location":"homelabseries/EP23_notesinnextcloud/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP24_jellyFin/","title":"EP 24 - JellyFin on TrueNas","text":""},{"location":"homelabseries/EP24_jellyFin/#introduction","title":"Introduction","text":"<p>In this video we will cover </p> <ol> <li> <p>How to setup a SMB share on Truenas</p> </li> <li> <p>How to Install JellyFin on your TrueNas machine</p> </li> <li> <p>How to connect JellyFin to your SMB Share.</p> </li> </ol>"},{"location":"homelabseries/EP24_jellyFin/#creating-an-smb-share-on-truenas","title":"Creating an SMB Share on TrueNas","text":"<p>If you have not setup TrueNas before, please see our previous video on how to do that here</p> <p>That video will also cover how to setup a storage pool which is required before this tutorial. </p> <p>Login to TrueNas and perform the following:</p> <p> </p>"},{"location":"homelabseries/EP24_jellyFin/#create-a-dataset","title":"Create a Dataset","text":"<p>Next You need to go to the datasets tab then select \"Add dataset on the top right:</p> <p> </p> <p>Then perform the following: Name your dataset, give it the SMB preset, and ensure your SMB name is descriptive like (smbshare), then slick save.</p> <p> </p>"},{"location":"homelabseries/EP24_jellyFin/#smb-share","title":"SMB Share","text":"<p>Next we need to go to the Shares Tab and ensure the SMB share was created and enabled. </p> <p> </p>"},{"location":"homelabseries/EP24_jellyFin/#create-local-group","title":"Create local Group","text":"<p>Next go to Credentials / Local Groups</p> <p> </p> <p>Click \"Add\" on the top right:</p> <p> </p> <p>Next you need to give the group a name, allow samba authentication, and save it. </p> <p> </p>"},{"location":"homelabseries/EP24_jellyFin/#create-a-local-user","title":"Create a Local User","text":"<p>We now need to go to the local users tab in the same area.</p> <p> </p> <p>Click add on the top right as well</p> <p> </p> <p>Now to create a user we need to do the following. </p> <ol> <li> <p>Assign a name</p> </li> <li> <p>create a username</p> </li> <li> <p>(and 4) assign a passward</p> </li> <li> <p>Turn off \"Create a New Primary Group\"</p> </li> <li> <p>Assign the local group you made earlier</p> </li> <li> <p>Assign the local group you made earlier</p> </li> <li> <p>Set the home directory to your JellyFin SMB Share directory.</p> </li> </ol> <p> </p> <p>Then go all the way to the bottom and click save.</p> <p> </p>"},{"location":"homelabseries/EP24_jellyFin/#enable-smb-on-truenas","title":"Enable SMB on TrueNas","text":"<p>Next we need to go to System Settings / Services</p> <p> </p> <p>Ensure the following settings are on.</p> <p> </p>"},{"location":"homelabseries/EP24_jellyFin/#smb-share-acls","title":"SMB Share ACL's","text":"<p>Next we need to ensure the SMB file share access control lists are enabled/configured. Go back to the Shares tab and click the \"Shield\" icon on the right to edit your ACL's.</p> <p> </p> <p>We are going to use a pre-made ACL (nsf4_open) then click continue.</p> <p> </p> <p>Just do a click glance but the settings should all be correct, you can then save the access control list. </p> <p> </p>"},{"location":"homelabseries/EP24_jellyFin/#connecting-to-our-smb-share-on-windows","title":"Connecting to our SMB share on Windows","text":"<p>To connect to an SMB share on Windows you will do the following</p> <pre><code>\\\\&lt;IP_address of SMB server&gt;\\&lt;smb_share_filename&gt;\n</code></pre> <p> </p> <p>You will be prompted with the following screen, input the credentials of the local user you created for your SMB share. </p> <p> </p> <p>Now you need to create some folders to organize the movies, pictures, and documents. This will allow you to have categories within JellyFin to browse through. </p> <p> </p>"},{"location":"homelabseries/EP24_jellyFin/#installing-jellyfin-media-server","title":"Installing JellyFIn Media Server","text":"<p>To Install JellyFin head over to the \"Apps\" Tab and then select Discover Apps on the top right.</p> <p> </p> <p>Search for JellyFin and click on it</p> <p> </p> <p>Select Install</p> <p> </p> <p>Then you will be prompted with the settings for installation menu of JellyFin. </p> <ol> <li> <p>You will need to assign the application name</p> </li> <li> <p>Assign the IP address for the JellyFin Server (this will be the same IP as seen in your browser URL if you are installing this on TrueNas)</p> </li> </ol> <p> </p> <p>Next scroll down until you see \"Additional Storage\" This is where you will connect the SMB share we setup earlier. </p> <ol> <li> <p>Select the SMB share type.</p> </li> <li> <p>Mount Path can be named whatever you want! /SMB just keeps it simple.</p> </li> <li> <p>Server IP (same as before, the IP of TrueNas like seen in your URL bar)</p> </li> <li> <p>The SAME name as your created JellyFin SMB share.</p> </li> <li> <p>The name of the local user you created earlier. </p> </li> <li> <p>The Password of that user you created earlier. </p> </li> </ol> <p>Then click save and wait for your VM to have the status of deployed.</p> <p> </p> <p>After your VM is running, click the web portal icon button. </p> <p> </p> <p>Select your language and click next. </p> <p> </p> <p>Create a user to login to JellyFin with, then click next. </p> <p> </p> <p>Then Select content type, movies, and add your folders you created on your SMB share earlier. Remember that your share will be under the /SMB directory. </p> <p> </p> <p>Showing the /SMB directory</p> <p> </p> <p>Then in there we can see the folders we created earlier.</p> <p> </p> <p>Then scroll to the bottom and select Ok.</p> <p> </p> <p>Login to JellyFin with your JellyFin account you created earlier. </p> <p> </p> <p>Then that is it, you are in! enjoy watching and streaming your content!</p> <p> </p>"},{"location":"homelabseries/EP24_jellyFin/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP25_Pterodactylinstall/","title":"How to Install The Pterodactyl Game Panel in One Click!","text":"<p>Pterodactly is an amazing game panel that has been around for the last ten years, I have been keeping my eye on this project and really think it is worth the spotlight at this point. </p> <p>Check the project out here</p>"},{"location":"homelabseries/EP25_Pterodactylinstall/#what-you-need-to-get-started","title":"What you need to get started","text":"<ol> <li> <p>Create a VM or have Ubuntu Server installed on a machine ready to go.</p> </li> <li> <p>Head over to the Pterodactyl-Installer script here</p> </li> </ol>"},{"location":"homelabseries/EP25_Pterodactylinstall/#how-to-install-petrodactyl","title":"How to Install Petrodactyl","text":"<p>Create a VM with whatever specs you can afford, it should be at least the minimum shown below. Reminder: All your game servers will have to share whatever resources you allocate. </p> <p> </p> <p>SSH into your VM with the following command:</p> <pre><code>ssh &lt;username&gt;@&lt;ip_address&gt;\n</code></pre> <p> </p> <p>Then, put yourself in root mode with</p> <pre><code>sudo su\n</code></pre> <p> </p> <p>Then paste the install scrip which can be found here </p> <pre><code>bash &lt;(curl -s https://pterodactyl-installer.se)\n</code></pre> <p> </p> <p>You will then see a list of options; select #2 so we can install the game panel and wings. </p> <p> </p> <p>You will then be prompted with the \u201cDatabase name\u201d field; anything in ( ) will mean that is the default answer. We will leave the defaults for the database name and username and then make our own password. </p> <p> </p> <p>Next, you will click the link shown in the CLI using  ctrl + left click  and find your timezone, then paste your timezone into the CLI. It can also be found here</p> <p> </p> <p>Next, you need to add a valid email address; this is used to create your account, receive emails, and find users within the panel. They will ask for that twice. </p> <p> </p> <p>Next, you will create an admin account. Fill out all the relevant information. </p> <p> </p> <p>Next, we need to set the FQDN (if this server will be seen over a public IP); if not, you will use the IP address of your machine / VM for the domain name, which will allow you to access it in your browser. </p> <p> </p> <p>Next, click enter for \u201cno\u201d on (Do you want to automatically configure a UFW (FireWall)). If this were public facing, you would want to select \u201cY\u201d for yes. </p> <p> </p> <p>Next, confirm that your settings look correct, and then type \u201cY\u201d for yes to continue with the installation. Wait a couple of minutes for everything to finish. After that, you will see a question asking to send anonymous data; that is up to you, but we typed no and then clicked enter to finish the installation.  </p> <p> </p> <p>Next, you should be prompted to perform the Wings installation on the following screen. Go ahead and type your FQDN or IP address into your browser and log in with the admin credentials you created earlier.  </p> <p> </p> <p>Next, return to your command prompt and type \u201cY\u201d to continue the wings installation. You will be prompted with a few questions asking: </p> <ol> <li> <p>Do you want to  auto-configuring the UFW. If this machine is public-facing, you will want to say yes; if the server is not public-facing, you can say no. </p> </li> <li> <p>We will also type no to auto-setup the database for hosts. </p> </li> <li> <p>You will also say no to setting up Let\u2019s Encrypt unless this is public-facing.  </p> </li> <li> <p>type \u201cY\u201d for yes to continue with the installation.</p> </li> </ol> <p> </p> <p>Next, you will see a link in the CLI to their documentation on how to finish setting up Wings. Click that. </p> <p> </p> <p>Next, we will create a node in the panel by selecting the gear icon on the top right, then select locations (create a new location and name it whatever you want). Finally, go back to the nodes tab and click Create New at the top right. Read through this step carefully, but it is self-explanatory. </p> <p> </p> <p>Next, after your node is created, we need to assign IP addresses and port numbers to it. You can add a maximum of 1000 port number ranges at a time. For example, ports 1000-2000 would be a range. </p> <p> </p> <p>Next, under the nodes tap, if you click your node and then the configurations tab, you will be presented with the config file we need to add to our server in the CLI. That will be done by doing. </p> <pre><code>nano /etc/pterodactyl/config.yml\n</code></pre> <p>Then, paste it into the empty file. </p> <p> </p> <p>To exit the file, you will type  ctrl + X , then type y to save and enter to exit.</p> <p>Here is what it looks like in the folder</p> <p> </p> <p>Next you will need to start wings with the following command and ensure you do not get any errors. </p> <pre><code>sudo wings --debug\n</code></pre> <p> </p> <p>Next, we can set wings to run in the background by typing the following command.</p> <pre><code>sudo systemctl enable --now wings\n</code></pre> <p> </p>"},{"location":"homelabseries/EP25_Pterodactylinstall/#create-your-first-server","title":"Create your first server.","text":"<p>Go to your servers tab in the game panel, select Create New at the top right, and follow the instructions, which are again self-explanatory. Specifically, \u201cNest Configuration\u201d is where you will set the type of game you are trying to create. Side note: Also, pay close attention to the \u201cStartup Configuration\u201d because that is where you will set important things like the amount of RAM your server can use. </p> <p> </p> <p>Next, wait for your game server to install. After a few minutes, you can try reloading your browser, and the installing banner should be gone. </p> <p> </p> <p>Next, click the \u201cPterodactyl\u201d word at the top right of the panel; you will then see your game server on the main page. Click it and then click Start at the top right. Wait for your server to start and you are good to go!</p> <p> </p> <p>You are finally done, go ahead and try logging on to your game server! </p> <p> </p> <p>We are in!</p> <p> </p>"},{"location":"homelabseries/EP25_Pterodactylinstall/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP26_nginxproxymanagerssl/","title":"How to Setup The Nginx Proxy Manager and DuckDNS for Local SSL Certificates","text":""},{"location":"homelabseries/EP26_nginxproxymanagerssl/#create-a-virtual-machine-or-container","title":"Create a Virtual Machine or Container","text":"<p>Setup a VM or CT on your preferred platoform, in our case we are going to create a CT on Proxmox:</p> <p>Watch our video shown above if you need to know how to do this!</p> <p> </p>"},{"location":"homelabseries/EP26_nginxproxymanagerssl/#installing-docker","title":"Installing Docker","text":"<p>We are going to use their documentation found here</p> <p>First, ensure your system is up to date with</p> <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre> <p> </p> <p>Next we need to set up Docker's\u00a0apt\u00a0repository.</p> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre> <p> </p> <p>Install the Docker packages.</p> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p> </p> <p>Verify that the installation is successful by running the\u00a0hello-world\u00a0image:</p> <pre><code>sudo docker run hello-world\n</code></pre> <p> </p>"},{"location":"homelabseries/EP26_nginxproxymanagerssl/#creating-the-nginx-docker-compose-file","title":"Creating the Nginx Docker Compose File","text":"<p>Go ahead and create the docker-compose file with</p> <pre><code>nano docker-compose.yml\n</code></pre> <p> </p> <p>Then you need to paste the MINIMUM required to compose file content, which is:</p> <pre><code>services:\n  app:\n    image: 'jc21/nginx-proxy-manager:latest'\n    restart: unless-stopped\n    ports:\n      - '80:80'\n      - '81:81'\n      - '443:443'\n    volumes:\n      - ./data:/data\n      - ./letsencrypt:/etc/letsencrypt\n</code></pre> <p> </p> <p>Bring up your stack with:</p> <pre><code>docker-compose up -d\n\n# If using docker-compose-plugin\ndocker compose up -d\n</code></pre> <p> </p>"},{"location":"homelabseries/EP26_nginxproxymanagerssl/#how-to-login-to-nginx-proxy-manager","title":"How to Login to Nginx Proxy Manager","text":"<p>When your docker container runs, connect to the IP on the port 81 for the admin interface. Sometimes, this can take a little bit because of the entropy of keys. Then create your own username, email, and password.</p> <p>If you do not know your VM/CT IP you can use the following command to find it:</p> <pre><code>ip a\n</code></pre> <p> </p> <p>Then head to the site in your browser using:</p> <pre><code>http://&lt;your VM/Container IP&gt;:81\n</code></pre> <p>Email:</p> <pre><code>admin@example.com\n</code></pre> <p>Password:</p> <pre><code>changeme\n</code></pre> <p> </p>"},{"location":"homelabseries/EP26_nginxproxymanagerssl/#creating-your-duckdns-ssl-certificate","title":"Creating your DuckDNS SSL Certificate","text":"<p>Head over to DuckDNS's website and login with your google account or other here</p> <p>After you have logged in create a subdomain and add the IP address of your Nginx Proxy Manager VM/CT/Device. </p> <p>NOTE: This is also where you will get your token ID. </p> <p> </p> <p>Now on your Nginx Proxy Manager Site click SSL certificates at the top and Add SSL Certificate</p> <p> </p> <p>Fill out the information as shown below. Keep in mind you will add your <code>&lt;subdomain_youcreated&gt;.duckdns.org</code> AND a <code>*.&lt;subdomain_youcreated&gt;.duckdns.org</code>. Pay close attention to that wildcard, this will allow you to create many sub-sub domains on your local network!</p> Warning Box Example <p>YOU MAY GET A FAILED ERROR after clicking SAVE, this is due to all the public DNS servers in the world have not populated your new domain name yet. Wait a couple minutes, click save again and see if it works. </p> <p> </p> <p>We now have a succesful SSL certificate (after about 5 minutes of waiting for the DNS record to populate around the world)</p> <p> </p> <p>Now on your Proxy Dashboard click hosts at the top then click Proxy hosts then add proxy host at the top right. </p> <p>In this example you can see we added the <code>&lt;pve&gt;</code> . part to our domain <code>lthlearn.duckdns.org</code> that is how we can use the wild card <code>*</code> we created earlier. For all services on our network we will replace that wildcard with the site name we want. Also be mindful, Proxmox uses HTTPs by default but for most services you will probably select HTTP in the scheme box.</p> Warning Box Example <p>Some services may require you to enable the `websockets support` option to work properly. Example: Code boxes that auto copy the commands require it.</p> <p> </p> <p>After you click save you should now see your SSL/Domain entry. Try clicking it, for some of you it may work! If you use OPNsense like me, it will not, it will be blocked so we have one more step!</p> <p> </p>"},{"location":"homelabseries/EP26_nginxproxymanagerssl/#create-an-opnsense-local-dns-wild-card-entry","title":"Create an OPNSense Local DNS Wild Card Entry","text":"<p>Enable Unbound DNS:</p> <p>Navigate to Services &gt; Unbound DNS &gt; General Settings.</p> <p>Ensure that Unbound DNS is enabled.</p> <p> </p> <p>Add a Wildcard DNS Override:</p> <p>Go to Services &gt; Unbound DNS &gt; Overrides.</p> <p>Click the orange + Add button under Host Overrides.</p> <p> </p> <p>Fill out the form:</p> <p>Host: * (wildcard for all subdomains).</p> <p>Domain: duckdns.org.</p> <p>Type: Select A for IPv4.</p> <p>IP Address: Enter the internal IP of your Nginx Proxy Manager server (e.g., 192.168.50.234).</p> <p>Optionally, add a description like \"Wildcard for DuckDNS domains.\"</p> <p>Save and apply changes.</p> <p> </p> <p>Flush DNS Cache:</p> <p>After creating the override, flush the DNS cache on your local machine:</p> <p>Open your CMD and type the following:</p> <p>Windows: <pre><code>ipconfig /flushdns\n</code></pre></p>"},{"location":"homelabseries/EP26_nginxproxymanagerssl/#assign-more-domains-to-your-outher-services","title":"Assign More domains to your outher services","text":"<p>Now go back to your Nginx Proxy Manager and click on your domain again and it should work!</p> <p>Repeat the proxy host process for all the services you want to have SSL certifications to get rid of those annoying unsecure SSL errors! </p> <p> </p> <p>Secured websites are now working</p> <p> </p>"},{"location":"homelabseries/EP26_nginxproxymanagerssl/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP27_docmost/","title":"How to Install Docmost on Proxmox with SSL","text":"<p>Welcome to another video guys, in this video we will cover how to install Docmost on Proxmox to include an SSL certificate for our site! The SSL certificate is required to get all the features out of Docmost. Any browser note taking application will require SSL and websocket support for features like code block auto copy and paste to work. You can follow the previous episode (episode 26) if you have not setup a reverse proxy with an SSL certificate. </p>"},{"location":"homelabseries/EP27_docmost/#create-a-container-on-proxmox","title":"Create a Container on Proxmox","text":"<p>This step has been covered in many episodes, if you want specific details please watch our video linked above. </p> <ol> <li> <p>Go to our node's local storage and download the CT Ubuntu template (if you have not done this already for previous CT installs you have done or videos you have followed from us).</p> </li> <li> <p>Configure the CT settings (it is very important to select the correct Networking settings DHCP or self assign a static IP).</p> </li> <li> <p>Then start our machine.</p> </li> </ol> <p>To Login to your CT, go to your console tab and type the following</p> <ol> <li> <p>Username: <code>root</code></p> </li> <li> <p>Password: (Is what you set during the  creation of the CT)</p> </li> </ol>"},{"location":"homelabseries/EP27_docmost/#installing-docker","title":"Installing Docker","text":"<p>We are going to use their documentation found here</p> <p>Set up Docker's\u00a0apt\u00a0repository.</p> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre> <p> </p> <p>Install the Docker packages.</p> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p> </p> <p>Verify that the installation is successful by running the\u00a0hello-world\u00a0image:</p> <pre><code>sudo docker run hello-world\n</code></pre> <p> </p>"},{"location":"homelabseries/EP27_docmost/#install-docmost","title":"Install Docmost","text":"<p>Setup the Docker compose file\u200b</p> <p>Create a new directory for Docmost and download the Docker compose file with commands below:</p> <pre><code>mkdir docmost\ncd docmost\ncurl -O https://raw.githubusercontent.com/docmost/docmost/main/docker-compose.yml\n</code></pre> <p> </p> <p>We are going to use their documentation found here</p> <p>Before we edit that file we need to get a key for our app_secret which will be used in our docker compose file using the following command:</p> <pre><code>openssl rand -hex 32\n</code></pre> <p> </p> <p>We then need to get our machines IP address to enter into this file using (make sure you write down your IP and key somewhere)</p> <pre><code>ip a\n</code></pre> <p> </p> <p>For the below exmapel you need to change the following parameters:</p> <ol> <li> <p>The <code>APP_URL</code> should be replaced with your chosen domain. E.g. <code>https://example.com</code> or <code>https://docmost.example.com</code>.</p> </li> <li> <p>The <code>APP_SECRET</code> value must be replaced with a long random secret key (32 characters minimum) you created a second out with the openssl command. You can generate the secret with openssl rand -hex 32. If you leave the default value, the app will fail to start.</p> </li> <li> <p>Replace <code>STRONG_DB_PASSWORD</code> in the <code>POSTGRES_PASSWORD</code> environment variable with a secure password of your making.</p> </li> <li> <p>Update the <code>DATABASE_URL</code> default <code>STRONG_DB_PASSWORD</code> value with your chosen Postgres password you created in step 3 (they need to match).</p> </li> </ol> <p>You are going to edit those four parameters in the following document:</p> <p>Open the file with nano:</p> <pre><code>nano docker-compose.yml\n</code></pre> <p> </p> <p>Example/template:</p> <p><pre><code>version: \"3\"\n\nservices:\n  docmost:\n    image: docmost/docmost:latest\n    depends_on:\n      - db\n      - redis\n    environment:\n      APP_URL: \"http://localhost:3000\"\n      APP_SECRET: \"REPLACE_WITH_LONG_SECRET\"\n      DATABASE_URL: \"postgresql://docmost:STRONG_DB_PASSWORD@db:5432/docmost?schema=public\"\n      REDIS_URL: \"redis://redis:6379\"\n    ports:\n      - \"3000:3000\"\n    restart: unless-stopped\n    volumes:\n      - docmost:/app/data/storage\n\n  db:\n    image: postgres:16-alpine\n    environment:\n      POSTGRES_DB: docmost\n      POSTGRES_USER: docmost\n      POSTGRES_PASSWORD: STRONG_DB_PASSWORD\n    restart: unless-stopped\n    volumes:\n      - db_data:/var/lib/postgresql/data\n\n  redis:\n    image: redis:7.2-alpine\n    restart: unless-stopped\n    volumes:\n      - redis_data:/data\n\nvolumes:\n  docmost:\n  db_data:\n  redis_data:\n  ```\n\n  &lt;a href=\"/images/EP27_docmost/SSD 1_1.8.6.png\" class=\"image-expand\"&gt;\n    &lt;img src=\"/images/EP27_docmost/SSD 1_1.8.6.png\" alt=\"Description of your image\"&gt;\n&lt;/a&gt;\n\n## After Docmost Install\n\nStart the Services\u200b\n\nMake sure you are inside the docmost directory which contains the docker-compose.yml file.\n\nTo start the services, run:\n</code></pre> docker compose up -d <pre><code>&lt;a href=\"/images/EP27_docmost/SSD 1_1.8.7.png\" class=\"image-expand\"&gt;\n    &lt;img src=\"/images/EP27_docmost/SSD 1_1.8.7.png\" alt=\"Description of your image\"&gt;\n&lt;/a&gt;\n\nNow you can go to your Docmost instance at:\n</code></pre> http://:3000 ``` <p>You will be prompted with the following screen to create your own account:</p> <p>NOTE: it only asks for a password one time SO MAKE SURE YOU TYPE IT RIGHT!</p> <p> </p>"},{"location":"homelabseries/EP27_docmost/#how-to-configureuse-docmost","title":"How to Configure/Use Docmost","text":""},{"location":"homelabseries/EP27_docmost/#change-theme-to-light-or-dark-mode","title":"Change theme to light or dark mode","text":"<p>To change to Darkmost you can click your profile at the top right / my preferneces / and select dark mode under theme. </p> <p> </p> <p> </p>"},{"location":"homelabseries/EP27_docmost/#create-spaces","title":"Create Spaces","text":"<p>You can organize your notes into \"books\" or what they call Spaces. You can use Spaces for specific topics or control user access to spaces which is really cool. This can be found under settings / spaces</p> <p> </p> <p>To change between spaces you will click the drop down when in notes. (Reminder, if you just created a space you may need to refresh your browser to see it)</p> <p> </p>"},{"location":"homelabseries/EP27_docmost/#creat-folders","title":"Creat folders","text":"<p>To create folders by topics you can create a page and then drag and hold it over another, this will imbed the page and create a drop down folder. </p> <p> </p> <p>here is what that looks like</p> <p> </p>"},{"location":"homelabseries/EP27_docmost/#adding-sections-features-code-blocks","title":"Adding sections / features / Code blocks","text":"<p>Docmost used the / command, this will then present you with a menu of all the items you can add to your page</p> <p> </p>"},{"location":"homelabseries/EP27_docmost/#adding-the-ssl-certificate","title":"Adding the SSL certificate","text":"<p>Again, if you do not have an SSL certificate for SSL you can watch our previous episode (EP 26) found in the far left column or on our YouTube Channel here</p> <p> </p>"},{"location":"homelabseries/EP27_docmost/#how-to-update-docmost","title":"How to Update Docmost","text":"<p>To upgrade:</p> <p>Make sure you run the following in your Docmost directory and run the following commands ALSO be sure to save any files or not be working in Docmost when performing these commands:</p> <p>docker pull docmost/docmost</p> <p>docker compose up --force-recreate --build docmost -d</p> <p>(sorry I cannot make this a copy code box or it breaks the page for some reason)</p>"},{"location":"homelabseries/EP27_docmost/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP28_vaultwarden/","title":"How to Install VaultWarden in 2025","text":"<p>We are using the documentation found here</p>"},{"location":"homelabseries/EP28_vaultwarden/#prerequisites","title":"Prerequisites","text":"<p>You will need to give this site an SSL certificate to be able to access the site. You also want this because it prevents man-in-the-middle attacks from seeing your passwords. We have made a video on that, you can find it here:</p> <p>The article on our site can be found here</p>"},{"location":"homelabseries/EP28_vaultwarden/#create-a-containervm-in-proxmox","title":"Create a Container/VM in Proxmox","text":"<p>The CT will be configured with 512MB of ram, 2 CPU cores, and 10 GB of storage.</p> <ol> <li>Log in with the username root and the password you created during setup.</li> <li>Do the following command to get the IP address of your CT:</li> </ol> <pre><code>ip a\n</code></pre> <p> </p>"},{"location":"homelabseries/EP28_vaultwarden/#installing-vaultwarden-video","title":"Installing Vaultwarden Video","text":""},{"location":"homelabseries/EP28_vaultwarden/#installing-docker-compose","title":"Installing Docker &amp; Compose","text":"<p>We will be following the documentation found here</p> <p>See the following commands to install Docker:</p> <p>Run the following command to uninstall all conflicting packages:</p> <pre><code>for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done\n</code></pre> <p> </p> <p>Set up Docker's\u00a0<code>apt</code>\u00a0repository.</p> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre> <p>Install the Docker packages.</p> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p>Verify that the installation is successful by running the\u00a0<code>hello-world</code>\u00a0image:</p> <pre><code>sudo docker run hello-world\n</code></pre> <p>Verify the compose version:</p> <pre><code>docker compose version\n</code></pre>"},{"location":"homelabseries/EP28_vaultwarden/#create-a-compose-file","title":"Create a compose file","text":"<p>To use Docker Compose, you need to create a <code>compose.yaml</code> which will hold the configuration for running the Vaultwarden container.</p> <pre><code>nano compose.yml\n</code></pre> <p>Then you paste the following configuration:</p> <pre><code>services:\n  vaultwarden:\n    image: vaultwarden/server:latest\n    container_name: vaultwarden\n    restart: unless-stopped\n    environment:\n      DOMAIN: \"https://vw.domain.tld\"\n    volumes:\n      - ./vw-data/:/data/\n    ports:\n      - 80:80\n</code></pre> <p>Start the Docker Compose file with (the -d runs it in the background so you can still use your CLI:)</p> <pre><code>docker compose up -d\n</code></pre>"},{"location":"homelabseries/EP28_vaultwarden/#set-up-your-ssl-certificate","title":"Set up your SSL Certificate","text":"<p>If you have not followed our previous video on how to set up SSL certificates with Nginx Proxy Manager, please follow that video here</p>"},{"location":"homelabseries/EP28_vaultwarden/#after-logging-into-vaultwarden","title":"After logging into Vaultwarden","text":"<ol> <li>Open Vaultwarden via the new URL you created.</li> <li>Create a username and password</li> <li>login</li> <li>Select \u201cInstall Browser Extension.\u201d</li> <li>On the top right of Chrome, find your Vaultwarden extension</li> <li>Select \u201cAccessing\u201d (Bitwarden), there will be a self-hosted option, select that, and type the URL of your own Bitwarden server.</li> </ol> <ol> <li>You will then be able to go to your common websites and add your username and password into Vaultwarden for use at later times, change your passwords to a more complex password, and much more.</li> </ol>"},{"location":"homelabseries/EP28_vaultwarden/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP29_cockpit/","title":"How to Install Cockpit for Linux Server","text":""},{"location":"homelabseries/EP29_cockpit/#manage-linux-servers-with-cockpit","title":"Manage Linux Servers With Cockpit","text":"<p>The first step you need to take is to create an Ubuntu Linux Server in your virtual environment of choice. We are using Proxmox for this tutorial. Ensure you have the latest Ubuntu Server installed, which can be found [here](https://releases.ubuntu.com/). In our case, we are going with 24.04 LTS.</p>"},{"location":"homelabseries/EP29_cockpit/#update-ubuntu-server","title":"Update Ubuntu Server","text":"<p>First thing we want to do is ensure all packages are up to date before installing anything with:</p> <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre> <p>We are using the documentation that can be found here</p>"},{"location":"homelabseries/EP29_cockpit/#installing-cockpit","title":"Installing Cockpit","text":"<p>This repository is enabled by default, so all we want to do is make sure everything is up to date with the following commands.</p> <pre><code>. /etc/os-release\nsudo apt install -t ${VERSION_CODENAME}-backports cockpit\n</code></pre> <p>To access the cockpit, open your preferred browser and go to the following.</p> <pre><code>https://IP_ADDRESS_OF_MACHINE:9090\n</code></pre>"},{"location":"homelabseries/EP29_cockpit/#software-tab","title":"Software Tab","text":"<p>Go ahead and drop down to the software tab and perform any missing updates before continuing.</p>"},{"location":"homelabseries/EP29_cockpit/#fix-cache-whilst-offline-error","title":"Fix Cache Whilst Offline Error","text":"<p>You may run into an error like \u201cCannot download packages whilst offline.\u201d This is a standard error with Ubuntu Server and can be fixed by following the documentation found here</p> <p>Commands to solve the error:</p> <pre><code>sudo nano /etc/NetworkManager/conf.d/10-globally-managed-devices.conf\n</code></pre> <p>Then add the following:</p> <pre><code> [keyfile]\n unmanaged-devices=none\n</code></pre> <p>Lastly, you will set up a dummy network interface with:</p> <pre><code>sudo nmcli con add type dummy con-name fake ifname fake0 ip4 1.2.3.4/24 gw4 1.2.3.1\n</code></pre> <p>Then reboot your system:</p> <pre><code>sudo reboot\n</code></pre>"},{"location":"homelabseries/EP29_cockpit/#how-to-use-cockpit","title":"How to use Cockpit","text":""},{"location":"homelabseries/EP29_cockpit/#overview","title":"Overview","text":"<p>The first tab, overview, allows you to see the overall health of your system, hardware details, bugs, and configuration settings.</p>"},{"location":"homelabseries/EP29_cockpit/#logs","title":"Logs","text":"<p>Logs creates an easy place to access logs on the system for investigations or oversight.</p>"},{"location":"homelabseries/EP29_cockpit/#storage","title":"Storage","text":"<p>This area allows you to see the usage of partitions, capacity, and drive mounting locations. You can even use the three dots at the top right next to the \u201cHard Disk Drive\u201d name to create more partitions, or select the three dots next to the current partitions to change the sizing and formatting if they are set up correctly.</p>"},{"location":"homelabseries/EP29_cockpit/#networking","title":"Networking","text":"<p>The networking tab is a great tool to ensure your Ethernet connections are not throttling your device. You can also add VPNS, bonds, teams, bridges, and more under this tab.</p>"},{"location":"homelabseries/EP29_cockpit/#accounts","title":"Accounts","text":"<p>Accounts are one of the things people struggle with the most. Under this tab, you can create tabs, manage users' access, and see what groups they are a part of and when they last logged in. You can easily add SSH keys for users from their profile when clicking the three dots to the far right of their name.</p>"},{"location":"homelabseries/EP29_cockpit/#services","title":"Services","text":"<p>This tab allows you to see processes running on the device.</p>"},{"location":"homelabseries/EP29_cockpit/#applications","title":"Applications","text":"<p>Applications are one of the best features of Cockpit, as they allow you to manage things from your browser, like containers and virtual machines. Official applications can be found [here](https://cockpit-project.org/applications), but there are also community ones you can find online</p> <p>We will be installing the application for virtual machines found here</p> <p>Command-line installation is also possible using the package name like seen below:</p> <pre><code>sudo apt install cockpit cockpit-machines\n</code></pre> <p>Then you need to refresh your browser to see the application</p> <p>Start and enable the cockpit services.</p> <pre><code>sudo systemctl start cockpit\n</code></pre> <pre><code>sudo systemctl enable cockpit\n</code></pre>"},{"location":"homelabseries/EP29_cockpit/#software-updates","title":"Software Updates","text":"<p>We already covered this page briefly but this tab is where you will go to update your machine.</p>"},{"location":"homelabseries/EP29_cockpit/#terminal","title":"Terminal","text":"<p>This tab is self-explanatory, but it allows you to access your machine via SSH.</p>"},{"location":"homelabseries/EP29_cockpit/#cockpit-server-accounts","title":"Cockpit Server Accounts","text":"<p>Another advantage of Cockpit is your ability to manage multiple machines by clicking your name at the top left and adding more hosts. This allows you to switch between machines easily.</p>"},{"location":"homelabseries/EP29_cockpit/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP2_switch/","title":"Switch Install","text":"<p>In this episode we are going to cover installing your selected switch which will give your internal LAN network a wired connection. Here is the physical layout of our topology.  </p> <p>This episode is super short, but after you recieve your switch, you are simply going to plug it all in. The picture above explains how this is done physically for the sake of this series. </p> <p>You are going to plug the switch in to power, and then take ethernet cables and plug one from your ISP to your OPNsense machine (whatever one you decided to buy), then from your OPNsense machine to your switch, and then all other devices will be plugged into your switch for this series.</p>"},{"location":"homelabseries/EP2_switch/#watch-our-video-for-this-section-of-the-homelab-setup","title":"Watch our video for this section of the Homelab setup:","text":""},{"location":"homelabseries/EP2_switch/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP30_actualbudget/","title":"Actual Budgeting","text":"<p>In this episode we are going to cover a budgeting app called Actual. It is open source and totally free. If you would like to review screenshots of what it looks like and to learn more, check it our here</p>"},{"location":"homelabseries/EP30_actualbudget/#prerequisites","title":"Prerequisites","text":"<p>You will need to have some way of forcing HTTPS for this application to work. If you are following our homelab series, you would have already set up the Nginx Proxy Manager and that is what we are using in this video. If you need to install that first, follow our tutorial here</p>"},{"location":"homelabseries/EP30_actualbudget/#install-dockerdocker-compose","title":"Install Docker/Docker Compose","text":"<p>First thing we need to do is install docker and docker compose.</p> <p>We will be following the documentation found here</p> <p>See the following commands to install Docker:</p> <p>Run the following command to uninstall all conflicting packages:</p> <pre><code>for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done\n</code></pre> <p>Set up Docker's\u00a0<code>apt</code>\u00a0repository.</p> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre> <p>Install the Docker packages.</p> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p>Verify that the installation is successful by running the\u00a0<code>hello-world</code>\u00a0image:</p> <pre><code>sudo docker run hello-world\n</code></pre> <p>Verify the compose version:</p> <pre><code>docker compose version\n</code></pre>"},{"location":"homelabseries/EP30_actualbudget/#create-a-compose-file","title":"Create a compose file","text":"<p>To use Docker Compose, you need to create a <code>compose.yaml</code> which will hold the configuration for running the Vaultwarden container.</p> <pre><code>nano compose.yml\n</code></pre> <p>Then you paste the following configuration:</p> <pre><code>services:\n  actual_server:\n    image: docker.io/actualbudget/actual-server:latest\n    ports:\n      # This line makes Actual available at port 5006 of the device you run the server on,\n      # i.e. http://localhost:5006. You can change the first number to change the port, if you want.\n      - '5006:5006'\n    volumes:\n      # Change './actual-data' below to the path to the folder you want Actual to store its data in on your server.\n      # '/data' is the path Actual will look for its files in by default, so leave that as-is.\n      - ./actual-data:/data\n    healthcheck:\n      # Enable health check for the instance\n      test: ['CMD-SHELL', 'node src/scripts/health-check.js']\n      interval: 60s\n      timeout: 10s\n      retries: 3\n      start_period: 20s\n    restart: unless-stopped\n</code></pre> <p>Start the Docker Compose file with (the -d runs it in the background so you can still use your CLI:)</p> <pre><code>docker compose up -d\n</code></pre> <p>Grab the IP address of the machine with the following command:</p> <pre><code>ip a\n</code></pre> <p>Now navigate to your browser and type the following in to go to Actual:</p> <p>If you do not know your server IP you can type ip a into the cli to find it.</p> <pre><code> http://localhost:5006\n</code></pre>"},{"location":"homelabseries/EP30_actualbudget/#force-https-with-nginx-proxy-manager","title":"Force HTTPS with Nginx Proxy Manager","text":"<p>Next thing you will need to do is login to your Nginx Proxy Manager and add Actual to it. If you are unsure how to do this, you can follow our video on how to do that here</p>"},{"location":"homelabseries/EP30_actualbudget/#login-to-actual","title":"Login to Actual","text":"<p>Actual will only require a password to login. You can start fresh or video demo, I would recommend you view the demo to get started faster.</p>"},{"location":"homelabseries/EP30_actualbudget/#how-to-budget-with-acutal","title":"How to Budget with Acutal","text":"<p>If you would like to read more on how to budget with Actual and understand its concepts to budgeting, that can be found here</p>"},{"location":"homelabseries/EP30_actualbudget/#importing-bank-transactions","title":"Importing Bank Transactions","text":"<p>Instead of importing all your transactions you can setup a connection to SimpleFIN Bridge for American users which can be found here and only 15 USD per year.</p> <p>For our European viewers you can use GoCardless which you can learn more about here</p>"},{"location":"homelabseries/EP30_actualbudget/#using-credit-cards","title":"Using Credit Cards","text":"<p>Many people including me get confused on how to use a credit card with a budgeting app, that is why I wanted to make a specific section covering this topic. I will also cover how to do this in future videos. You can find how to use your credit card with your budget here</p>"},{"location":"homelabseries/EP30_actualbudget/#updating-actual","title":"Updating Actual","text":"<p>To update actual you can do it with the following commands:</p> <p>To check what version you are on and see the uptime you can do:</p> <pre><code>docker compose ps\n</code></pre> <p>To pull the latest you can do</p> <pre><code>docker compose pull\n</code></pre> <p>Then to recreate and start the container you can do</p> <pre><code>docker compose up -d\n</code></pre>"},{"location":"homelabseries/EP30_actualbudget/#how-to-use-actual","title":"How to use Actual","text":"<p>First thing, DO NOT OVERCOMPLICATE. You NEED obvious categories. The more categories you have, the easier it is to make balancing your budget impossible! Also, set up all your categories first!</p> <p>Remember, we should not create a category for each item. I will give you an example: You will not have a category called mortgage, to then just pay your mortgage. That complicates things and makes projections for future months harder. You will take all recurring bills and slap them in the SAME category. At the end of the day, the bills themselves don\u2019t matter; what matters is knowing you have 3K in bills and need 3K in income to zero out that category. Give each dollar a job, paying off something.</p>"},{"location":"homelabseries/EP30_actualbudget/#paying-credit-card-transactions","title":"Paying Credit Card Transactions","text":"<p>Many people ask how to categorize credit card payoff transactions (moving money from your checking account to pay off your credit card balance). We simply create a new group called \u201cCredit Card Payments\u201d and assign those transactions there.</p> <p>As for the line item of what you bought on the credit card, this is still set to the category, food, bills, etc.</p>"},{"location":"homelabseries/EP30_actualbudget/#bought-and-returned-goods","title":"Bought and returned goods","text":"<p>To keep your balance sheet accurate, you may buy something, then categorize it. Well, a few weeks or days go by, and you return it, you may add that money as income, right? Wrong, you will add that item to the same category as your initial purchase, which will equal out your balance sheet between categories and keep your account correct.</p>"},{"location":"homelabseries/EP30_actualbudget/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP31_cloudflaretunnels/","title":"How to Set up CloudFlare Tunnels in 2025","text":""},{"location":"homelabseries/EP31_cloudflaretunnels/#introduction","title":"Introduction","text":"<p>A Cloudflare Tunnel is a technology that establishes a secure, outbound-only connection between your home network and the Cloudflare global network. It essentially creates a \"tunnel\" that allows you to expose your services running on your home network to the internet, without requiring you to open ports or configure complex firewall rules. This can be particularly useful for homelabs, as it allows you to easily access your self-hosted services from anywhere in the world. </p> Warning Box Example <p>It is assumed you create a dedicated VM for your CloudFlare Tunnel Install, or install it on an existing VM. We show the install on an existing VM, BUT recommend a dedicated VM</p>"},{"location":"homelabseries/EP31_cloudflaretunnels/#how-to-create-a-cloudflare-tunnel","title":"How to Create a CloudFlare Tunnel","text":"<p>First, go to CloudFlare\u2019s website and log in (you can create an account with your Google account) here</p> <p> </p> <p>If you do not have a domain associated with your account, go ahead and buy one now; they are about 11 dollars a year. </p> <p> </p> <p>After you have a domain, we need to select the zero trust page on the left.</p> <p> </p> <p>You will be presented with the following screen, select networks then tunnels</p> <p> </p> <p>On the Tunnels screen we will select Add a tunnel</p> <p> </p> <p>From here we will select the reccomended option Select Cloudflared</p> <p> </p> <p>Name your tunnel to whatever you want.</p> <p> </p> <p>Next we will select our operating system, in this case that will be Debian.</p> <p>Next we need to take the following two commands and paste them into a dedicated VM for Cloudflare which will be used as our exit node within our home network. This will give Cloudflare access to your whole home network, thus a tunnel can be created for ANY services within your homelab. For the purpose of this video we simply installed the tunnel on our KASM VM and showed you how to access KASM from the public domain we bought at the beginning of this tutorial. </p> <p> </p> <p>SSH into your machine to paste the two above commands:</p> <pre><code>ssh &lt;username&gt;@&lt;server_ip&gt;\n</code></pre> <p> </p> <p>pasted commands</p> <p> </p> <p>Next we will see the tunnel connection has been made.</p> <p> </p> <p>Now you will select your subdomain (based on your service), domain name you want to use, and the service: protocol + Ip_address of the software/application you want to make accessible. In our case KASM uses HTTPS and then we did the local IP of the KASM VM.</p> <p> </p> <p>After that is created we will need to click the 3 dots on the far right and edit our new tunnel:</p> <p> </p> <p>You will then be presented with the following screen, select additional application settings, TLS, and under No TLS Verify turn that on and click save. </p> <p> </p> <p>Now go into another browser tab and access your service at the URL you created under your tunnel! </p> <p> </p>"},{"location":"homelabseries/EP31_cloudflaretunnels/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP31_cloudflaretunnels/#previous-video","title":"Previous video","text":""},{"location":"homelabseries/EP33_AutomaticSecurityUpdates/","title":"How to Enable Automatic Security Updates on Linux Ubuntu Server","text":""},{"location":"homelabseries/EP33_AutomaticSecurityUpdates/#linux-ubuntu-server-hardening","title":"Linux Ubuntu Server Hardening","text":"<p>In this series we will cover how to harden your Linux Debian based distros. We are going to follow best practice to make your network more secure, as well as get your machines ready to face the public internet. </p>"},{"location":"homelabseries/EP33_AutomaticSecurityUpdates/#introduction","title":"Introduction","text":"<p>We will cover the following topics over the next 6 videos/articles</p> <ol> <li> <p>Enable automatic security updates (live updates, no downtime to services, maintenance).</p> </li> <li> <p>SSH Key authentication (security).</p> </li> <li> <p>Enable the firewall (UFW) (security)</p> </li> <li> <p>Install Fail2Ban (security, protect against brute force attacks)</p> </li> <li> <p>Remove unnecessary packages (maintenance/security).</p> </li> <li> <p>Upload Public SSH Keys to Github (this allows you to auto-download your SSH keys during fresh server installs).</p> </li> </ol>"},{"location":"homelabseries/EP33_AutomaticSecurityUpdates/#updating-linux","title":"Updating Linux","text":"<p>The first thing we want to do is make sure our system has the latest updates.</p> <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre>"},{"location":"homelabseries/EP33_AutomaticSecurityUpdates/#1-enable-automatic-security-updates","title":"1. Enable Automatic Security Updates","text":"<p>When we have services/software hosted for extremely long periods of time, we need to ensure we have consistent updates, new-found vulnerabilities come out daily, and we want to ensure our systems are as secure as possible.</p> <p>The first command we want to run ensures that unattended upgrades are installed. You may get a response that it is already installed. We still need to make sure it is set to automatic updates.</p> <pre><code>sudo apt install unattended-upgrades\n</code></pre> <p>Let\u2019s ensure it is running properly with:</p> <pre><code>systemctl status unattended-upgrades\n</code></pre> <p>To enable automatic security updates, we will edit the following file:</p> <p>You should see the following parameters set to \u201c1\u201d:</p> <p>APT::Periodic::Update-Package-Lists \"1\";</p> <p>APT::Periodic::Unattended-Upgrade \"1\";</p> <pre><code>sudo nano /etc/apt/apt.conf.d/20auto-upgrades\n</code></pre>"},{"location":"homelabseries/EP33_AutomaticSecurityUpdates/#optional","title":"OPTIONAL","text":"<p>If you would like to dive deeper into automatic updates, you can edit the following file, you will have to do your own research on the options found within that folder which are past the scope of this article:</p> <pre><code>sudo nano /etc/apt/apt.conf.d/50unattended-upgrades\n</code></pre>"},{"location":"homelabseries/EP33_AutomaticSecurityUpdates/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP34_SSHKeyAuthentication/","title":"How to Enable Linux SSH Key Authentication","text":"<p>Throughout this course, we have used a username and password to SSH into our machines. It is not a bad option, especially if you are leaving services private, BUT if you are exposing SSH over the public internet or want to follow best practice, we need to use SSH logins via key authentication. It will be impossible for a hacker to ever log in to your system remotely without that private SSH key.</p> <p>First thing we need to do is create an encrypted key set on our computer (client), NOT the server. You will NEVER transfer your private key over the internet, it will always stay on your computer (however, if you want to keep a safe copy of it somewhere, you could put it on a USB drive for safekeeping). I do know some people upload them to their password vault as well, but I would be mindful of this practice. Remember, if you lose the key, you could still log in to your machine locally and upload a new key to access it remotely again if needed.</p>"},{"location":"homelabseries/EP34_SSHKeyAuthentication/#creating-the-ssh-key","title":"Creating the SSH Key","text":"<p>You can leave the default settings when creating your SSH key as shown below, (you do not need to change anything)</p> <p> </p> <p>Open a new tab in your Windows CLI (command line) and paste the following command.:</p> <pre><code>ssh-keygen -t ed25519 -C \"your_email@example.com\"\n</code></pre> <p>Your SSH key on Windows is stored in the following location:</p> <p><code>_C:\\\\Users\\\\your_username\\\\.ssh_</code></p>"},{"location":"homelabseries/EP34_SSHKeyAuthentication/#uploading-the-ssh","title":"Uploading the SSH","text":"<p>We will type the following command into that same CLI to upload the SSH key to our Linux Server:</p> <p>Make sure you put the correct SSH key name, the username of the Linux machine you are connecting to, and its IP address.</p> <pre><code>type $env:USERPROFILE\\.ssh\\&lt;your_ssh_key_name&gt; | ssh &lt;user&gt;@&lt;host_Ip_address&gt; \"mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys\"\n</code></pre> <p>We can then check the following folder to ensure it is in there:</p> <pre><code>cd .ssh\n</code></pre> <p>Then open the authorized keys file:</p> <pre><code>nano authorized_keys\n</code></pre> <p>To go back to your root directory, you can do the following:</p> <pre><code>cd ~\n</code></pre> <p>We can then ensure our SSH key folder has the correct permissions with:</p> <pre><code>chmod 700 ~/.ssh\nchmod 600 ~/.ssh/authorized_keys\n</code></pre>"},{"location":"homelabseries/EP34_SSHKeyAuthentication/#disable-ssh-password-authentication","title":"Disable SSH Password Authentication","text":"<p>We need to now disable password authentication so we only use the key to access our machine:</p> <pre><code>sudo nano /etc/ssh/sshd_config\n</code></pre> <p>We want to edit the following parameters in the config file found under the #Authentication section.</p> <pre><code>PasswordAuthentication no\nPermitRootLogin no\n</code></pre> <p>You may also have another file where you need to set that parameter to no as well, it can be changed here:</p> <pre><code>sudo nano /etc/ssh/sshd_config.d/50-cloud-init.conf\n</code></pre> <p>Then we need to restart SSH:</p> <pre><code>sudo systemctl restart ssh\n</code></pre> <p>Log out of our server and then try to log back in:</p> <pre><code>exit\n</code></pre> <p>Then SSH back in, and we should be taken back into our server automatically without being prompted for a password, thanks to our private key.</p> <pre><code>ssh &lt;username&gt;@&lt;server_ip&gt;\n</code></pre>"},{"location":"homelabseries/EP34_SSHKeyAuthentication/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP35_LinuxUFW/","title":"EP 35 - Linux Firewall Setup (UFW)","text":""},{"location":"homelabseries/EP35_LinuxUFW/#how-to-enable-and-use-the-linux-firewall-ufw","title":"How to Enable and use The Linux Firewall (UFW)","text":"<p>UFW (Uncomplicated Firewall) controls network traffic between your Ubuntu machine and other devices. It primarily filters incoming and outgoing connections to and from your machine, NOT internal communication on the machine.</p> <p>There is one thing we need to be mindful of when enabling the UFW: accidentally blocking our services\u2019 communication. We first need to grab a list of the services running on our machine and what port they are using, so we can add those to our firewall list.</p> <p>We will use the following command to grab a list of ports we need to add to our firewall, We will pay attention to the local address: port column. This column does not show ALL the ports you need to add, just gives you a list of ports so you can work through them and decide what you may need to add to your firewall.</p> <pre><code>sudo ss -lntup\n</code></pre> <p>Now we do not want to lose our SSH access, so we need to ensure the UFW has SSH permissions first. You will type \u201cy\u201d when prompted.</p> <pre><code>sudo ufw allow OpenSSH\nsudo ufw enable\n</code></pre> <p>We can verify UFW is running now by using the following command</p> <pre><code>sudo ufw status\n</code></pre> <p>Here are a list of common firewall rules you may need to use or come across often. </p> Command Description Command Description <code>sudo ufw enable</code> Enable the firewall <code>sudo ufw disable</code> Disable the firewall <code>sudo ufw status</code> Show firewall status <code>sudo ufw status verbose</code> Show detailed firewall status <code>sudo ufw status numbered</code> Show rules with numbers <code>sudo ufw allow [port]</code> Allow traffic on a port <code>sudo ufw deny [port]</code> Deny traffic on a port <code>sudo ufw allow [port]/[proto]</code> Allow port with protocol (e.g., tcp) <code>sudo ufw allow from [IP]</code> Allow all traffic from an IP <code>sudo ufw allow from [IP] to any port [port] proto [proto]</code> Allow from IP to specific port/proto <code>sudo ufw allow in on [iface] to any port [port]</code> Allow a port on a specific interface <code>sudo ufw delete allow [port]</code> Delete the allow rule for a port <code>sudo ufw delete [number]</code> Delete the rule by number <code>sudo ufw default deny incoming</code> Set the default policy to deny incoming <code>sudo ufw default allow outgoing</code> Set the default policy to allow outgoing <code>sudo ufw reload</code> Reload UFW to apply changes <code>sudo ufw reset</code> Reset UFW and remove all rules <code>sudo ufw logging on</code> Enable UFW logging <code>sudo ufw show added</code> Show added rules <code>sudo ufw --help</code> Show help and available commands <p>Ultimately, how you use the UWF will be on a case-by-case basis based on the services you are running. I hope this short and quick tutorial gives you an overview and idea of how the UFW works. It is a great tool and highly recommended to use; it just adds another layer of security to your infrastructure. </p>"},{"location":"homelabseries/EP35_LinuxUFW/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP36_fail2baninstall/","title":"How to Install Fail2Ban in 2025","text":""},{"location":"homelabseries/EP36_fail2baninstall/#install-fail2ban","title":"Install Fail2Ban","text":"<p>Fail2Ban is a log-parsing application that helps protect Linux servers from malicious attacks, particularly brute-force attacks. It works by monitoring system logs for suspicious activity, such as repeated failed login attempts, and then automatically blocking the IP address of the attacker from accessing the server. This blocking is usually achieved by adding rules to the server's firewall (e.g., iptables). '</p> <p>To install Fail2Ban:</p> <pre><code>sudo apt install fail2ban\n</code></pre> <p>We then need to start and enable the service:</p> <pre><code>sudo systemctl start fail2ban\nsudo systemctl enable fail2ban\n</code></pre> <p>We can ensure the service is running with:</p> <pre><code>sudo systemctl status fail2ban\n</code></pre> Warning Box Example <p>You can skip to part 5 because the default install is fine, but if you would like to be more specific you can read the following configuration options for Fail2Ban</p>"},{"location":"homelabseries/EP36_fail2baninstall/#basic-configuration","title":"Basic Configuration","text":"<p>Fail2ban uses \"jails\" to define which services to monitor and how to respond to suspicious activity.</p> <ol> <li> <p>Create a local configuration file:</p> <ul> <li> <p>Never edit the default <code>jail.conf</code> directly, as it may be overwritten during updates. Instead, copy it:</p> <pre><code>sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local\n</code></pre> <p>Or, you can create/edit <code>/etc/fail2ban/jail.local</code> directly if it doesn\u2019t exist.</p> </li> </ul> </li> <li> <p>Edit the configuration:</p> <pre><code>sudo nano /etc/fail2ban/jail.local\n</code></pre> <ul> <li>Common settings to review:<ul> <li><code>ignoreip</code> \u2014 IPs to never ban (e.g., your own).</li> <li><code>bantime</code> \u2014 How long (in seconds) a ban lasts (e.g., 3600 for 1 hour).</li> <li><code>findtime</code> \u2014 Time window for counting failures (e.g., 600 for 10 minutes).</li> <li><code>maxretry</code> \u2014 Number of failures before ban (e.g., 3).</li> </ul> </li> <li> <p>Example:</p> <pre><code>[DEFAULT] \nignoreip = 127.0.0.1 \nbantime  = 3600 \nfindtime = 600 \nmaxretry = 3\n</code></pre> </li> </ul> </li> <li> <p>Enable and configure a jail (e.g., SSH):</p> <ul> <li> <p>In the same <code>jail.local</code> file, ensure you have:</p> <pre><code>[sshd] \nenabled = true \nport    = ssh \nfilter  = sshd \nlogpath = /var/log/auth.log \nmaxretry = 3 \nbantime = 600 \nfindtime = 600\n</code></pre> </li> <li> <p>This will protect SSH from brute-force attacks</p> </li> </ul> </li> <li> <p>Restart Fail2ban to apply changes:</p> <pre><code>sudo systemctl restart fail2ban\n</code></pre> </li> </ol>"},{"location":"homelabseries/EP36_fail2baninstall/#verify-fail2ban-operation","title":"Verify Fail2ban Operation","text":"<ul> <li> <p>Check the status of all jails:</p> <pre><code>sudo fail2ban-client status\n</code></pre> </li> <li> <p>Check the status of a specific jail (e.g., SSH):</p> <pre><code>sudo fail2ban-client status sshd\n</code></pre> </li> </ul>"},{"location":"homelabseries/EP36_fail2baninstall/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP37_RemovelinuxPackages/","title":"Remove Unnecessary/Unused Linux Packages","text":"<p>This section is super quick and basic, but you should definitely know about it. Bloat software or unattended packages can have vulnerabilities in them, which can lead to opportunities for malicious hackers to find them, exploit them, and gain access to your system.</p> <p>On a Debian server, removing unnecessary packages can be done using the apt package manager. You can use apt remove to uninstall a package, and apt purge to uninstall a package and remove its configuration files as well. For automatically identifying and removing unused packages, apt autoremove can be used, and de-orphan can help find and remove orphaned packages.</p> <pre><code>sudo apt autoremove\nsudo apt autoclean\nsudo apt clean\n</code></pre>"},{"location":"homelabseries/EP37_RemovelinuxPackages/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP38_SSHKeysGithub/","title":"EP 38 - Upload SSH Keys to GitHub and Manage them","text":""},{"location":"homelabseries/EP38_SSHKeysGithub/#6-how-to-upload-ssh-keys-to-github-and-manage-your-ssh-keys","title":"6 How to Upload SSH Keys to GitHub and Manage your SSH Keys","text":"<p>When installing Ubuntu Server, you may have noticed an option to import SSH keys; that is where this step comes into play. In the previous SSH section (section 2), I showed you how to create and upload SSH keys to your server, you can find that episode here if you need to create a key first. Well, you can avoid the majority of those steps by adding the SSH key during the installation of Ubuntu Server from your GitHub account.</p> <p>First, log in to Github here</p> <ol> <li>In the upper-right corner of any page on GitHub, click your profile photo, then click Settings.</li> <li>In the \"Access\" section of the sidebar, click SSH and GPG keys.</li> <li>Click Add SSH key.</li> <li>In the \"Title\" field, add a descriptive label for the new key. For example, if you're using a personal laptop, you might call this key \"Personal laptop\".</li> <li>Select the type as authentication.</li> <li>In the \"Key\" field, paste your public key. This will be found on your computer, make SURE you copy the public key with .pub extension and NOT your private key (this can be done by right clicking on it, properties, and looking at the extension type for .pub).</li> <li>Click Add SSH key.</li> </ol> <pre><code>C:\\\\Users\\\\your_username\\\\.ssh\n</code></pre> <p>If prompted, confirm access to your account on GitHub.</p>"},{"location":"homelabseries/EP38_SSHKeysGithub/#download-keys-from-github-to-an-already-created-linux-server","title":"Download keys from GitHub to an already created Linux Server","text":"<p>If you want to grab the SSH key from your GitHub account for an already set-up Linux server, you can use the following command:</p> <pre><code>curl https://github.com/&lt;username&gt;.keys &gt;&gt; ~/.ssh/authorized_keys\n</code></pre>"},{"location":"homelabseries/EP38_SSHKeysGithub/#managing-multiple-ssh-keys","title":"Managing Multiple SSH Keys","text":"<p>We first want to create the config file (without any extension) using the following command in our CMD/CLI:</p> <pre><code>New-Item -Path $env:USERPROFILE\\.ssh\\config -ItemType File -Force\nnotepad $env:USERPROFILE\\.ssh\\config\n</code></pre> <p>Then we will use the following structure to add each server/service:</p> <p>You need to do the following:</p> <ol> <li>Create a hostname (whatever you want)</li> <li>Add the server IP</li> <li>Add the Server\u2019s username</li> <li>Add the private keys file nameThen the rest can stay default.</li> </ol> <pre><code># This block defines how to connect to a specific server\nHost &lt;hostname you pick&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# This is what you use in the CMD to connect\n    HostName &lt;server ip&gt;      \u00a0\u00a0\u00a0   \u00a0\u00a0\u00a0\u00a0# IP address or domain name of the server\n    User &lt;username on that server&gt;      # Username to log in as\n    IdentityFile ~/.ssh/&lt;your_private_key&gt;  # Full path to the private key\n    Port 22                             # Optional: SSH port (default is 22)\n    PreferredAuthentications publickey  # Optional: forces public key authentication\n    IdentitiesOnly yes                  # Only use the IdentityFile specified, not all agent keys\n</code></pre> <p>Now, before we try to connect, we need to ensure only our logged-in user has permissions to the config file:</p> <ol> <li>Right-click on the newly created config file located in our .ssh directory.</li> <li>Select the security tab</li> <li>Select advanced</li> <li>Select Disable Inheritance</li> <li>Leave only your currently logged-in user and select Apply.</li> </ol>"},{"location":"homelabseries/EP38_SSHKeysGithub/#logging-in-with-the-hostname","title":"Logging in with the hostname","text":"<p>So now all we need to do is grab the hostname from that config file and log in! You no longer need to use passwords, usernames, at symbols, or anything else. Just the below command with the hostname you set earlier in the config file.</p> <pre><code>ssh &lt;host_name&gt;\n</code></pre> <p>Example from our video:</p> <pre><code>ssh githubsshkeys\n</code></pre> <p> </p>"},{"location":"homelabseries/EP38_SSHKeysGithub/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP39_MovingProxmoxVMStorage/","title":"EP 39 - Move Proxmox VMs & Containers to a New Storage Drive","text":""},{"location":"homelabseries/EP39_MovingProxmoxVMStorage/#move-proxmox-vms-containers-to-a-new-storage-drive","title":"Move Proxmox VMs &amp; Containers to a New Storage Drive","text":"<p>The reasons are long so you can skip this part if you want BUT:</p> <p>Reasons why you may need to do this:</p> Informative Section ! <p>     upgrading to a larger or faster drive, running out of space, performance boost by migrating to SSDs or NVMe, replacing aging or failing hardware, decommissioning or removing a drive, reconfiguring storage pools or RAID setups, drive failure or errors, consolidating or organizing storage, centralizing VMs and containers for easier management, separating workloads based on performance or redundancy needs, cleaning up temporary or test storage, migrating to network or shared storage for HA or live migration, expanding a cluster with shared storage, preparing for server maintenance or upgrades, freeing up disks for replacement or reinstallation, optimizing backup and restore workflows, improving disaster recovery plans, balancing resource allocation across cluster nodes, capacity expansion for better scalability, hardware upgrade or replacement, disaster recovery, consolidation or optimization of resources.     </p> <p>To migrate a Proxmox VM's disk from Ceph storage to local storage, follow these steps:</p>"},{"location":"homelabseries/EP39_MovingProxmoxVMStorage/#moving-proxmox-vm-storage","title":"Moving Proxmox VM Storage","text":"<ol> <li>Prepare the VM<ul> <li>Shut down the VM (optional but recommended for stability).</li> <li>Navigate to: <code>VM \u2192 Hardware \u2192 Hard Disk (e.g., scsi0)</code>.</li> </ul> </li> <li>Initiate Storage Move<ul> <li>Click the \"Disk Action\" dropdown \u2192 Select \"Move Storage\".  </li> <li>In the pop-up:<ul> <li>Target Storage: Select your local storage (e.g., <code>local</code>, <code>local-lvm</code>).  </li> </ul> </li> <li>Delete Source: Check this to remove the original Ceph disk after migration.</li> <li>Click \"Move Disk\".</li> </ul> </li> <li> <p>Monitor Progress</p> <ul> <li>Track the migration in the Proxmox task log.</li> <li>Verify success in <code>Hardware \u2192 Hard Disk</code>; the disk path should now show the local storage.</li> <li>You may also see an unused disk line item, go ahead and click that and remove/delete it. You should now be able to go back to the ceph cluster and remove it or see that it has already been removed.  </li> <li>Shown below is the VM still displayed on the Ceph pool if you do not remove it, as shown in the image above. Note that a Ceph pool cannot be destroyed or changed until all container and VM disk images are removed.  </li> </ul> </li> </ol>"},{"location":"homelabseries/EP39_MovingProxmoxVMStorage/#moving-container-storage","title":"Moving Container storage","text":"<p>Containers are slightly different and are required to be turned off. After the container is turned off, you will need to go to the resources tab (instead of the hardware tab found on the VMs). All other steps are the exact same as a virtual machine outside of the location where the container files are stored.</p> <p> </p>"},{"location":"homelabseries/EP39_MovingProxmoxVMStorage/#common-errors","title":"Common errors","text":"<p>If you get the following error:</p>"},{"location":"homelabseries/EP39_MovingProxmoxVMStorage/#vm-is-locked-snapshot-500","title":"VM is locked (snapshot) (500)","text":"<p>You may need to perform the following tasks WITHIN the Proxmox Shell CLI (not the container or VM CLI, the main Proxmox node CLI):</p>"},{"location":"homelabseries/EP39_MovingProxmoxVMStorage/#step-by-step-solution","title":"Step-by-Step Solution","text":"<ol> <li> <p>Identify the locked VM</p> <ul> <li> <p>Note the VM ID (e.g., <code>100</code>) from Proxmox's web interface or run:</p> <pre><code>qm list\n</code></pre> </li> </ul> </li> <li> <p>Unlock the VM via CLI</p> <ul> <li> <p>For KVM virtual machines (most common):</p> <pre><code>qm unlock &lt;VMID&gt;\n</code></pre> <p>Example for VM ID <code>100</code>:</p> <pre><code>qm unlock 100\n</code></pre> </li> </ul> </li> <li> <p>Verify unlock success</p> <ul> <li> <p>Check the VM status:</p> <pre><code>qm config &lt;VMID&gt;\n</code></pre> <p>You should also see on the far left of your screen that the VM no longer has a lock icon next to its name.</p> </li> </ul> </li> </ol>"},{"location":"homelabseries/EP39_MovingProxmoxVMStorage/#failed-to-update-vm-119-unable-to-delete-cephbackupvm-119-disk-0-volume-is-still-in-use-snapshot-500","title":"failed to update VM 119: unable to delete 'cephbackup:vm-119-disk-0' - volume is still in use (snapshot?) (500)","text":"<p>Make sure your VM is turned off first!</p> <ol> <li> <p>Unlock the VM     First, release the snapshot lock:</p> <pre><code>qm unlock &lt;VMID&gt;\n</code></pre> <p>Force-delete orphaned snapshots If the snapshot metadata exists but the underlying storage is missing:</p> <pre><code>qm delsnapshot &lt;VMID&gt; &lt;snapshot-name&gt; --force\n</code></pre> <p>Replace <code>&lt;snapshot-name&gt;</code> with the actual snapshot name (e.g., <code>BeforeDiskUpgrade</code>). The <code>--force</code> The flag bypasses missing storage checks.</p> </li> </ol>"},{"location":"homelabseries/EP39_MovingProxmoxVMStorage/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP3_firewall/","title":"Topic: How to set up a Pfsense/OPNsense firewall","text":"Warning Box Example <p>Remember this video/device/article is not required to be successful in this series. Having an enterprise-grade firewall will allow you hands-on experience to talk to in an interview and potentially unlock capabilities you may find yourself needing     in the future as your homelab/home network expands.</p>"},{"location":"homelabseries/EP3_firewall/#introduction","title":"Introduction:","text":"<p>If you have found yourself here it is because you want to install an enterprise-grade firewall, and we will do just that. PfSense/OPNsense allows for a reliable network backbone, routing, VPN connections, security features, failover scenarios, and inter-VLAN routing. This tutorial is part 2 of our HomeLab series, teaching you how to maintain your own \"enterprise\" style network at home. The advantage of a homelab allows for real-world experience you can put on your resume and speak to in an interview when asked questions related to your technical expertise. </p>"},{"location":"homelabseries/EP3_firewall/#how-to-use-this-guide","title":"How to use this guide:","text":"<p>LTH handles teaching very differently from other industry standards. This is because we believe they truly lack in teaching you. There will be very lengthy commands, and for the sake of time, go ahead and copy and paste those commands. HOWEVER, please read what the command does, or you will never learn. Linux is notorious for using abbreviations; without reading what it does, you will never understand what you are configuring.</p>"},{"location":"homelabseries/EP3_firewall/#topology","title":"Topology","text":"<p>A network topology is the physical and logical arrangement of nodes and connections in a network:  </p>"},{"location":"homelabseries/EP3_firewall/#required-items","title":"Required Items:","text":"<p>The firewall being used in this guide: firewall  Alternative: Beelink U59 dual ethernet or you can use any mini PC of your choosing and equip the USB 3.0 ports with a USB to ethernet adapter</p> <ul> <li>[x] Firewall Appliance (this could be a mini-PC with two ethernet ports)</li> <li>[x] USB Thumb Drive</li> </ul>"},{"location":"homelabseries/EP3_firewall/#walkthroughcommands","title":"Walkthrough/Commands:","text":"<p>The start of the tutorial:</p> <p>Step 1:</p> <p>Etcher allows us to create a bootable flash drive, this is how we will get OPNsense on to the firewall appliance. Download Etcher here. </p>"},{"location":"homelabseries/EP3_firewall/#step-1-download-opnsense","title":"Step 1 Download OPNsense","text":"<p>Download either PFsense or OPNsense (the process will be the same but for the purpose of this tutorial we will be using OPNsense). For Opnsense leave all the download selections as shown in the image. For PFsense you will select Architecture: AMD64 (64-bit) Installer: DVD Image (ISO) Installer. </p> <p>1 - Go to either Opnsense.org/Downloads or Pfsense.org/Downloads </p> <p>2 - Next go to the folder where OPNsense or PFsense was downloaded right click details tab, and then copy the file name.  </p> <p>3 - You will then use the following command to verify the SHA256 hash, as seen in step 1 right below the download button. !Remember that the SHA256 value will change with every update, so verify it against what is currently showing on their website! <pre><code>certUtil -hashfile (the file path of your ISO file) SHA256\n</code></pre> EXMAPLE:  <pre><code>certUtil -hashfile C:\\Users\\TechTouch\\Downloads\\OPNsense-24.1-vga-amd64.img.bz2 SHA256\n</code></pre> </p> <p>Now move on to Step 2: Downloading Etcher and create a bootable USB flash drive.</p>"},{"location":"homelabseries/EP3_firewall/#step-2-download-7-zipinstall-extract-opnsense","title":"Step 2 Download 7-zip/Install &amp; Extract OPNsense","text":"<p>First go ahead and install 7-Zip after you downloaded it. Then open it up!   Here you can see we went to our users download folder. <code>C:\\Users\\learn\\downloads\\</code> you will then select the zipped folder and click the blue bar extract button at the top.   You will be prompted with this window, you are totally okay with extracting it into the downloads folder.  </p>"},{"location":"homelabseries/EP3_firewall/#step-3-download-etcher-bootable-usb-application","title":"Step 3 Download Etcher (bootable USB application)","text":"<p>1 - Etcher allows us to create a bootable flash drive, this is how we will get OPNsense on to the firewall appliance. Download Etcher here.    2 - Pick the correct download for your operating system.   3 - Select flash from file  4 - Select your OPNsense or PFsense download.    5 - Now select the USB thumb drive. !WARNING THIS WILL DELETE EVERYTHING ON THE THUMB DRIVE!  6 - You can now remove the thumb drive from your device and plug it into your firewall appliance !MAKE SURE YOUR APPLIANCE IS CURRENTLY TURNED OFF! </p>"},{"location":"homelabseries/EP3_firewall/#step-4-boot-to-opnsense-on-your-firewall-client","title":"Step 4 (boot to OPNsense on your firewall client)","text":"<p>After you have plugged the USB drive into your firewall appliance turn it on while tapping the Del (delete) key until the BIOS comes up. </p> <p>1 - use your arrow keys and get to the BIOs tab, select your USB device, then move over to the exit tab, save changes and exit. </p> <p>2 - After your device is booted you should see this screen with the IP address of your device. !YOU WILL NEED TO BE DIRECTLY CONNECTED TO THIS DEVICE OVER ETHERNET AND THEN GO TO THAT IP ADDRESS!</p> <p>Take note: the below image shows (vtnet0) this is the port that is being used for the LAN interface, because your appliance has multiple ethernet switchports you may need to plug into each until you can access the website at that IP address.  </p> <p>3 - After you have connected to that IP you will see this screen. Follow the wizard.    4 - We are going to use Cloudflare DNS servers, they are usually much faster than ones provided by your ISP.  <pre><code>1.1.1.1\n</code></pre> <pre><code>1.0.0.1\n</code></pre>  5 - Pick your respective time zone.    6 - If your internet service provider (ISP) uses MAC address security and want to avoid calling their support to give them your new MAC address you can simply copy your old routers MAC into the MAC address field. If you get a static IP address from your ISP you will also input that here.   7 - Here, you can pick whatever private IP range you like; default is fine, too. If you want a list of private IP ranges, you can find that here.    8 - Set a strong password here.    9 - You are all done, go ahead and reload!   10 - left click and go to your dashboard.   11 - You are all set, Opnsense/Pfsense is now setup and ready for use! Future videos will dive more into OPNsense configurations based on setting up our homelab, but you can find their documentation here </p>"},{"location":"homelabseries/EP3_firewall/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP40_SuricataRulesOPNsense/","title":"Enabling Suricata Rules on OPNsense Firewall","text":"<p>Hey guys, in this video I will cover how to enable Suricata Rules in your OPNsense firewall. </p>"},{"location":"homelabseries/EP40_SuricataRulesOPNsense/#do-you-need-to-enable-your-ips-suricata-on-opnsense","title":"Do you need to enable your IPS? (Suricata on OPNsense)?","text":"<p>Well the short answer is no, especially if you have no port forwarding or open ports. However, this does not mean your normal network traffic is not susceptible to vulnerabilities that Suricata can investigate. ALL traffic coming in and out of your network Suricata will perform inspection on, so it can still be useful and at the end of the day it is another layer of security for your network and data.</p>"},{"location":"homelabseries/EP40_SuricataRulesOPNsense/#backup-your-opnsense-firewall-first","title":"Backup Your OPNSense Firewall First","text":"<p>Check out the threat lists here if you would like to see what they block</p> <p>Before you make changes to your Firewall, always make sure you download a copy of your settings first:</p> <ol> <li>Log in to your OPNsense machine</li> <li>Select System</li> <li>Select Configuration</li> <li>Select Backups</li> <li>Select Download Configuration</li> </ol>"},{"location":"homelabseries/EP40_SuricataRulesOPNsense/#enable-emerging-threats-et-open-rules-in-suricata-free-idsips-rules","title":"Enable Emerging Threats (ET) Open Rules in Suricata (Free IDS/IPS Rules)","text":""},{"location":"homelabseries/EP40_SuricataRulesOPNsense/#steps-to-install-and-enable-suricata-rules","title":"Steps to install and Enable Suricata Rules:","text":"<ol> <li>Log into your OPNsense Web GUI.</li> <li>Navigate to Services &gt; Intrusion Detection &gt; Administration.</li> <li>If Suricata is not enabled, check the Enable box at the top to activate it.</li> <li>Check the box next to \u201cIPS Mode\u201d too.</li> <li>Under the Download tab, find the Rule Sets section.</li> <li> <p>Locate the Emerging Threats Open options and check the box to enable each ruleset (remember the more you enable the more resources your router uses). Here is a list of common ones you could enable:</p> Category Name Description / Purpose Why Enable? emerging-exploit Rules detecting exploit attempts against vulnerabilities Captures common attack vectors to patchable software emerging-malware Known malware communication and payload signatures Blocks malware command and control, payloads emerging-scan Detects network scanning activities Early indication of attackers probing your network emerging-phishing Identifies phishing URLs and traffic Helps prevent credential theft and social engineering attacks emerging-dos Denial-of-service attacks and traffic Detects volumetric or targeted DoS attacks emerging-attack_response Responses by attackers post-exploitation Helps spot attacker lateral movement or persistence emerging-botcc (if available) Botnet command &amp; control activity Prevents infected hosts from communicating with attackers emerging-web_server Web server-specific attacks Protects vulnerable web applications emerging-ftp/smtp/dns/pop3 Protocol-specific attack and abuse patterns Covers common attack vectors via standard services emerging-snmp SNMP protocol abuse and attacks Detects common misuses of network infrastructure emerging-sql SQL Injection and Database Attacks Protects backend databases </li> <li> <p>Click Enable selected at the top of the page.</p> </li> <li>Next, go to the rules tab and click Rules to enable them all.</li> <li> <p>Next, go to the Schedule tab so we can have the rules auto-update weekly.Set the following:  </p> <p>Minutes: 0</p> <p>Hours: 0 </p> <p>Day of the month: 1</p> <p>Months: *</p> <p>Days of the week: *</p> </li> <li> <p>Save and apply all changes.</p> </li> </ol>"},{"location":"homelabseries/EP40_SuricataRulesOPNsense/#verify-emerging-threats-is-working","title":"Verify Emerging Threats is Working","text":"<ol> <li>We will need to enable SSH under /system/settings/administration</li> <li>Login to our Opnsense machine over SSH (select windows key, type cmd, and then SSH from your terminal)</li> <li>After logging in to your OPNsense machine, Select option 8 for shell</li> <li> <p>run the following command:</p> <pre><code>curl http://testmynids.org/uid/index.html\n</code></pre> </li> <li> <p>Check the logs under /services/intrusion detection/administration/alerts (on your OPNsense dashboard)</p> </li> <li>turn off SSH under /system/administration (in your OPNsense dashboard)</li> </ol> <p>Suricata will now monitor traffic using free, community-maintained ET Open threat signatures.</p>"},{"location":"homelabseries/EP40_SuricataRulesOPNsense/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/","title":"Upgrade OPNsense ISC DHCP to Dnsmasq and DHCP","text":"<p>In this episode we will cover how to upgrade to Dnsmasq DNS &amp; DHCP services in OPNsense 25.x due to ISC DHCPv4/DHCPv6 being deprecated by their developer.</p>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#what-this-tutorial-will-cover","title":"What this tutorial will cover:","text":"<p>Update OPNsense \u2192 Disable ISC DHCPv4 \u2192 Enable Dnsmasq and DNS forwarding \u2192 Configuring Unbound DNS for recursive DNS \u2192 Test DHCP and DNS functionality</p>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#update-opnsense-to-the-latest","title":"Update OPNsense to the latest","text":"<p>You can find the latest updates from your dashboard screen under the system information tile:</p> <p> </p> <p>After you check for updates, go ahead and update your system be following the install wizard.</p>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#download-static-dhcp-mappings","title":"Download Static DHCP Mappings","text":"<p>Perform a backup of your OPNsense settings under System &gt; Configuration &gt; Backups.</p> <p>Before we upgrade from ISC DHCP, we can download a CSV file for all our static mappings under: Services &gt; ISC DHCPv4 &gt; LAN</p>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#setting-up-dnsmasq-dns-dhcp","title":"Setting up Dnsmasq DNS &amp; DHCP","text":"<p>We are going to change the following settings under: Services &gt; Dnsmasq DNS &amp; DHCP &gt; General</p> <ol> <li>Set interfaces: LAN</li> <li>Set listen port: 0 (this allows Unbound to do all DNS queries)</li> <li>Set Do not forward to system defined DNS servers: Checked (enabled), (this setting prevents local hostname resolution from being forwarded out of your network).</li> <li>Then click apply at the bottom.</li> </ol>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#ipv4","title":"IPv4","text":"<p>Now move over to the DHCP ranges Tab found at the top of your current window</p> <ol> <li>Set Interface: LAN</li> <li>Set Start address: 192.168.1.2 (or whatever your sub domain network is for the third octet).</li> <li>Set End address: 192.168.1.254 (or whatever your sub domain network is for the third octet).</li> <li>Set description: (Describing what this subnet is for)</li> <li>Click save</li> </ol>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#ipv6","title":"IPv6","text":"<p>To set IPv6 perform the following.</p> <ol> <li>Set Interface: LAN</li> <li>Set Start address: ::1000</li> <li>Set End address: ::2000</li> <li>Set Constructor: LAN</li> <li>Set description: (Describing what this subnet is for)</li> <li>Click save</li> </ol> <p>Now move over to the Hosts tab and we can upload our static ISC DHCP mappings here from the earlier step where we downloaded the .csv file.</p> <p> </p>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#disable-router-advertisements","title":"Disable Router Advertisements","text":"<p>Under services &gt; router advertisements &gt; LAN, set the router advertisements to disabled and click save.</p> <p> </p>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#disable-isc-dhcpv4-dhcpv6","title":"Disable ISC DHCPv4 / DHCPv6","text":"<p>Now we have set the proper settings to be able to disable our legacy ISC DHCPv4/v6 Under services &gt; ISC DHCPv4/v6 &gt; LAN.</p> <p>(you need to make sure you are quick with this step, you do not want your DHCP lease to expire on your machine, this would prevent you from connecting to your OPNsense box. If that happens, you will need to manually assign an IP to your host machine, along with the other respective networking settings within your operating systems Ethernet/Wi-Fi settings menu.)</p> <ol> <li>Set Enabled: unchecked</li> <li>Click save</li> </ol>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#enable-dnsmasq-dhcp","title":"Enable Dnsmasq &amp; DHCP","text":"<p>Now that we disabled that, we need to enable the new replacement under services &gt; Dnsmasq DNS &amp; DHCP &gt; General</p> <ol> <li>Set Enabled to checked (check mark showing in the box).</li> <li>Set apply at the bottom.</li> </ol>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#how-to-set-dhcp-reservations-in-dnsmasq-dns-dhcp","title":"How to set DHCP reservations in Dnsmasq DNS &amp; DHCP","text":"<p>Under services &gt; Dnsmasq DNS &amp; DHCP &gt; Leases, you will find all your hosts and their dynamically or statically assigned addresses. When you select the + icon to the far right, this will allow you to statically assign that address to the host machine, you can just add a description or comment and click save.</p> <p> </p>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#conclusion","title":"Conclusion","text":"<p>There you have it, your new updated DHCP leasing is working with the latest OPNsense 25.x DNS and DHCP service!</p> <p>We have also confirmed DHCP is working by seeing a list of hosts in the previous step, we can also ensure Unbound DNS is still working by performing the following command in our devices terminal/command line:</p> <pre><code>nslookup google.com\n</code></pre> <p>You should see your local OPNsense machines IP resolving this for you:</p> <p>As the picture shows below, we can see that OPNsense and our local address (unbound DNS found where this website was being issued to us from).</p> <p> </p>"},{"location":"homelabseries/EP41_OPNsense%20ISC%20DHCP%20Migration%20to%20Dndsmasq%20DHCP/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP4_proxmox/","title":"Topic Proxmox Installation Guide","text":""},{"location":"homelabseries/EP4_proxmox/#introduction","title":"Introduction:","text":"<p>In this episode, we will cover the installation of Proxmox on your server, mini-PC, SBC, etc. (whatever you have chosen to use as your device to host your services). </p>"},{"location":"homelabseries/EP4_proxmox/#topology","title":"Topology","text":""},{"location":"homelabseries/EP4_proxmox/#required-items","title":"Required Items:","text":"<p>The Proxmox machine being used in this guide: N95 mini pc (I highly recommend you go with something that has 16gb of RAM or more) Servers are RAM heavy, the more you have the better!. Recommended: Beelink Mini PC SER5 Alternative: Beelink U59 dual ethernet</p> <ul> <li> <p>[x] Proxmox Appliance (some type of PC that you are okay with running 24/7)</p> </li> <li> <p>[x] USB thumb Drive</p> </li> </ul>"},{"location":"homelabseries/EP4_proxmox/#downloading-proxmox-bootable-usb","title":"Downloading Proxmox (bootable USB):","text":"<p>The start of the tutorial: Go to Proxmox.com and download the latest ISO installer here.  Note: copy the SHA256SUM to a .txt file to compare against in a later step.    Next go to where the file is downloaded right click, properties.   Copy and paste the location of the file into the same .txt document.    Use the following command with your respective version of Proxmox to validate the integrity of the file against their good known hash. EXAMPLE: <pre><code>certUtil -hashfile C:\\Users\\learn\\Downloads\\proxmox-ve_8.1-2.iso SHA256\n</code></pre> Use: <pre><code>certUtil -hashfile (your file path here) SHA256\n</code></pre>  Now open etcher (was previously downloaded in EP 1 how to install OPNsense or PFsense firewall). You can also download etcher from here.   After you clicked flash from file select your Proxmox .iso, then select open.    Now click select target and then choose the USB drive you want to write to. !REMEMBER THIS WILL DELETE EVERYTHING ON THE USB DRIVE!  Now click flash and wait for Etcher to finish creating the bootable USB device.   </p>"},{"location":"homelabseries/EP4_proxmox/#installing-proxmox-on-servermini-pc","title":"Installing Proxmox on Server/Mini PC","text":"<p>After that has completed, plug the USB device into your mini pc/server/SBC, whatever you are going to use to as your virtualization host WHILE IT IS TURNED OFF. Then turn the device on while continuously clicking your delete key until the BIOS appears.    Use your arrow keys and move over to the boot tab, under boot option #1 select the USB device with Proxmox on it.   Use the arrow keys again and go to the save and exit tab and select save changes and exit.    Now allow for your device to boot, you will see the Proxmox graphical user interface (GUI) appear. Follow the install instructions, it is very basic, time zone, password, where you want to install to, etc. !STOP ON THE LAST PAGE WHERE IT SAYS ISNTALLATION SUCCESSFUL! read the next step.    When you get to the last step as seen below, when you select reboot you need to remove the USB device right after or it will take you back to the installation wizard.   Now we have successfully installed Proxmox, go to your web browser and go to the IP address listed from your Proxmox device. In our case the IP is 192.168.1.50.216:8006.   You will use root as the username, and then you will use whatever password you created during the setup wizard.   You have now succesfully installed Proxmox for server and container virtualization! Please move to EP 5 where we will cover setting up a your first virtual machine.  </p>"},{"location":"homelabseries/EP4_proxmox/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP5_firstvmubuntu/","title":"Installing Your First VM (Ubuntu) on Proxmox","text":"<p>This episode will go over how to setup your first virtual machine (VM) inside Proxmox.</p> Informative Section ! <p>This is a beginner-friendly course, so we understand many of you may find this lesson to be a review, but these fundamental concepts are very important for beginners when using Proxmox.</p>"},{"location":"homelabseries/EP5_firstvmubuntu/#installing-your-vm","title":"Installing your VM","text":"<p>Step 1. head over to https://ubuntu.com/download/server and download Ubuntu Server 22.x (x= whatever the latest version is).    Step 2. After you have downloaded it, navigate to the IP address of your server or mini PC where you installed Proxmox on it. You should be presented with a screen like this:   Step 3. Select your server (our case pve), then local (pve), and ISO images. Upload your Ubuntu Server .iso image there.    Step 4. Select iso images, upload, select file, and upload. After exit out of the pop up.    Step 5. We can now select create a vm, and follow the install process.  </p>"},{"location":"homelabseries/EP5_firstvmubuntu/#vm-settings-for-proxmox","title":"VM settings for Proxmox","text":"<p>Settings:</p> <p>-General Tab.   Node: (select whatever Proxmox server or mini-PC you want to install to (our case, it is still pve).   VM Id: does not matter (you can leave default).   Name: (Describe what you install on the Ubuntu server (Wiki.Js, ARK server, Minecraft, Zabbix, etc).</p> <p>-OS Tab:   ISO image: select the ubuntu file we just uploaded.</p> <p>-System Tab:   All settings can stay default here.</p> <p>-Disk Tab:     Disk Size (GiB): (set based on the requirement of whatever software we are installing), i.e., Wiki.Js recommends at least 1gig of storage, and Ubuntu Server requires 20gigs, so we should have no less than 22gigs. (I would recommend going up at least 5 gigs for small installs and at least double for other applications where you know you will be uploading lots of content, i.e., mods, pictures, user accounts, etc. </p> <p>-CPU Tab:   Again, this will be based on the requirements of what you are installing. Wiki.js requires 2 cores and Ubuntu Server so that we will select 2 cores. </p> <p>-Memory Tab:    Again, based on system requirements. Wiki.js wants 2 gigs of RAM. Ubuntu Server recommends 4 gigs of RAM, but you can get away with 1-2, depending on your installation. In our case, for Wiki.js, we are going to keep 2gigs.</p> <p>-Network Tab:   This can stay default.</p> <p>-Confirm Tab:    Please check over all your settings and click finish. </p>"},{"location":"homelabseries/EP5_firstvmubuntu/#installing-ubuntu-server-on-your-proxmox-vm","title":"Installing Ubuntu Server on your Proxmox VM","text":"<ol> <li>Now we can boot the new virtual machine by selecting the console tab and then start now.  </li> <li>Select the top option, install Ubuntu Server.   </li> <li>Now Select your language.   </li> <li>Pick your Keyboard layout/variant.  </li> <li>We are selecting the Ubuntu Server   </li> <li>We can leave this default because most of you will use DHCP.   </li> <li>We can skip this because we are not using a proxy.   </li> <li>Our Ubuntu server is testing the mirror (a way to grab updates), after the mirror connection is confirmed you can select done.   </li> <li>In the case of Proxmox, we are creating a virtual machine, and during the setup of our Proxmox VM, we set the disk drive size, meaning our VM can only see the virtualized partitioned disk drive (this prevents you from overwriting any other VM disk partitions on your server). You are good to go ahead and use the WHOLE disk drive in this case.  </li> <li>This is just giving you a breakdown of that partitioned disk and how much space is going to each resource.  </li> <li>Your name can be set to the same as the username. The username and password is what will be used when we SSH into this (VM SO DO NOT FORGET THEM!). Setting the server name is very important, this is how your VM will appear to all other devices on your network, make is something memorable that explains what this VM is.   </li> <li>You can skip this and select done.   </li> </ol> <ol> <li>This part is so important, make sure you click enter on your keyboard and there is a 'X' in the openssh box. This allows us to SSH into your server.  {.is-warning}  </li> <li>You can skip all this content.   </li> <li>Wait for the VM to finish installing.  </li> <li>Reboot now after that is complete.   </li> <li>Now you can login to your VM with the credentials you made earlier, this will allow you to see the IP address of your VM so we can use Putty and SSH to control it.  </li> </ol> <ol> <li>If you are on Windows 11 or newer we reccomend using Windows command line (CLI) to SSH into your machines, this allows you to copy and paste. </li> <li>You can also login with SSH on Linux. </li> <li>If you are on Windows 10 or prior we reccomend using Putty</li> </ol> <p>The command to use SSH in the CLI is: <pre><code>ssh username@server_ip_address\n</code></pre></p> <p>Example: <pre><code>ssh learn@192.168.1.1\n</code></pre></p> <p> </p> <p>Using SSH is important for future videos because it allows you to copy and paste content into your CLI and important data from your local machine to your VM.</p>"},{"location":"homelabseries/EP6_firstvideogameserver/","title":"Setting up your first Video Game Server (Minecraft Example)!","text":"<p>Hey guys, in this episode we are going to cover setting up any SteamCMD based video game server using LinuxGSM and PlayitGG. In this example we are going to cover this topic with a Minecraft server. I personally love this project, and I got into computers more than 13 years ago now because of video game server hosting, it is what sparked the passion of computers for me!</p> Informative Section ! <p>Do not forget, on the right side of the screen are subject topics to easily move throughout this walkthrough!</p>"},{"location":"homelabseries/EP6_firstvideogameserver/#grabbing-everything-you-need-to-get-started","title":"Grabbing everything you need to get started","text":"<p>First you need to access PlayIt.GG.  </p> <p>You can find LinuxGSM.  </p> <p>Next, if you do not remember your VMs IP address you will need to login into your Proxmox Machine, login to the VM, and then grab it.  </p> <p>IP on VM:  </p>"},{"location":"homelabseries/EP6_firstvideogameserver/#getting-your-ubuntu-server-up-to-date-step-by-step","title":"Getting your Ubuntu Server up to date (step by step)","text":"<ol> <li> <p>SSH into your server TWICE to perform the following commands (later there will be a case where we need two SSH sessions open). <pre><code>ssh username@server_ip_address\n</code></pre> </p> </li> <li> <p>Get ubuntu to reach out and find new dependencies to install. <pre><code>sudo apt upgrade\n</code></pre></p> </li> <li>AND Update those out of date dependencies. <pre><code>sudo apt update\n</code></pre> </li> </ol>"},{"location":"homelabseries/EP6_firstvideogameserver/#installing-linuxgsm-minecraft-server","title":"Installing LinuxGSM Minecraft Server","text":"<p>Now we can start installing our video game server, in this example it is a Minecraft Bedrock Edition. The commands can be found here </p> <p>Now we need to create the user.  You will notice I just clicked enter and bypassed all the user info. <pre><code>add user mcbserver\n</code></pre> </p> <p>Currently out of our TWO SSH windows that are open, you are going to see that I login to user MCBserver in the LEFT window. <pre><code>su - mcbserver\n</code></pre> </p> <p>Now we are going to request the LinuxGSM client contents IN THE LEFT SSH TAB. <pre><code>curl -Lo linuxgsm.sh https://linuxgsm.sh &amp;&amp; chmod +x linuxgsm.sh &amp;&amp; bash linuxgsm.sh mcbserver\n</code></pre> </p> <p>Now we can see we are missing some files because our VM was unable to locate them and we are missing the Unzip utility tool, we need to install those now.    IN THE RIGHT SSH TAB we are going to type the following:</p> <p>The following commands will allow our VM to find the missing files, download them, and unzip them <pre><code>sudo add-apt-repository universe\nsudo add-apt-repository multiverse\nsudo dpkg --add-architecture i386\nsudo apt update\n</code></pre> AND <pre><code>sudo apt-get install unzip\n</code></pre> </p> <p>Now we can request those missing files found two pictures ago <pre><code>sudo apt update; sudo apt install bsdmainutils bzip2 jq lib32gcc-s1 lib32stdc++6 libsdl2-2.0-0:i386 netcat bigz unzip\n</code></pre> </p> <p>Now in our LEFT SSH tab we can continue where we left off, now that we have all the correct packages: <pre><code>./mcbserver install\n</code></pre> </p> <p>We can see after installing our (mcb =Minecraft bedrock) server, we get all green files now, so we know it worked.  </p> <p>The most important area of LinuxGSM is knowing where to find your configuration files, they will always be stated under the (./(game_server_type) details) after typing the following command and the status of your server (if it is running or stopped). <pre><code>./mcbserver details\n</code></pre>  To edit this configuration file, we are going to use nano. <pre><code>nano /home/mcbserver/serverfiles/server.properties\n</code></pre> Here is what ours looks like, we are going to use our arrow keys to go down to server-port and change it to [4356]</p> <p>After that to exit, you will type Ctrl + X then type Y at the next prompt to confirm changes and lastly to save it you will click Enter</p> <p> </p> <p>Then we can confirm our changes by typing the following command and confirming the change <pre><code>./mcbserver details\n</code></pre> </p> <p>Now we are done, and we can start our Minecraft server with the following command, you will now see it started properly when the status shows a green started indicator  </p>"},{"location":"homelabseries/EP6_firstvideogameserver/#installing-playitgg","title":"Installing PlayitGG","text":"<p>Now we have gotten LinuxGSM out of the way, we are going to install PlayitGG in the RIGHT SSH window and leave the left window open.</p> <p>On PlayitGG's site we are going to copy the following command into our RIGHT SSH window.  <pre><code>curl -SsL https://playit-cloud.github.io/ppa/key.gpg | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/playit.gpg &gt;/dev/null\necho \"deb [signed-by=/etc/apt/trusted.gpg.d/playit.gpg] https://playit-cloud.github.io/ppa/data ./\" | sudo tee /etc/apt/sources.list.d/playit-cloud.list\nsudo apt update\nsudo apt install playit\n</code></pre> </p> <p>After that is done, to start the PlayitGG service, we need to simply type the following command <pre><code>playit\n</code></pre> </p> <p>You will then be prompted with the following screen; you will need to do Ctrl + left click to follow the link.  </p> <p>Now you are going to wait 1-5 minutes for the PlayitGG servers to find your tunnel calling out to it.  </p> <p>Going to the next page you will be prompted with a screen like such, we are going to select the tunnel type for bedrock edition  </p> <p>Then on that same Tunnels page we need to change our port to [4356] just like we did in the LinuxGSM config file.  </p>"},{"location":"homelabseries/EP6_firstvideogameserver/#how-do-you-restart-your-server-if-your-proxmox-machine-restarts-or-any-of-your-stuff-needs-an-update","title":"How do you restart your server if your Proxmox Machine restarts or any of your stuff needs an update?","text":"<p>So, if your Proxmox machine needs an update, your VM needs an update, etc. You will need to restart your services. </p> <p>PlayitGG is super simple, just type the following command and it will start right up. <pre><code>playit\n</code></pre></p> <p>Now to start your Minecraft server backup, update it, or make changes you will need to again open another SSH tab because we do not want to stop the PlayitGG service and do the following.</p> <ol> <li>Login to your VM:</li> <li>Change users  <pre><code>su mcbserver\n</code></pre></li> <li>Change to your users directory  <pre><code>cd ~\n</code></pre> Then you will be able to perform the LinuxGSM commands like ./mcbserver details, start, stop, update, etc.   </li> </ol>"},{"location":"homelabseries/EP6_firstvideogameserver/#logging-into-your-video-game-server-with-friends","title":"Logging into your Video Game server with friends","text":"<p>Now the information to connect to your server will be found on the Tunnels page. Remember though, if you are a local user (within the home network your Video game server is hosted) you can use that VMs IP address and the port number [4356], anyone outside your network will need to use the information like shown below found on the PlayitGG tunnels page.  </p> <p>Typed into Minecraft it will look like this  </p> <p>Would you look at that, you are in! Potentially your first video game server setup EVER, congrats!   </p>"},{"location":"homelabseries/EP6_firstvideogameserver/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP7_setuppihole/","title":"Set up Pi-Hole With Proxmox (Network Wide Ad Blocker)","text":"<p>In this episode we will cover how to set up Pi-Hole (a network-wide ad blocker), using Proxmox, assigning your Pi-Hole server a static IP address, and adding to the block list to increase its effectiveness.</p> <p>Watch the video we made on this topic:</p>"},{"location":"homelabseries/EP7_setuppihole/#what-you-need-to-get-started","title":"What you need to get started","text":"<ol> <li>Login to your Proxmox server.</li> <li>Go to Pi-hole's website here</li> <li>Login to your OPNsense firewall (or home router).</li> <li>Check this site out for more block lists that we will add to Pi-Hole here</li> <li>Here is CloudFlares site with the alternative DNS options for advanced malware and Adult Content filtering here</li> </ol> <p>First you guys need to open your Proxmox machine and create a new VM for Pihole using Ubuntu (please see our video on how to setup your first VM) if you are unsure how to do this here We used default settings, 2GB of ram, 32gb, and 2v cores.</p> <p> </p> <p>Next Go to Piholes website and click install:</p> <p> </p>"},{"location":"homelabseries/EP7_setuppihole/#create-a-vm-for-your-pi-hole-instances","title":"Create a VM for your Pi-Hole instances","text":"<p>Then log into your Opnsense Machine and go to the menu System / Settings / General tab. If you are doing this on your home router you will need to find where your DNS settings are stored.</p> <p> </p>"},{"location":"homelabseries/EP7_setuppihole/#installing-pi-hole","title":"Installing Pi-Hole","text":"<p>Next you need to login to your freshly created VM that we are going to install Pi-Hole on using the SSH command: <pre><code>ssh username@VM_ip-address\n</code></pre></p> <p> </p> <p>Next we are going to go over to the download Github page we were directed to when we clicked download on Pi-holes site, copy the One-Step Automated Install command: <pre><code>curl -sSL https://install.pi-hole.net | bash\n</code></pre></p> <p> </p> <p>We are going to go back to our SSH session and paste this command in:</p> <p> </p> <p>The following steps are very self-explanatory but just follow the install Wizard all the way through without changing anything other then the following examples: </p> <p> </p> <p>We will set the static IP address later in this article within OPNsense! </p> <p> </p> <p>You can select CloudFlares DNS for right now (it is what we suggest for the fasted resolution times). After that, just follow the rest of the wizard with all oks or continues</p> <p> </p> <p>You will then be presented with this screen, click enter to ok and we will be presented with another screen that also gives us the URL and password to login.</p> <p> </p> <p>Here is that other screen with a clickable link:</p> <p> </p> <p>Now login to your Pi-Hole instance.</p> <p> </p>"},{"location":"homelabseries/EP7_setuppihole/#changing-our-dns-settings","title":"Changing our DNS settings","text":"<p>Now we need to change our DNS settings. If you forgot, go to the following menu as shown below System / Settings / General tab. Then input your Pi-Hole servers IP address into the following two dns boxes and then scroll down and select save.</p> <p> </p> <p>We need to add our Pi-Hole's IP address to one more DNS record found under services / ISC DHCPv4 / [LAN] then scroll down and select save as well.</p> <p> </p>"},{"location":"homelabseries/EP7_setuppihole/#set-a-static-ip-address-in-opnsense","title":"Set a Static IP address in OPNsense","text":"<p>Now right under the LAN section is leases this is where we set the static IP address for our Pi-Hole Machine.</p> <p>Find the IP address of your machine and click the + icon next to it</p> <p> </p> <p>You will be presented with this screen where you will set the IP address to the IP address that was already assigned to your machine via DHCP and give it a name.</p> <p>Scroll down and click save</p> <p> </p> <p>After selecting save, we will be kicked over to this menu, scroll down to the bottom and confirm your Pi-Hole instance has a static address.</p> <p> </p>"},{"location":"homelabseries/EP7_setuppihole/#configuring-pi-hole","title":"Configuring Pi-Hole","text":"<p>Moving back over to our Pi-Hole machine we logged into a few steps ago, we are presented with the landing page, we can see in blue, we have no hosts or any blocks yet. </p> <p>DNS takes roughly 15 minutes to spread through a small network but we can speed that up with some following commands. </p> <p> </p> <p>To speed the process up first let me show you what it looked like BEFORE:</p> <p>Our DNS server was set to 192.168.50.1 NOT the 192.168.50.241 of our Pi-Hole machine.</p> <p> </p> <p>To quickly verify and resolve to the new DNS server we can perform the following commands:</p> <p><pre><code>ipconfig /flushdns\n</code></pre> and <pre><code>ipconfig /renew\n</code></pre></p> <p> </p> <p>Then we can check our DNS servers one more time using</p> <pre><code>ipconfig /all\n</code></pre> <p>here we can see it has changed to our Pi-Hole machine.</p> <p> </p> <p>We can also go back to Pi-Hole and select the blue total quaries icon on the front page and find our device in there, if it is now green we know the machine is using Pi-Hole for DNS.</p> <p> </p> <p>Now on the front page we can see queries taking place as well as blocks occurring!</p> <p> </p>"},{"location":"homelabseries/EP7_setuppihole/#adding-blocklists-to-pi-hole","title":"Adding blocklists to Pi-Hole","text":"<p>If you would like to add more blocklists fireborg is a great website to do that which can be found here</p> <p> </p> <p>You will then copy and paste those URLs into Pi-Hole under the Adlist tab.</p> <p> </p>"},{"location":"homelabseries/EP7_setuppihole/#changing-your-dns-upstream-servers","title":"Changing your DNS upstream servers","text":"<p>If you would like to use a custom self-hosted Unbound DNS server or a more advanced CloudFlare DNS server like one which increases malware protection or adult content filtering, this is the page to do that. </p> <p>You will unselect the CDNs on the left and select the custom ones on the right and then input the IP addresses for your new upstream DNS server.</p> <p>We recommend the following CloudFlare DNS servers for added features:</p> <p>Malware Blocking Only</p> <p>Primary DNS:  <pre><code>1.1.1.2\n</code></pre></p> <p>Secondary DNS:  <pre><code>1.0.0.2\n</code></pre></p> <p>Malware and Adult Content</p> <p>Primary DNS:  <pre><code>1.1.1.3\n</code></pre></p> <p>Secondary DNS:  <pre><code>1.0.0.3\n</code></pre></p> <p> </p>"},{"location":"homelabseries/EP7_setuppihole/#closing-thoughts","title":"Closing Thoughts","text":"<p>That is it, you have set up your Pi-Hole network wide add blocker! We do however recommend you pair this with a host based ad blocker as well. The one we recommend can be found here</p> <p> </p>"},{"location":"homelabseries/EP7_setuppihole/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP8_nextcloud/","title":"NextCloud Setup inside of Proxmox","text":"<p>In this episode, we are going to cover how to set up a NextCloud server (container) within Proxmox Virtual environment in just a few clicks using TurnKey. These container templates come with Proxmox already, making it a super simple task to have a network-wide backup server for your pictures and documents. </p>"},{"location":"homelabseries/EP8_nextcloud/#back-story","title":"Back Story","text":"<p>Learn from me: my wife went on a honeymoon cruise to the Bahamas and virtually have NO pictures of our trip because our phones got water damaged! Backing up your pictures at the end of each day to your NextCloud server could save you much heartache! We learned, though, that our Europe trip of 2024 was full of me backing up our content daily! This Episode won't cover how to back up your content outside of your network, but our TailScale episode will!</p>"},{"location":"homelabseries/EP8_nextcloud/#install-steps","title":"Install Steps","text":"<p>First log into Proxmox and go to:</p> <ol> <li>server / local (pve) (or whatever your server name is) </li> <li>/ CT Templates / Templates</li> </ol> <p>and then search for Nextcloud and select download! Wait for that Task OK and move on with the next steps!</p> <p> </p> <p>Now we are going to click create CT on the top right of our environment and follow the creation wizard for our container.</p> <p>The general tab password is for the containers root user. The container default username is root and then the password you set.</p> <p>I am not going to show every tab, but you can see from the image below there is general, templates, etc. We are concerned about the templates tab where you will select nextcloud, the Disks tab SET THIS AS HIGH AS YOU CAN. This is determines how many pictures you can save., and then under the network tab we need to set a static IP address for our machine. We need to ensure in OPNsense or your router that the IP you are assigning has not already been issued to another machine.</p> <p> </p> <p>We can verify what FREE IP addresses we have by opening OPNsense and going to (Services / ISC DHCPv4 / [LAN] &amp; Leases) tabs. As long as you do not see either one of those tabs with the IP you want to use, you are good to assign the container that address.</p> <p> </p> <p>Going back to Proxmox we can see we have moved all the way to the Network Tab. AGAIN, do not forget to assign the proper disk space to save images and the other CPU and memory tab could be left default if you want.</p> <p>Now assign the IPv4 address you have chosen and ensure you add your networks CIDR notation to the end. 99% of you it will be a /24 for a basic home network. </p> <p>Then assign the gateway which is the IP of your home router or OPNsense box. </p> <p> </p> <p>Here is an overview of my Containers settings. Disk is not shown but again make sure you make that nice and big so you can save loads of images. You will probably want somewhere in the ballpark of 100Gbs+.</p> <p> </p>"},{"location":"homelabseries/EP8_nextcloud/#nextcloud-install-wizard","title":"Nextcloud Install Wizard","text":"<p>Select your container from the right menu, you will notice containers sit above Virtual Machines so make sure you aren't missing it! </p> <p>under the console tab click start, and after boot login with </p> <p>Username: Root</p> <p>Password: (the one you set on the general tabs page of container creation)</p> <p> </p> <p>Login screen image:</p> <p> </p> <p>Soon as you login you will be prompted by the NextCloud install wizard.</p> <p>Follow the wizard through, it is very explanatory, and you are really creating passwords for accounts.</p> <p>Keep these account passwords stored in your notes for later!</p> <p>Mysql  </p> <p>Nextcloud Admin (YOU WILL LOGIN WITH THIS ONE!)  </p> <p>You can skip this one, we are not going to access Nextcloud with a URL.  </p> <p>We are not going to use Turnkey backup so you can click your tab key twice and then enter for skip.</p> <p> </p> <p>You can enter an email here for notifications if you'd like.</p> <p> </p> <p>Always ensure you have the latest security updates so click install.</p> <p> </p> <p>At this point you have reached the end, copy this info into your notes and then you can do ctrl + enter to exit the menu.</p> <p> </p> <p>Going to the Nextcloud IP address in our browser we can see there is a security feature that prevents us from accessing it:</p> <p> </p> <p>If click doumentation we are taking to this page that gives us some insight on how to fix this.</p> <p> </p> <p>We need to go into the following settings directory to make the correct changes.</p> <pre><code>nano /var/www/nextcloud/config/config.php\n</code></pre> <p> </p> <p>You will be presented with the following file and we are going to edit the following 'trusted_domains' section.</p> <p> </p> <p>We want to make that sections in ours look like this:</p> <pre><code>'trusted_domains' =&gt;\n  array (\n   0 =&gt; 'localhost',\n   1 =&gt; '192.168.50.20', \n),\n</code></pre> <p> </p> <p>Now we can go back to the site and login:</p> <p> </p> <p>Before we continue, we need to set the static IP address of our NextCloud container in OPnsense.</p> <p>First lets grab the Mac address of our container under our container network settings location. Select the network card and click edit, they copy the MAC.</p> <p> </p> <p>Now go over to OPNsense and we can create a static listing under Services / ISC DHCPv4 / [LAN] and selecting the + button.</p> <p> </p> <p>Now we can take that MAC address and our IP address and add it into our static assignment. Then click save.</p> <p> </p> <p>Going back over to Nextcloud after you logged in, we can use the new button to create new folders or upload a file to the current folder you are in.</p> <p> </p>"},{"location":"homelabseries/EP8_nextcloud/#login-on-your-phone","title":"Login on your phone","text":"<p>Download the NextCloud app and you can connect to your server using that IP address just like you did in your browser.</p> <p> </p> <p>Select yes on the certificate, we trust it because its our certificate!</p> <p> </p> <p>Then you can login.</p> <p> </p> <p>Now your connected, go back over to your app to use NextCloud.</p> <p> </p> <p>Then we can use the + button just like the site and upload pictures or create folders.</p> <p> </p>"},{"location":"homelabseries/EP8_nextcloud/#closing-comments","title":"Closing comments","text":"<p>That is it, I hope you guys enjoyed! In a later episode we will cover Tailscale and how to access your NextCloud from outside your network. </p>"},{"location":"homelabseries/EP8_nextcloud/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/EP9_tailscale/","title":"Installing Tailscale on Proxmox","text":""},{"location":"homelabseries/EP9_tailscale/#introduction","title":"Introduction","text":"<p>In this episode we are going to cover installing Tailscale on a Proxmox VM and showing you how to connect back to your local Nextcloud server!</p> <p>By doing so, you will be able to back up any pictures or documents you take/create well away from your home network. </p> Informative Section ! <p>Do not be like me, when you go on a vacation, upload your pictures each night to your Nextcloud backup! The next day your phone could get lost, stolen, or water damaged! Having picture memories is so important!</p>"},{"location":"homelabseries/EP9_tailscale/#tailscale-introduction","title":"Tailscale introduction","text":"<p>Tailscale is a secure, open-source Virtual Private Network (VPN) service that allows users to connect devices and services across networks.</p> <p>How it works: Tailscale creates a peer-to-peer mesh network, called a tailnet, that allows devices to connect directly to each other. This differs from traditional VPNs, which tunnel all traffic through a central gateway server.</p> <p>You are making it so your two geographically separate devices appear to be on one network, like both devices being on your home network even when you are on the other side of the world. This allows you to access all your home hosted services!</p>"},{"location":"homelabseries/EP9_tailscale/#our-video-on-this-topic","title":"Our Video on this topic","text":""},{"location":"homelabseries/EP9_tailscale/#create-a-proxmox-vm","title":"Create a Proxmox VM","text":"<p>First open Proxmox and create an Ubuntu VM, default settings are fine kind of okay: 15gb of storage, 2 vCPU, 2GB of RAM (you can lower this to a half gig of RAM AFTER install). Everything else can stay the same.</p> <p> </p> Warning Box Example <p>During the actual Ubuntu install ensure you enable the SSH option!</p> <p> </p> <p>Next login to your VM using SSH</p> <p> </p>"},{"location":"homelabseries/EP9_tailscale/#installing-tailscale","title":"Installing Tailscale","text":"<p>Now we can get the download script here</p> <p>(Linux) Others operating systems can be found on their site. <pre><code>curl -fsSL https://tailscale.com/install.sh | sh\n</code></pre></p> <p> </p> <p>Type that command into your VM to install Tailscale</p> <p> </p> <p>After the install is complete, we need to run the command</p> <p><pre><code>sudo tailscale up\n</code></pre> Which will present us with our URL to login/create an account for our Tailscale network.</p> <p> </p> <p>Use whatever method you prefer to make your account</p> <p> </p> <p>In our case we are going to use for personal use (which is true) but it is also free for three users and 100 devices.</p> <p> </p>"},{"location":"homelabseries/EP9_tailscale/#make-tailscale-an-exit-node-for-lan-access","title":"Make Tailscale an Exit Node for LAN access","text":"<p>There is one more step we need to perform by SSHing into our Tailscale server. We need to make it an exit node, this allows your remote connections to exit your Tailscale VM and access the other VMs on your home network.</p> <p>There are three commands we need to type in to make our Tailscale VM the exit node:</p> <ol> <li>Advertise a device as an exit node config file:</li> </ol> <p><pre><code>echo 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.d/99-tailscale.conf\necho 'net.ipv6.conf.all.forwarding = 1' | sudo tee -a /etc/sysctl.d/99-tailscale.conf\nsudo sysctl -p /etc/sysctl.d/99-tailscale.conf\n</code></pre> 2. Then we need to advertise the exit node by restarting the tailscale service:</p> <p><pre><code>sudo tailscale set --advertise-exit-node\nsudo tailscale up\n</code></pre> 3. Then we need to advertise our route including your networks CIDR notation:</p> <pre><code>sudo tailscale up --advertise-routes=&lt;your LAN network IP range&gt;/24 --reset\n</code></pre> <p> </p> <p>After that you need to go login to Tailscales site and find your VM now assigned as an exit node, click the three dots ... and select Edit route settings</p> <p> </p> <p>After that, just select the two boxes and you have set up your exit node.</p> <p> </p>"},{"location":"homelabseries/EP9_tailscale/#adding-other-devices-to-your-mesh-network-for-remote-access","title":"Adding other devices to your MESH network for remote access","text":"<p>Now you need to add a device that will create your mesh Tailscale network. In our example we have downloaded Tailscale on our phone and will connect back to our network through Tailscale to upload pictures to our Nextcloud backup server.</p> <ol> <li>Tailscale for Android can be found here</li> <li>Tailscale for Iphones can be found here</li> <li>Tailscale for Windows/MacOS can be found here</li> </ol> <p> </p>"},{"location":"homelabseries/EP9_tailscale/#connecting-to-our-home-network-remotely-using-tailscale","title":"Connecting to our home network remotely using Tailscale","text":"<p>On our phone we have installed the Tailscale app and logged into the same account that we used when creating our server.</p> <p> </p> <p>You will then be able to see all the devices connected to your mesh network as well as the ability to turn Tailscale on or off.</p> <p> </p> <p>Now your phone is just like being on your home network. We can open the Nextcloud app and put the LOCAL IP address of our Nextcloud backup server and connect to it as if we were on our home network.</p> <p> </p> <p>Look at that, now you have a way to upload your very important vacation images to your home NAS/Nextcloud backup server remotely! </p> <p> </p>"},{"location":"homelabseries/EP9_tailscale/#managing-tailscale-machines","title":"Managing Tailscale machines","text":"<p>Lastly, you can also login to your Tailscale account and manage your devices and see what devices have access to your mesh network.</p> <p> </p>"},{"location":"homelabseries/EP9_tailscale/#conclusion","title":"Conclusion","text":"<p>Now you are able to access ANY device on your local home network via your Tailscale server, this means your NAS, game servers, Plex server, etc. Tailscale is like your computer or phone being on your home network where you can browse to anything locally.</p>"},{"location":"homelabseries/EP9_tailscale/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"homelabseries/LearntoHomelab/","title":"LearntoHomelab","text":""},{"location":"softwaretutorials/HowToInstallMinecraftOnTrueNAS/","title":"MineCraft on TrueNas","text":"<p>Hey all, in today\u2019s video, I am going to cover setting up ANY version of Minecraft on TrueNas (Minecraft Vanilla, Spigot, Bucket, Paper, Folia, Fabric, Forge, NeoForge, CurseForge, Modrinth, Feed the Beast, Pufferfish, etc., etc.)</p>"},{"location":"softwaretutorials/HowToInstallMinecraftOnTrueNAS/#installing-minecraft","title":"Installing Minecraft","text":"<ol> <li>Log in to your TrueNas machine. If you have not set up TrueNas before, check out our video here</li> <li>Click the apps page on the left!  </li> <li>Click Discover Apps on the top right (the blue button).  </li> <li>In the search bar, type Minecraft!  </li> <li>Select Minecraft Server Java or Bedrock (Bedrock is the cross-platform one, where Java is PC only but many find it to be a better, more original experience to original Minecraft).</li> <li>Select install!  </li> </ol>"},{"location":"softwaretutorials/HowToInstallMinecraftOnTrueNAS/#application-settings","title":"Application Settings","text":"<ol> <li>Name your Minecraft server</li> <li>Select your time zone</li> <li>Check the EULA agreement box</li> <li>Select your Image</li> <li>Select your Type</li> <li>Select your Game Mode</li> <li>Name your Server!</li> </ol> <ol> 8. Add a Recon Password! </ol> <ol> 9.  Scroll down to _Network Configuration_ </ol> <ol> 10. Select _Host IP_ under the Host IP section.! </ol> <ol> 11. Scroll down to Resource Configuration </ol> <ol> 12. Set the CPU and RAM count for your machine </ol> <ol> 13. Select Install! </ol>"},{"location":"softwaretutorials/HowToInstallMinecraftOnTrueNAS/#launch-minecraft","title":"Launch Minecraft","text":"<ol> <li>Launch Minecraft</li> <li>Go to Multiplayer</li> <li>Select direct connection</li> <li>Type in your TrueNAS Machine IP and the port 25535 (For Java Vanilla)</li> </ol> <p>There you have it, a Minecraft server setup in just a few minutes!</p>"},{"location":"softwaretutorials/HowToInstallMinecraftOnTrueNAS/#editing-minecraft-server-files","title":"Editing Minecraft Server Files","text":"<ol> <li> <p>On the Apps page you will select the CLI under the app details!  </p> </li> <li> <p>Within the CLI, you will type</p> <pre><code>ls\n</code></pre> </li> </ol> <p>This gives you a list of files to edit!</p> <p> </p> <ol> 3.  We will use Nano to edit the server.properties location. </ol> <pre><code>nano server.properties\n</code></pre> <p>Within there, you can find important information, such as port numbers, depending on the version you installed, and other server information you may want to change.</p> <p> </p> <p>That is it, I hope you guys enjoyed this tutorial, and stay tuned for more projects coming to the channel soon!</p>"},{"location":"softwaretutorials/HowToInstallMinecraftOnTrueNAS/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"softwaretutorials/MikrotikAPManagedByOPNsense/","title":"I Made My Mikrotik AP Fully Managed by OPNsense \u2013 No More DHCP Chaos","text":""},{"location":"softwaretutorials/MikrotikAPManagedByOPNsense/#winbox-mikrotik-ap-overview","title":"WinBox Mikrotik AP Overview","text":"<p>Please see the image below, this will show you all sections (tabs) you need to have open, in order to perform the tasks found in this video.</p> <p> </p>"},{"location":"softwaretutorials/MikrotikAPManagedByOPNsense/#configuring-your-mikrotik-wireless-access-point-to-get-dhcp-leases-from-your-root-dhcp-server-opnsense","title":"Configuring your Mikrotik Wireless Access Point to get DHCP leases from your root DHCP server (OPNsense)","text":"<ol> <li>Login to your Mikrotik Access point with a direct Ethernet Connection to your PC with the MAC address found on the sticker on the bottom of the access point (the login credentials will be found there too)</li> <li>We are going to open the bridge tab</li> <li>Under the bridge menu, go to the ports tab.</li> <li>Add all interfaces under here, you should just need to add ether 1 to BRIDGE if you have the default config setup.</li> <li>Go to the interfaces list window</li> <li>Under the interfaces window ensure the interfaces list tab has LAN set to bridge and WAN set to ether 1 (because we have the internet access connected to Ethernet 1)</li> <li>Open DHCP Client under IP \u2192DHCP Client</li> <li>Create/Set the DHCP client to the interface bridge</li> <li>Open DHCP Server under: IP Tab \u2192 DHCP Server</li> <li>Disable the DHCP server</li> <li>Go to the Networks tab under the DHCP server window and disable that too</li> <li>Open the address list under IP \u2192 Addresses (verify that you get the correct network for your homes network)</li> <li>Configure Wi-Fi networks and settings under the Wi-Fi tab. (Here you can double click and set the SSID, band, channel width, passphrase, authentication type, under the configuration, channel, and security tabs)</li> </ol>"},{"location":"softwaretutorials/MikrotikAPManagedByOPNsense/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"softwaretutorials/ModdedMinecraftOnTrueNAS/","title":"Setup a Modded Minecraft Server on TrueNAS Scale with CurseForge","text":""},{"location":"softwaretutorials/ModdedMinecraftOnTrueNAS/#setup-a-truenas-smb-share-if-you-dont-have-one","title":"Setup a TrueNAS SMB Share (if you don\u2019t have one)","text":"<p>If you do NOT have a TrueNAS SMB share setup and connected to your local computer VIA the file explorer, please watch our video here first. Specifically from the timestamps 00:00 - 06:21 (you do not need to follow the rest of setting up Jellyfin.</p> <p>After completing the SMB share continue on with the following: </p> Warning Box Example <p>Now open File Explorer on your machine (windows shortcut \u229e + E and create a folder on your SMB Share called \u201cMinecraft\u201d</p>"},{"location":"softwaretutorials/ModdedMinecraftOnTrueNAS/#installing-modded-minecraft-with-curseforge-overview","title":"Installing Modded Minecraft With CurseForge Overview","text":"<p>Due to CurseForge being one of the oldest and most popular Minecraft modded methods, this is the one we are going to use in this video. This method is virtually the same for all other modded platforms as shown at the beginning of this article.</p> <ol> <li>You will need to download the CurseForge app here</li> <li>The mods for your forge server can be found here</li> <li>We are going to use this pack found here</li> </ol>"},{"location":"softwaretutorials/ModdedMinecraftOnTrueNAS/#setting-up-modded-minecraft-on-truenas","title":"Setting up Modded Minecraft on TrueNAS","text":""},{"location":"softwaretutorials/ModdedMinecraftOnTrueNAS/#pick-your-mod-pack-from-curseforge","title":"Pick your Mod Pack from CurseForge","text":"<p>The first thing we need to do is pick what modpack we are going to install, we are going to use this one here.</p> <p>We have four main things we need to pay attention to when picking our modded Minecraft pack:</p> <ol> <li>Select the files tab to see the files for the modpack.</li> <li>The pack files (this is what we will download to add to the server)</li> <li>What version of Minecraft this pack supports.</li> <li>What Mod Loader we will need to select in TrueNAS.</li> </ol> <p> </p> <p>Now select your pack (option 2 as shown above). You will be brought to virtually the same screen as shown below but we have an additional files tab, this is where we get the SERVER side files:</p> <p> </p> <p>Under this tab, go ahead and download the server side files:</p> <p> </p>"},{"location":"softwaretutorials/ModdedMinecraftOnTrueNAS/#setup-a-minecraft-server-on-truenas","title":"Setup a Minecraft Server on TrueNAS","text":"<p>Go ahead and log into your TrueNAS machine</p> <p> </p> <p>Select your apps Tab on the far left and then discover apps on the top right. Search for \u201cMinecraft\u201d and select the Minecraft Server (Java) version.</p> <p>Either click install/install another instance if you already have a version of Minecraft running:</p> <p> </p>"},{"location":"softwaretutorials/ModdedMinecraftOnTrueNAS/#modded-minecraft-truenas-server-settings","title":"Modded Minecraft TrueNAS Server Settings","text":"<p>Now this is the super important step! We need to ensure that all our settings are correct or our modded Minecraft server will not boot.</p> <p>Here are the steps (all steps assume you are typing the settings in, I am giving you the title of the box at which you need to fill in):</p> <ol> <li>Application name</li> <li>timezone</li> <li>EULA (check the box)</li> <li>Image Selector (if you install an older modpack that requires an older java version, you may need to google what version of java you need to set this to).</li> <li>Type (this information is found on your modpacks page, in our case the mod loader is NeoForge).</li> <li> <p>Version (this is the version of Minecraft required by the modpack, i.e. 1.21.1).  </p> </li> <li> <p>RCON Password (set a password for RCON).</p> </li> </ol> <p> </p> <ol> <li>Additional Environment Variables (this page will differ on your modpack potentially but for CurseForge we will need to use two variables, \u201cCF_PAGE_URL\u201d AND \u201cCF_API_KEY\u201d. The page URL will be for your modpack, and the API key will come from your CurseForge profile found here)</li> <li>We are going to add two more variables called \u201cINIT_MEMORY\u201d and \u201cMAX_MEMORY\u201d where in our case of this modpack are going to be set to 16 gigabytes.</li> </ol> <p> </p> <ol> <li>Set Host IP\u2019s to the default under the Network Configuration (you will need to change the ports if you already have other Minecraft servers running on your TrueNAS machine):</li> </ol> <p> </p> <ol> <li>Under Storage Configuration, type (set to Host Path), enable ACL, and set your Host Path to a folder on your SMB share called Minecraft, which you created in an earlier step).</li> <li> <p>ACL Options (check Force Flag)  </p> </li> <li> <p>CPU (set CPU to however many cores you want, we recommend 4 cores for the mod pack used in this example).</p> </li> <li>Memory (set the memory to between 12 - 16 gigabytes but it must match whatever you set for the variables in step 9).</li> <li>Click Save/update.</li> </ol> <p> </p> <p>If your server starts to deploy, you can go ahead and stop it on the far right</p> <p> </p> <p>Now open the SMB share with the location of your Minecraft Server folder and delete any files in there</p> <p> </p> <p>Now go to your downloads folder and grab the server files you downloaded from CurseForge, right click on them, and extract all</p> <p> </p> <p>Now open that unzipped folder, see the highlighted items, these are the items we are going to copy into the Minecraft folder on our TrueNAS SMB Share</p> <p> </p> <p>Now go back over to your TrueNAS dashboard and boot your Minecraft server with the files above inside that folder.</p> <p> </p> <p>After it starts we can go over to the Workloads section and View Logs well its booting up to ensure we have no issues, if we do, we can take those error codes and ask something like ChatGPT what the issue is to help us get it running.</p> <p> </p>"},{"location":"softwaretutorials/ModdedMinecraftOnTrueNAS/#adding-the-modpack-to-curseforge","title":"Adding the Modpack to CurseForge","text":"<p>Now that we have handled the server side of the modded Minecraft server we need to handle our client side. Open the CurseForge app and select Minecraft:</p> <p> </p> <p>Search for the same modpack you want to use, and click install, let it install. After it is installed you will see it under the My Modpacks Tab seen in the image below:</p> <p> </p> <p>Hover over it, it will say play, select that and it will ask you to login to your Minecraft account if you have not done so before:</p> <p> </p> <p>After you login, at the top of the launcher you should see your modded Minecraft version and a play button:</p> <p> </p> <p>Wait for Minecraft to boot, go to your multiplayer tab, and then put in the IP and port number of your server and connect to your new Modded Minecraft server on TrueNAS!</p> <p> </p> <p>There you have it, your very own Modded Minecraft Server!</p> <p> </p>"},{"location":"softwaretutorials/ModdedMinecraftOnTrueNAS/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"softwaretutorials/affineorkspaces/","title":"Affine Workspaces","text":""},{"location":"softwaretutorials/affineorkspaces/#how-to-install-affine-workspace-notes-app-in-your-homelab-step-by-step-tutorial","title":"How to Install Affine Workspace Notes App in Your Homelab  Step-by-Step Tutorial","text":""},{"location":"softwaretutorials/affineorkspaces/#affine-hardware-requirements","title":"Affine Hardware Requirements","text":"<ol> <li>100 MB storage space growth per 1k documents with 1k words per document, so you decide how much you think you'll need (leave around 10 gigs for the OS/docker too).</li> <li>4 Cores (you can set 4 cores), but it will rarely use them unless you are actively performing hard tasks.</li> <li>4 GB of RAM (for docs with over 10K words or 2GB for more normal usage).</li> <li>A reverse proxy, we will use the Nginx Proxy Manager from our video you can find here</li> </ol>"},{"location":"softwaretutorials/affineorkspaces/#create-lxc-on-proxmox","title":"Create LXC on Proxmox","text":"<p>Go ahead and create an LXC within your Proxmox environment with the recommended settings above.</p>"},{"location":"softwaretutorials/affineorkspaces/#install-dockerdocker-compose","title":"Install Docker/Docker Compose","text":"<ol> <li>Install using the apt repo.</li> </ol> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre> <ol> <li>Install the Docker packages.</li> </ol> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p>Verify that the installation is successful by running the\u00a0<code>hello-world</code>\u00a0image:</p> <pre><code>sudo docker run hello-world\n</code></pre> <p>Verify the compose version:</p> <pre><code>docker compose version\n</code></pre>"},{"location":"softwaretutorials/affineorkspaces/#installing-affine","title":"Installing Affine","text":"<p>It is best practice to create a dedicated directory for each Docker container to better backup data.</p> <pre><code>mkdir affine\ncd affine\n</code></pre> <p>We are going to download the latest version of Affine</p> <pre><code>wget -O docker-compose.yml https://github.com/toeverything/affine/releases/latest/download/docker-compose.yml\n</code></pre> <p>A <code>.env</code> A file is required to configure Docker volumes, mapping them to a specific location where the user data will be persisted, and other required environment variables.</p> <pre><code>wget -O .env https://github.com/toeverything/affine/releases/latest/download/default.env.example\n</code></pre>"},{"location":"softwaretutorials/affineorkspaces/#editing-the-env-file","title":"Editing the .env file","text":"<p>Here is the default install you will see when you open the Affine .env file</p> <pre><code># select a revision to deploy, available values: stable, beta, canary\nAFFINE_REVISION=stable\n\n# set the port for the server container it will expose the server on\nPORT=3010\n\n# set the host for the server for outgoing links\n# AFFINE_SERVER_HTTPS=true\n# AFFINE_SERVER_HOST=affine.yourdomain.com\n# or\n# AFFINE_SERVER_EXTERNAL_URL=https://affine.yourdomain.com\n\n# position of the database data to persist\nDB_DATA_LOCATION=~/.affine/self-host/postgres/pgdata\n# position of the upload data(images, files, etc.) to persist\nUPLOAD_LOCATION=~/.affine/self-host/storage\n# position of the configuration files to persist\nCONFIG_LOCATION=~/.affine/self-host/config\n\n# database credentials\nDB_USERNAME=affine\nDB_PASSWORD=\nDB_DATABASE=affine\n</code></pre> <p>You can access this configuration file with nano within your Affine directory</p> <pre><code>nano .env\n</code></pre> <p>Change the following variables and uncomment them by removing the # (pound sign) so you can access Affine exclusively over a secure connection:</p> <pre><code>AFFINE_SERVER_HTTPS=true\nAFFINE_SERVER_HOST=affine.yourdomain.com\n</code></pre> <p>Now we can start Affine with the following Docker command:</p> <pre><code>docker compose down\ndocker compose up -d\n</code></pre>"},{"location":"softwaretutorials/affineorkspaces/#adding-affine-to-nginx-proxy-manager","title":"Adding Affine to Nginx Proxy Manager","text":"<p>Log in to your Nginx Proxy Manager and perform the following:</p> <ol> <li>Select hosts from the top</li> <li>Select proxy hosts</li> <li>Select Add proxy host top right</li> <li>Input the URL you set earlier in the .env file</li> <li>Add the IP address and put port 3010</li> <li>Leave the HTTP option as is</li> <li>Turn on websockets support</li> <li>Go to the SSL tab and add your SSL certificate</li> <li>Select save</li> <li>Now, click the domain name in your</li> </ol>"},{"location":"softwaretutorials/affineorkspaces/#you-will-log-in-with","title":"You Will Log in with:","text":"<p>You will log in to the Affine admin with the /admin subpage or the normal page without it:</p> <pre><code>http://&lt;ip&gt;:3010/admin\n</code></pre>"},{"location":"softwaretutorials/affineorkspaces/#accept-affine-cloud","title":"Accept Affine Cloud","text":"<p>This error is not very clear, because this is self-hosted, it does not realize you are not connected to the cloud, so when it says sink with the cloud, it means it will store your data within your PostgreSQL database locally, because that is what is set in our config files by default.</p>"},{"location":"softwaretutorials/affineorkspaces/#upgrading-affine","title":"Upgrading Affine","text":"<p>If you ever need to update to the latest release, you can follow their documentation here</p> <p>All their related documentation can be found here</p>"},{"location":"softwaretutorials/affineorkspaces/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Reddit</p> <p>Rumble</p>"},{"location":"softwaretutorials/kasm/","title":"Kasm","text":"<p>We will be using the following documentation to install KASM here</p>"},{"location":"softwaretutorials/kasm/#installing-kasm","title":"Installing KASM","text":"<p>First, we are going to create a VM on Proxmox with at least their minimum requirements:</p> CPU 2 cores Memory 4GB Storage 50GB (SSD) <p>Next, we are going to use their install script:</p> <pre><code>cd /tmp\ncurl -O https://kasm-static-content.s3.amazonaws.com/kasm_release_1.17.0.7f020d.tar.gz\ntar -xf kasm_release_1.17.0.7f020d.tar.gz\nsudo bash kasm_release/install.sh\n</code></pre> <p>After that, we can log in to KASM in our browser:</p> <ul> <li>Log in to the Web Application running on port 443</li> </ul> <pre><code>https://&lt;WEBAPP_SERVER&gt;:443\n</code></pre> <ul> <li>The Default usernames are admin@kasm.local and user@kasm.local.</li> </ul> <p>After installation, you will be presented with the passwords needed to log in just like the below screenshot:</p> <p> </p> <p>Super simple, I know! Take the time to look around Kasm or follow the video below if you are done watching ours!</p> <p>After our tutorial, if you would like to go into more depth, you can check out KASMs video here</p>"},{"location":"softwaretutorials/proxmoxramupgrade/","title":"Learn To Upgrade Your Proxmox Clusters RAM","text":"<p>Hey guys, in this video I will show you how to do the following: 1. Properly show down Virtual Machines and Containers in Proxmox 2. Ensure your VM's and Containers will boot up after restart 3. How to upgrade your Proxmox nodes RAM 4. Verify that all services are back online</p>"},{"location":"softwaretutorials/proxmoxramupgrade/#container-auto-boot-in-proxmox-setting","title":"Container Auto Boot in Proxmox Setting","text":"<p>First login to your Proxmox node/cluster and follow the image below. Ensure start at boot is set to yes</p> <p> </p>"},{"location":"softwaretutorials/proxmoxramupgrade/#virtual-machine-auto-boot-in-proxmox-setting","title":"Virtual Machine Auto Boot in Proxmox Setting","text":"<p>You will do the exact same thing for a Virtual Machine too.</p> <p> </p>"},{"location":"softwaretutorials/proxmoxramupgrade/#change-out-your-ram","title":"Change out your RAM","text":"<p>Depending on your machine, go ahead and change out your ram right now and then boot your machine back up. </p>"},{"location":"softwaretutorials/proxmoxramupgrade/#verify-containers-and-virtual-machines-are-back-online-in-proxmox","title":"Verify Containers and Virtual Machines are Back Online in Proxmox","text":"<p>Log back into your Proxmox dashboard and ensure all the container and virtual machines are back online (indicated by the green right point arrow). </p> <p> </p>"},{"location":"softwaretutorials/proxmoxramupgrade/#follow-us-on-social-media","title":"Follow Us on Social Media","text":"<p>YouTube</p> <p>Discord</p> <p>Patreon</p> <p>Reddit</p> <p>Rumble</p>"}]}